   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f2xx_i2c.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.I2C_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	I2C_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	I2C_DeInit:
  25              	.LFB56:
  26              		.file 1 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx_i2c.c"
   1:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
   2:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   ******************************************************************************
   3:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @file    stm32f2xx_i2c.c
   4:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @author  MCD Application Team
   5:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @version V1.1.2
   6:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @date    05-March-2012 
   7:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief   This file provides firmware functions to manage the following 
   8:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          functionalities of the Inter-integrated circuit (I2C)
   9:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           - Initialization and Configuration
  10:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           - Data transfers
  11:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           - PEC management
  12:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           - DMA transfers management
  13:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           - Interrupts, events and flags management 
  14:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           
  15:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *  @verbatim
  16:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *    
  17:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          ===================================================================
  18:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                                 How to use this driver
  19:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          ===================================================================
  20:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          1. Enable peripheral clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2Cx, ENABLE)
  21:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *             function for I2C1, I2C2 or I2C3.
  22:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  23:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          2. Enable SDA, SCL  and SMBA (when used) GPIO clocks using 
  24:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *             RCC_AHBPeriphClockCmd() function. 
  25:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  26:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          3. Peripherals alternate function: 
  27:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  28:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  29:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                 - Configure the desired pin in alternate function by:
  30:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  32:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                 - Call GPIO_Init() function
  34:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                 Recommended configuration is Push-Pull, Pull-up, Open-Drain.
  35:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                 Add an external pull up if necessary (typically 4.7 KOhm).      
  36:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *        
  37:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          4. Program the Mode, duty cycle , Own address, Ack, Speed and Acknowledged
  38:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *             Address using the I2C_Init() function.
  39:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  40:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          5. Optionally you can enable/configure the following parameters without
  41:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *             re-initialization (i.e there is no need to call again I2C_Init() function):
  42:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *              - Enable the acknowledge feature using I2C_AcknowledgeConfig() function
  43:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *              - Enable the dual addressing mode using I2C_DualAddressCmd() function
  44:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *              - Enable the general call using the I2C_GeneralCallCmd() function
  45:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *              - Enable the clock stretching using I2C_StretchClockCmd() function
  46:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *              - Enable the fast mode duty cycle using the I2C_FastModeDutyCycleConfig()
  47:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                function.
  48:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *              - Configure the NACK position for Master Receiver mode in case of 
  49:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                2 bytes reception using the function I2C_NACKPositionConfig().  
  50:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *              - Enable the PEC Calculation using I2C_CalculatePEC() function
  51:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *              - For SMBus Mode: 
  52:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                   - Enable the Address Resolution Protocol (ARP) using I2C_ARPCmd() function
  53:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                   - Configure the SMBusAlert pin using I2C_SMBusAlertConfig() function
  54:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  55:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          6. Enable the NVIC and the corresponding interrupt using the function 
  56:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *             I2C_ITConfig() if you need to use interrupt mode. 
  57:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  58:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          7. When using the DMA mode 
  59:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                   - Configure the DMA using DMA_Init() function
  60:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                   - Active the needed channel Request using I2C_DMACmd() or
  61:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                     I2C_DMALastTransferCmd() function.
  62:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *              @note When using DMA mode, I2C interrupts may be used at the same time to
  63:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                    control the communication flow (Start/Stop/Ack... events and errors).
  64:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * 
  65:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          8. Enable the I2C using the I2C_Cmd() function.
  66:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * 
  67:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          9. Enable the DMA using the DMA_Cmd() function when using DMA mode in the 
  68:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *             transfers. 
  69:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  70:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *  @endverbatim
  71:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *  
  72:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   ******************************************************************************
  73:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @attention
  74:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  75:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  76:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  77:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  78:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * You may not use this file except in compliance with the License.
  79:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * You may obtain a copy of the License at:
  80:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  81:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  82:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  83:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * Unless required by applicable law or agreed to in writing, software 
  84:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  85:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  86:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * See the License for the specific language governing permissions and
  87:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * limitations under the License.
  88:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *
  89:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   ******************************************************************************
  90:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
  91:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
  92:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /* Includes ------------------------------------------------------------------*/
  93:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** #include "stm32f2xx_i2c.h"
  94:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** #include "stm32f2xx_rcc.h"
  95:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
  96:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
  97:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @{
  98:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
  99:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /** @defgroup I2C 
 101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief I2C driver modules
 102:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @{
 103:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */ 
 104:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 105:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 106:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /* Private define ------------------------------------------------------------*/
 107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** #define CR1_CLEAR_MASK    ((uint16_t)0xFBF5)      /*<! I2C registers Masks */
 109:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** #define FLAG_MASK         ((uint32_t)0x00FFFFFF)  /*<! I2C FLAG mask */
 110:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** #define ITEN_MASK         ((uint32_t)0x07000000)  /*<! I2C Interrupt Enable mask */
 111:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 112:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /* Private macro -------------------------------------------------------------*/
 113:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /* Private variables ---------------------------------------------------------*/
 114:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 115:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /* Private functions ---------------------------------------------------------*/
 116:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 117:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /** @defgroup I2C_Private_Functions
 118:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @{
 119:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 120:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 121:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /** @defgroup I2C_Group1 Initialization and Configuration functions
 122:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *  @brief   Initialization and Configuration functions 
 123:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *
 124:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @verbatim   
 125:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================
 126:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                    Initialization and Configuration functions
 127:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================  
 128:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 129:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @endverbatim
 130:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @{
 131:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 132:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 133:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 134:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Deinitialize the I2Cx peripheral registers to their default reset values.
 135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 136:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 137:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 138:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_DeInit(I2C_TypeDef* I2Cx)
 139:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
  27              		.loc 1 139 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 140:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 141:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 143:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2Cx == I2C1)
  37              		.loc 1 143 0
  38 0002 134B     		ldr	r3, .L7
  39 0004 9842     		cmp	r0, r3
  40 0006 07D1     		bne	.L2
 144:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable I2C1 reset state */
 146:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
  41              		.loc 1 146 0
  42 0008 4FF40010 		mov	r0, #2097152
  43              	.LVL1:
  44 000c 0121     		movs	r1, #1
  45 000e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  46              	.LVL2:
 147:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Release I2C1 from reset state */
 148:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);    
  47              		.loc 1 148 0
  48 0012 4FF40010 		mov	r0, #2097152
  49 0016 14E0     		b	.L5
  50              	.LVL3:
  51              	.L2:
 149:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 150:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else if (I2Cx == I2C2)
  52              		.loc 1 150 0
  53 0018 0E49     		ldr	r1, .L7+4
  54 001a 8842     		cmp	r0, r1
  55 001c 07D1     		bne	.L3
 151:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 152:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable I2C2 reset state */
 153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, ENABLE);
  56              		.loc 1 153 0
  57 001e 4FF48000 		mov	r0, #4194304
  58              	.LVL4:
  59 0022 0121     		movs	r1, #1
  60 0024 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  61              	.LVL5:
 154:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Release I2C2 from reset state */
 155:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, DISABLE);      
  62              		.loc 1 155 0
  63 0028 4FF48000 		mov	r0, #4194304
  64 002c 09E0     		b	.L5
  65              	.LVL6:
  66              	.L3:
 156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 157:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else 
 158:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     if (I2Cx == I2C3)
  67              		.loc 1 159 0
  68 002e 0A4A     		ldr	r2, .L7+8
  69 0030 9042     		cmp	r0, r2
  70 0032 0BD1     		bne	.L1
 160:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     {
 161:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       /* Enable I2C3 reset state */
 162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, ENABLE);
  71              		.loc 1 162 0
  72 0034 4FF40000 		mov	r0, #8388608
  73              	.LVL7:
  74 0038 0121     		movs	r1, #1
  75 003a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  76              	.LVL8:
 163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       /* Release I2C3 from reset state */
 164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, DISABLE);     
  77              		.loc 1 164 0
  78 003e 4FF40000 		mov	r0, #8388608
  79              	.L5:
  80 0042 0021     		movs	r1, #0
 165:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     }
 166:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 167:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
  81              		.loc 1 167 0
  82 0044 BDE80840 		pop	{r3, lr}
 164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, DISABLE);     
  83              		.loc 1 164 0
  84 0048 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  85              	.LVL9:
  86              	.L1:
  87 004c 08BD     		pop	{r3, pc}
  88              	.L8:
  89 004e 00BF     		.align	2
  90              	.L7:
  91 0050 00540040 		.word	1073763328
  92 0054 00580040 		.word	1073764352
  93 0058 005C0040 		.word	1073765376
  94              		.cfi_endproc
  95              	.LFE56:
  97              		.section	.text.I2C_Init,"ax",%progbits
  98              		.align	1
  99              		.global	I2C_Init
 100              		.thumb
 101              		.thumb_func
 103              	I2C_Init:
 104              	.LFB57:
 168:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 169:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 170:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Initializes the I2Cx peripheral according to the specified 
 171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         parameters in the I2C_InitStruct.
 172:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           
 173:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency 
 174:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         (I2C peripheral input clock) must be a multiple of 10 MHz.  
 175:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           
 176:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 177:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that contains 
 178:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         the configuration information for the specified I2C peripheral.
 179:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 180:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
 182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 105              		.loc 1 182 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 16
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              	.LVL10:
 110 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 20
 113              		.cfi_offset 4, -20
 114              		.cfi_offset 5, -16
 115              		.cfi_offset 6, -12
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 184:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint16_t result = 0x04;
 185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint32_t pclk1 = 8000000;
 186:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   RCC_ClocksTypeDef  rcc_clocks;
 187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_CLOCK_SPEED(I2C_InitStruct->I2C_ClockSpeed));
 190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 191:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_InitStruct->I2C_DutyCycle));
 192:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 193:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
 194:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 195:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 196:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /*---------------------------- I2Cx CR2 Configuration ------------------------*/
 197:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get the I2Cx CR2 value */
 198:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg = I2Cx->CR2;
 118              		.loc 1 198 0
 119 0002 8688     		ldrh	r6, [r0, #4]
 120              	.LVL11:
 182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 121              		.loc 1 182 0
 122 0004 0446     		mov	r4, r0
 123 0006 85B0     		sub	sp, sp, #20
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 40
 199:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_CR2_FREQ);
 126              		.loc 1 200 0
 127 0008 26F03F00 		bic	r0, r6, #63
 128              	.LVL12:
 182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 129              		.loc 1 182 0
 130 000c 0D46     		mov	r5, r1
 131              		.loc 1 200 0
 132 000e 0104     		lsls	r1, r0, #16
 133              	.LVL13:
 201:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get pclk1 frequency value */
 202:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   RCC_GetClocksFreq(&rcc_clocks);
 134              		.loc 1 202 0
 135 0010 6846     		mov	r0, sp
 200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_CR2_FREQ);
 136              		.loc 1 200 0
 137 0012 0E0C     		lsrs	r6, r1, #16
 138              	.LVL14:
 139              		.loc 1 202 0
 140 0014 FFF7FEFF 		bl	RCC_GetClocksFreq
 141              	.LVL15:
 203:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 204:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Set frequency bits depending on pclk1 value */
 205:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   freqrange = (uint16_t)(pclk1 / 1000000);
 142              		.loc 1 205 0
 143 0018 2C4A     		ldr	r2, .L18
 203:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 144              		.loc 1 203 0
 145 001a 0299     		ldr	r1, [sp, #8]
 146              	.LVL16:
 147              		.loc 1 205 0
 148 001c B1FBF2F0 		udiv	r0, r1, r2
 149 0020 87B2     		uxth	r7, r0
 150              	.LVL17:
 206:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg |= freqrange;
 151              		.loc 1 206 0
 152 0022 3E43     		orrs	r6, r6, r7
 153              	.LVL18:
 207:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Write to I2Cx CR2 */
 208:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->CR2 = tmpreg;
 154              		.loc 1 208 0
 155 0024 A680     		strh	r6, [r4, #4]	@ movhi
 209:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 210:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /*---------------------------- I2Cx CCR Configuration ------------------------*/
 211:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Disable the selected I2C peripheral to configure TRISE */
 212:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 156              		.loc 1 212 0
 157 0026 2388     		ldrh	r3, [r4, #0]
 158 0028 23F00102 		bic	r2, r3, #1
 159 002c 1304     		lsls	r3, r2, #16
 160 002e 1A0C     		lsrs	r2, r3, #16
 161 0030 2280     		strh	r2, [r4, #0]	@ movhi
 162              	.LVL19:
 213:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Reset tmpreg value */
 214:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Clear F/S, DUTY and CCR[11:0] bits */
 215:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg = 0;
 216:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Configure speed in standard mode */
 218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_InitStruct->I2C_ClockSpeed <= 100000)
 163              		.loc 1 218 0
 164 0032 2B68     		ldr	r3, [r5, #0]
 165 0034 264A     		ldr	r2, .L18+4
 166 0036 9342     		cmp	r3, r2
 167 0038 0AD8     		bhi	.L10
 219:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 220:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Standard mode speed calculate */
 221:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
 168              		.loc 1 221 0
 169 003a 5B00     		lsls	r3, r3, #1
 170 003c B1FBF3F0 		udiv	r0, r1, r3
 171              	.LVL20:
 222:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Test if CCR value is under 0x4*/
 223:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     if (result < 0x04)
 224:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     {
 225:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       /* Set minimum allowed value */
 226:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       result = 0x04;  
 227:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     }
 228:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Set speed value for standard mode */
 229:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     tmpreg |= result;	  
 230:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Set Maximum Rise Time for standard mode */
 231:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->TRISE = freqrange + 1; 
 172              		.loc 1 231 0
 173 0040 0137     		adds	r7, r7, #1
 174              	.LVL21:
 221:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
 175              		.loc 1 221 0
 176 0042 83B2     		uxth	r3, r0
 177              	.LVL22:
 178              		.loc 1 231 0
 179 0044 BFB2     		uxth	r7, r7
 180              	.LVL23:
 181 0046 2784     		strh	r7, [r4, #32]	@ movhi
 229:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     tmpreg |= result;	  
 182              		.loc 1 229 0
 183 0048 032B     		cmp	r3, #3
 184 004a 98BF     		it	ls
 185 004c 0423     		movls	r3, #4
 186              	.LVL24:
 187 004e 20E0     		b	.L12
 188              	.LVL25:
 189              	.L10:
 232:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 233:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Configure speed in fast mode */
 234:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency (I2C peripheral
 235:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****      input clock) must be a multiple of 10 MHz */
 236:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else /*(I2C_InitStruct->I2C_ClockSpeed <= 400000)*/
 237:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 238:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     if (I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_2)
 190              		.loc 1 238 0
 191 0050 EE88     		ldrh	r6, [r5, #6]
 192 0052 4BF6FF72 		movw	r2, #49151
 193 0056 9642     		cmp	r6, r2
 194 0058 04D1     		bne	.L13
 239:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     {
 240:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 2 */
 241:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 3));
 195              		.loc 1 241 0
 196 005a 0322     		movs	r2, #3
 197 005c 5343     		muls	r3, r2, r3
 198 005e B1FBF3F3 		udiv	r3, r1, r3
 199 0062 05E0     		b	.L17
 200              	.L13:
 201              	.LVL26:
 242:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     }
 243:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     else /*I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_16_9*/
 244:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     {
 245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 16/9 */
 246:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 25));
 202              		.loc 1 246 0
 203 0064 1922     		movs	r2, #25
 204 0066 5343     		muls	r3, r2, r3
 205              	.LVL27:
 206 0068 B1FBF3F1 		udiv	r1, r1, r3
 207              	.LVL28:
 247:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       /* Set DUTY bit */
 248:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       result |= I2C_DutyCycle_16_9;
 208              		.loc 1 248 0
 209 006c 41F48043 		orr	r3, r1, #16384
 210              	.LVL29:
 211              	.L17:
 212 0070 99B2     		uxth	r1, r3
 213              	.LVL30:
 249:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     }
 250:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 251:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Test if CCR value is under 0x1*/
 252:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     if ((result & I2C_CCR_CCR) == 0)
 214              		.loc 1 252 0
 215 0072 0A05     		lsls	r2, r1, #20
 253:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     {
 254:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       /* Set minimum allowed value */
 255:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       result |= (uint16_t)0x0001;  
 256:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     }
 257:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Set speed value and set F/S bit for fast mode */
 258:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     tmpreg |= (uint16_t)(result | I2C_CCR_FS);
 259:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 260:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->TRISE = (uint16_t)(((freqrange * (uint16_t)300) / (uint16_t)1000) + (uint16_t)1);  
 216              		.loc 1 260 0
 217 0074 4FF49672 		mov	r2, #300
 255:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       result |= (uint16_t)0x0001;  
 218              		.loc 1 255 0
 219 0078 08BF     		it	eq
 220 007a 41F00101 		orreq	r1, r1, #1
 221              	.LVL31:
 222              		.loc 1 260 0
 223 007e 5043     		muls	r0, r2, r0
 224              	.LVL32:
 258:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     tmpreg |= (uint16_t)(result | I2C_CCR_FS);
 225              		.loc 1 258 0
 226 0080 41F40043 		orr	r3, r1, #32768
 227              	.LVL33:
 228              		.loc 1 260 0
 229 0084 4FF47A71 		mov	r1, #1000
 230              	.LVL34:
 231 0088 90FBF1F0 		sdiv	r0, r0, r1
 232 008c 421C     		adds	r2, r0, #1
 233 008e 91B2     		uxth	r1, r2
 234 0090 2184     		strh	r1, [r4, #32]	@ movhi
 235              	.LVL35:
 236              	.L12:
 261:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 262:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 263:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Write to I2Cx CCR */
 264:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->CCR = tmpreg;
 237              		.loc 1 264 0
 238 0092 A383     		strh	r3, [r4, #28]	@ movhi
 265:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Enable the selected I2C peripheral */
 266:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
 239              		.loc 1 266 0
 240 0094 2288     		ldrh	r2, [r4, #0]
 241 0096 91B2     		uxth	r1, r2
 242 0098 41F00103 		orr	r3, r1, #1
 243              	.LVL36:
 244 009c 2380     		strh	r3, [r4, #0]	@ movhi
 267:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 268:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /*---------------------------- I2Cx CR1 Configuration ------------------------*/
 269:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get the I2Cx CR1 value */
 270:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg = I2Cx->CR1;
 245              		.loc 1 270 0
 246 009e 2088     		ldrh	r0, [r4, #0]
 247              	.LVL37:
 271:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 272:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 248              		.loc 1 272 0
 249 00a0 20F48162 		bic	r2, r0, #1032
 250 00a4 22F00201 		bic	r1, r2, #2
 251 00a8 0B04     		lsls	r3, r1, #16
 273:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 274:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Set SMBTYPE and SMBUS bits according to I2C_Mode value */
 275:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Set ACK bit according to I2C_Ack value */
 276:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
 252              		.loc 1 276 0
 253 00aa AA88     		ldrh	r2, [r5, #4]
 254 00ac 6989     		ldrh	r1, [r5, #10]
 272:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 255              		.loc 1 272 0
 256 00ae 180C     		lsrs	r0, r3, #16
 257              	.LVL38:
 258              		.loc 1 276 0
 259 00b0 41EA0203 		orr	r3, r1, r2
 277:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Write to I2Cx CR1 */
 278:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->CR1 = tmpreg;
 279:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 280:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /*---------------------------- I2Cx OAR1 Configuration -----------------------*/
 281:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Set I2Cx Own Address1 and acknowledged address */
 282:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->OAR1 = (I2C_InitStruct->I2C_AcknowledgedAddress | I2C_InitStruct->I2C_OwnAddress1);
 260              		.loc 1 282 0
 261 00b4 2989     		ldrh	r1, [r5, #8]
 262 00b6 AA89     		ldrh	r2, [r5, #12]
 276:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
 263              		.loc 1 276 0
 264 00b8 1843     		orrs	r0, r0, r3
 265              	.LVL39:
 266 00ba 80B2     		uxth	r0, r0
 267              	.LVL40:
 268              		.loc 1 282 0
 269 00bc 41EA0203 		orr	r3, r1, r2
 278:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->CR1 = tmpreg;
 270              		.loc 1 278 0
 271 00c0 2080     		strh	r0, [r4, #0]	@ movhi
 272              		.loc 1 282 0
 273 00c2 98B2     		uxth	r0, r3
 274              	.LVL41:
 275 00c4 2081     		strh	r0, [r4, #8]	@ movhi
 283:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 276              		.loc 1 283 0
 277 00c6 05B0     		add	sp, sp, #20
 278 00c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 279              	.L19:
 280 00ca 00BF     		.align	2
 281              	.L18:
 282 00cc 40420F00 		.word	1000000
 283 00d0 A0860100 		.word	100000
 284              		.cfi_endproc
 285              	.LFE57:
 287              		.section	.text.I2C_StructInit,"ax",%progbits
 288              		.align	1
 289              		.global	I2C_StructInit
 290              		.thumb
 291              		.thumb_func
 293              	I2C_StructInit:
 294              	.LFB58:
 284:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 285:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 286:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Fills each I2C_InitStruct member with its default value.
 287:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
 288:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 289:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 290:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
 291:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 295              		.loc 1 291 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300              	.LVL42:
 292:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
 293:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* initialize the I2C_ClockSpeed member */
 294:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_ClockSpeed = 5000;
 301              		.loc 1 294 0
 302 0000 41F28833 		movw	r3, #5000
 295:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Initialize the I2C_Mode member */
 296:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 303              		.loc 1 296 0
 304 0004 0021     		movs	r1, #0
 294:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_ClockSpeed = 5000;
 305              		.loc 1 294 0
 306 0006 0360     		str	r3, [r0, #0]
 297:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 298:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
 307              		.loc 1 298 0
 308 0008 4BF6FF72 		movw	r2, #49151
 299:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 300:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 301:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Initialize the I2C_Ack member */
 302:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 303:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 304:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 309              		.loc 1 304 0
 310 000c 4FF48043 		mov	r3, #16384
 296:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 311              		.loc 1 296 0
 312 0010 8180     		strh	r1, [r0, #4]	@ movhi
 298:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
 313              		.loc 1 298 0
 314 0012 C280     		strh	r2, [r0, #6]	@ movhi
 300:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 315              		.loc 1 300 0
 316 0014 0181     		strh	r1, [r0, #8]	@ movhi
 302:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 317              		.loc 1 302 0
 318 0016 4181     		strh	r1, [r0, #10]	@ movhi
 319              		.loc 1 304 0
 320 0018 8381     		strh	r3, [r0, #12]	@ movhi
 321 001a 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE58:
 325              		.section	.text.I2C_Cmd,"ax",%progbits
 326              		.align	1
 327              		.global	I2C_Cmd
 328              		.thumb
 329              		.thumb_func
 331              	I2C_Cmd:
 332              	.LFB59:
 305:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 306:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 307:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 308:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C peripheral.
 309:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 310:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2Cx peripheral. 
 311:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 312:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 313:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 314:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 315:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 333              		.loc 1 315 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338              	.LVL43:
 316:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 317:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 318:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 319:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 320:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 321:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable the selected I2C peripheral */
 322:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PE;
 339              		.loc 1 322 0
 340 0000 0388     		ldrh	r3, [r0, #0]
 319:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 341              		.loc 1 319 0
 342 0002 19B1     		cbz	r1, .L22
 343              		.loc 1 322 0
 344 0004 99B2     		uxth	r1, r3
 345              	.LVL44:
 346 0006 41F00103 		orr	r3, r1, #1
 347 000a 03E0     		b	.L24
 348              	.LVL45:
 349              	.L22:
 323:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 324:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 325:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 326:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the selected I2C peripheral */
 327:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 350              		.loc 1 327 0
 351 000c 23F00101 		bic	r1, r3, #1
 352              	.LVL46:
 353 0010 0A04     		lsls	r2, r1, #16
 354 0012 130C     		lsrs	r3, r2, #16
 355              	.L24:
 356 0014 0380     		strh	r3, [r0, #0]	@ movhi
 357 0016 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE59:
 361              		.section	.text.I2C_GenerateSTART,"ax",%progbits
 362              		.align	1
 363              		.global	I2C_GenerateSTART
 364              		.thumb
 365              		.thumb_func
 367              	I2C_GenerateSTART:
 368              	.LFB60:
 328:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 329:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 330:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 331:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 332:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Generates I2Cx communication START condition.
 333:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 334:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2C START condition generation.
 335:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 336:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None.
 337:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 338:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)
 339:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 369              		.loc 1 339 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL47:
 340:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 341:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 342:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 343:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 344:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 345:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Generate a START condition */
 346:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_START;
 375              		.loc 1 346 0
 376 0000 0388     		ldrh	r3, [r0, #0]
 343:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 377              		.loc 1 343 0
 378 0002 19B1     		cbz	r1, .L26
 379              		.loc 1 346 0
 380 0004 99B2     		uxth	r1, r3
 381              	.LVL48:
 382 0006 41F48073 		orr	r3, r1, #256
 383 000a 03E0     		b	.L28
 384              	.LVL49:
 385              	.L26:
 347:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 348:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 349:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 350:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the START condition generation */
 351:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_START);
 386              		.loc 1 351 0
 387 000c 23F48071 		bic	r1, r3, #256
 388              	.LVL50:
 389 0010 0A04     		lsls	r2, r1, #16
 390 0012 130C     		lsrs	r3, r2, #16
 391              	.L28:
 392 0014 0380     		strh	r3, [r0, #0]	@ movhi
 393 0016 7047     		bx	lr
 394              		.cfi_endproc
 395              	.LFE60:
 397              		.section	.text.I2C_GenerateSTOP,"ax",%progbits
 398              		.align	1
 399              		.global	I2C_GenerateSTOP
 400              		.thumb
 401              		.thumb_func
 403              	I2C_GenerateSTOP:
 404              	.LFB61:
 352:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 353:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 354:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 355:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 356:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Generates I2Cx communication STOP condition.
 357:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 358:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2C STOP condition generation.
 359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 360:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None.
 361:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 362:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)
 363:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 405              		.loc 1 363 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 410              	.LVL51:
 364:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 365:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 366:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 368:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 369:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Generate a STOP condition */
 370:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_STOP;
 411              		.loc 1 370 0
 412 0000 0388     		ldrh	r3, [r0, #0]
 367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 413              		.loc 1 367 0
 414 0002 19B1     		cbz	r1, .L30
 415              		.loc 1 370 0
 416 0004 99B2     		uxth	r1, r3
 417              	.LVL52:
 418 0006 41F40073 		orr	r3, r1, #512
 419 000a 03E0     		b	.L32
 420              	.LVL53:
 421              	.L30:
 371:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 372:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 373:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 374:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the STOP condition generation */
 375:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_STOP);
 422              		.loc 1 375 0
 423 000c 23F40071 		bic	r1, r3, #512
 424              	.LVL54:
 425 0010 0A04     		lsls	r2, r1, #16
 426 0012 130C     		lsrs	r3, r2, #16
 427              	.L32:
 428 0014 0380     		strh	r3, [r0, #0]	@ movhi
 429 0016 7047     		bx	lr
 430              		.cfi_endproc
 431              	.LFE61:
 433              		.section	.text.I2C_Send7bitAddress,"ax",%progbits
 434              		.align	1
 435              		.global	I2C_Send7bitAddress
 436              		.thumb
 437              		.thumb_func
 439              	I2C_Send7bitAddress:
 440              	.LFB62:
 376:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 377:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 378:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 379:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 380:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Transmits the address byte to select the slave device.
 381:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 382:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  Address: specifies the slave address which will be transmitted
 383:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_Direction: specifies whether the I2C device will be a Transmitter
 384:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         or a Receiver. 
 385:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be one of the following values
 386:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Direction_Transmitter: Transmitter mode
 387:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Direction_Receiver: Receiver mode
 388:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None.
 389:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 390:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
 391:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 441              		.loc 1 391 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446              	.LVL55:
 392:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 393:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 394:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_DIRECTION(I2C_Direction));
 395:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Test on the direction to set/reset the read/write bit */
 396:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_Direction != I2C_Direction_Transmitter)
 447              		.loc 1 396 0
 448 0000 12B1     		cbz	r2, .L34
 397:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 398:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Set the address bit0 for read */
 399:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     Address |= I2C_OAR1_ADD0;
 449              		.loc 1 399 0
 450 0002 41F00101 		orr	r1, r1, #1
 451              	.LVL56:
 452 0006 01E0     		b	.L35
 453              	.L34:
 400:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 401:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 402:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 403:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Reset the address bit0 for write */
 404:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     Address &= (uint8_t)~((uint8_t)I2C_OAR1_ADD0);
 454              		.loc 1 404 0
 455 0008 01F0FE01 		and	r1, r1, #254
 456              	.LVL57:
 457              	.L35:
 405:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 406:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Send the address */
 407:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->DR = Address;
 458              		.loc 1 407 0
 459 000c 0182     		strh	r1, [r0, #16]	@ movhi
 460 000e 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE62:
 464              		.section	.text.I2C_AcknowledgeConfig,"ax",%progbits
 465              		.align	1
 466              		.global	I2C_AcknowledgeConfig
 467              		.thumb
 468              		.thumb_func
 470              	I2C_AcknowledgeConfig:
 471              	.LFB63:
 408:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 409:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 410:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 411:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C acknowledge feature.
 412:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 413:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2C Acknowledgement.
 414:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 415:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None.
 416:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 417:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)
 418:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 472              		.loc 1 418 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477              	.LVL58:
 419:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 420:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 421:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 422:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 423:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 424:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable the acknowledgement */
 425:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ACK;
 478              		.loc 1 425 0
 479 0000 0388     		ldrh	r3, [r0, #0]
 422:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 480              		.loc 1 422 0
 481 0002 19B1     		cbz	r1, .L37
 482              		.loc 1 425 0
 483 0004 99B2     		uxth	r1, r3
 484              	.LVL59:
 485 0006 41F48063 		orr	r3, r1, #1024
 486 000a 03E0     		b	.L39
 487              	.LVL60:
 488              	.L37:
 426:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 427:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 428:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 429:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the acknowledgement */
 430:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ACK);
 489              		.loc 1 430 0
 490 000c 23F48061 		bic	r1, r3, #1024
 491              	.LVL61:
 492 0010 0A04     		lsls	r2, r1, #16
 493 0012 130C     		lsrs	r3, r2, #16
 494              	.L39:
 495 0014 0380     		strh	r3, [r0, #0]	@ movhi
 496 0016 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE63:
 500              		.section	.text.I2C_OwnAddress2Config,"ax",%progbits
 501              		.align	1
 502              		.global	I2C_OwnAddress2Config
 503              		.thumb
 504              		.thumb_func
 506              	I2C_OwnAddress2Config:
 507              	.LFB64:
 431:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 432:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 433:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 434:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 435:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Configures the specified I2C own address2.
 436:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 437:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  Address: specifies the 7bit I2C own address2.
 438:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None.
 439:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 440:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address)
 441:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 508              		.loc 1 441 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513              	.LVL62:
 442:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint16_t tmpreg = 0;
 443:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 444:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 445:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 446:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 447:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get the old register value */
 448:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg = I2Cx->OAR2;
 514              		.loc 1 448 0
 515 0000 8389     		ldrh	r3, [r0, #12]
 449:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 450:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Reset I2Cx Own address2 bit [7:1] */
 451:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_OAR2_ADD2);
 452:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 453:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Set I2Cx Own address2 */
 454:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)Address & (uint16_t)0x00FE);
 516              		.loc 1 454 0
 517 0002 01F0FE01 		and	r1, r1, #254
 518              	.LVL63:
 448:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg = I2Cx->OAR2;
 519              		.loc 1 448 0
 520 0006 9AB2     		uxth	r2, r3
 521              	.LVL64:
 451:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_OAR2_ADD2);
 522              		.loc 1 451 0
 523 0008 22F0FE03 		bic	r3, r2, #254
 524              		.loc 1 454 0
 525 000c 41EA0302 		orr	r2, r1, r3
 526              	.LVL65:
 455:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 456:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Store the new register value */
 457:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->OAR2 = tmpreg;
 527              		.loc 1 457 0
 528 0010 8281     		strh	r2, [r0, #12]	@ movhi
 529 0012 7047     		bx	lr
 530              		.cfi_endproc
 531              	.LFE64:
 533              		.section	.text.I2C_DualAddressCmd,"ax",%progbits
 534              		.align	1
 535              		.global	I2C_DualAddressCmd
 536              		.thumb
 537              		.thumb_func
 539              	I2C_DualAddressCmd:
 540              	.LFB65:
 458:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 459:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 460:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 461:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C dual addressing mode.
 462:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 463:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2C dual addressing mode.
 464:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 465:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 466:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 467:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 468:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 541              		.loc 1 468 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546              	.LVL66:
 469:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 470:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 471:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 472:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 473:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 474:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable dual addressing mode */
 475:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->OAR2 |= I2C_OAR2_ENDUAL;
 547              		.loc 1 475 0
 548 0000 8389     		ldrh	r3, [r0, #12]
 472:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 549              		.loc 1 472 0
 550 0002 19B1     		cbz	r1, .L42
 551              		.loc 1 475 0
 552 0004 99B2     		uxth	r1, r3
 553              	.LVL67:
 554 0006 41F00103 		orr	r3, r1, #1
 555 000a 03E0     		b	.L44
 556              	.LVL68:
 557              	.L42:
 476:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 477:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 478:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 479:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable dual addressing mode */
 480:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->OAR2 &= (uint16_t)~((uint16_t)I2C_OAR2_ENDUAL);
 558              		.loc 1 480 0
 559 000c 23F00101 		bic	r1, r3, #1
 560              	.LVL69:
 561 0010 0A04     		lsls	r2, r1, #16
 562 0012 130C     		lsrs	r3, r2, #16
 563              	.L44:
 564 0014 8381     		strh	r3, [r0, #12]	@ movhi
 565 0016 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE65:
 569              		.section	.text.I2C_GeneralCallCmd,"ax",%progbits
 570              		.align	1
 571              		.global	I2C_GeneralCallCmd
 572              		.thumb
 573              		.thumb_func
 575              	I2C_GeneralCallCmd:
 576              	.LFB66:
 481:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 482:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 483:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 484:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 485:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C general call feature.
 486:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 487:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2C General call.
 488:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 489:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 490:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 491:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 492:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 577              		.loc 1 492 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582              	.LVL70:
 493:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 494:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 495:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 496:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 497:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 498:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable generall call */
 499:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENGC;
 583              		.loc 1 499 0
 584 0000 0388     		ldrh	r3, [r0, #0]
 496:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 585              		.loc 1 496 0
 586 0002 19B1     		cbz	r1, .L46
 587              		.loc 1 499 0
 588 0004 99B2     		uxth	r1, r3
 589              	.LVL71:
 590 0006 41F04003 		orr	r3, r1, #64
 591 000a 03E0     		b	.L48
 592              	.LVL72:
 593              	.L46:
 500:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 501:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 502:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 503:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable generall call */
 504:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENGC);
 594              		.loc 1 504 0
 595 000c 23F04001 		bic	r1, r3, #64
 596              	.LVL73:
 597 0010 0A04     		lsls	r2, r1, #16
 598 0012 130C     		lsrs	r3, r2, #16
 599              	.L48:
 600 0014 0380     		strh	r3, [r0, #0]	@ movhi
 601 0016 7047     		bx	lr
 602              		.cfi_endproc
 603              	.LFE66:
 605              		.section	.text.I2C_SoftwareResetCmd,"ax",%progbits
 606              		.align	1
 607              		.global	I2C_SoftwareResetCmd
 608              		.thumb
 609              		.thumb_func
 611              	I2C_SoftwareResetCmd:
 612              	.LFB67:
 505:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 506:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 507:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 508:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 509:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C software reset.
 510:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   When software reset is enabled, the I2C IOs are released (this can
 511:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         be useful to recover from bus errors).  
 512:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 513:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2C software reset.
 514:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 515:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 516:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 517:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 518:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 613              		.loc 1 518 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618              	.LVL74:
 519:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 520:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 521:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 522:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 523:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 524:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Peripheral under reset */
 525:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_SWRST;
 619              		.loc 1 525 0
 620 0000 0388     		ldrh	r3, [r0, #0]
 522:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 621              		.loc 1 522 0
 622 0002 29B1     		cbz	r1, .L50
 623              		.loc 1 525 0
 624 0004 6FEA4343 		mvn	r3, r3, lsl #17
 625 0008 6FEA5341 		mvn	r1, r3, lsr #17
 626              	.LVL75:
 627 000c 8AB2     		uxth	r2, r1
 628 000e 01E0     		b	.L52
 629              	.LVL76:
 630              	.L50:
 526:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 527:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 528:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 529:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Peripheral not under reset */
 530:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_SWRST);
 631              		.loc 1 530 0
 632 0010 5904     		lsls	r1, r3, #17
 633              	.LVL77:
 634 0012 4A0C     		lsrs	r2, r1, #17
 635              	.L52:
 636 0014 0280     		strh	r2, [r0, #0]	@ movhi
 637 0016 7047     		bx	lr
 638              		.cfi_endproc
 639              	.LFE67:
 641              		.section	.text.I2C_StretchClockCmd,"ax",%progbits
 642              		.align	1
 643              		.global	I2C_StretchClockCmd
 644              		.thumb
 645              		.thumb_func
 647              	I2C_StretchClockCmd:
 648              	.LFB68:
 531:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 532:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 533:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 534:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 535:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C Clock stretching.
 536:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 537:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2Cx Clock stretching.
 538:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 539:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 540:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 541:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 542:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 649              		.loc 1 542 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 654              	.LVL78:
 543:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 544:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 545:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 546:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState == DISABLE)
 547:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 548:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable the selected I2C Clock stretching */
 549:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_NOSTRETCH;
 655              		.loc 1 549 0
 656 0000 0388     		ldrh	r3, [r0, #0]
 546:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState == DISABLE)
 657              		.loc 1 546 0
 658 0002 19B9     		cbnz	r1, .L54
 659              		.loc 1 549 0
 660 0004 99B2     		uxth	r1, r3
 661              	.LVL79:
 662 0006 41F08003 		orr	r3, r1, #128
 663 000a 03E0     		b	.L56
 664              	.LVL80:
 665              	.L54:
 550:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 551:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 552:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 553:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the selected I2C Clock stretching */
 554:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_NOSTRETCH);
 666              		.loc 1 554 0
 667 000c 23F08001 		bic	r1, r3, #128
 668              	.LVL81:
 669 0010 0A04     		lsls	r2, r1, #16
 670 0012 130C     		lsrs	r3, r2, #16
 671              	.L56:
 672 0014 0380     		strh	r3, [r0, #0]	@ movhi
 673 0016 7047     		bx	lr
 674              		.cfi_endproc
 675              	.LFE68:
 677              		.section	.text.I2C_FastModeDutyCycleConfig,"ax",%progbits
 678              		.align	1
 679              		.global	I2C_FastModeDutyCycleConfig
 680              		.thumb
 681              		.thumb_func
 683              	I2C_FastModeDutyCycleConfig:
 684              	.LFB69:
 555:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 556:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 557:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 558:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 559:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Selects the specified I2C fast mode duty cycle.
 560:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 561:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_DutyCycle: specifies the fast mode duty cycle.
 562:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be one of the following values:
 563:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_DutyCycle_2: I2C fast mode Tlow/Thigh = 2
 564:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_DutyCycle_16_9: I2C fast mode Tlow/Thigh = 16/9
 565:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 566:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 567:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
 568:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 685              		.loc 1 568 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690              	.LVL82:
 569:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 570:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 571:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_DutyCycle));
 572:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 691              		.loc 1 572 0
 692 0000 B1F5804F 		cmp	r1, #16384
 573:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 574:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=2 */
 575:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CCR &= I2C_DutyCycle_2;
 693              		.loc 1 575 0
 694 0004 838B     		ldrh	r3, [r0, #28]
 572:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 695              		.loc 1 572 0
 696 0006 04D0     		beq	.L58
 697              		.loc 1 575 0
 698 0008 23F48043 		bic	r3, r3, #16384
 699 000c 1904     		lsls	r1, r3, #16
 700              	.LVL83:
 701 000e 0A0C     		lsrs	r2, r1, #16
 702 0010 02E0     		b	.L60
 703              	.LVL84:
 704              	.L58:
 576:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 577:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 578:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 579:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=16/9 */
 580:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CCR |= I2C_DutyCycle_16_9;
 705              		.loc 1 580 0
 706 0012 99B2     		uxth	r1, r3
 707              	.LVL85:
 708 0014 41F48042 		orr	r2, r1, #16384
 709              	.L60:
 710 0018 8283     		strh	r2, [r0, #28]	@ movhi
 711 001a 7047     		bx	lr
 712              		.cfi_endproc
 713              	.LFE69:
 715              		.section	.text.I2C_NACKPositionConfig,"ax",%progbits
 716              		.align	1
 717              		.global	I2C_NACKPositionConfig
 718              		.thumb
 719              		.thumb_func
 721              	I2C_NACKPositionConfig:
 722              	.LFB70:
 581:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 582:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 583:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 584:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 585:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Selects the specified I2C NACK position in master receiver mode.
 586:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   This function is useful in I2C Master Receiver mode when the number
 587:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         of data to be received is equal to 2. In this case, this function 
 588:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         should be called (with parameter I2C_NACKPosition_Next) before data 
 589:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         reception starts,as described in the 2-byte reception procedure 
 590:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         recommended in Reference Manual in Section: Master receiver.                
 591:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 592:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_NACKPosition: specifies the NACK position. 
 593:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be one of the following values:
 594:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_NACKPosition_Next: indicates that the next byte will be the last
 595:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                                        received byte.  
 596:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_NACKPosition_Current: indicates that current byte is the last 
 597:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                                           received byte.
 598:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            
 599:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_PECPositionConfig() 
 600:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          but is intended to be used in I2C mode while I2C_PECPositionConfig() 
 601:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          is intended to used in SMBUS mode. 
 602:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            
 603:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 604:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 605:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_NACKPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_NACKPosition)
 606:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 723              		.loc 1 606 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728              	.LVL86:
 607:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 608:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 609:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_NACK_POSITION(I2C_NACKPosition));
 610:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   
 611:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the input parameter */
 612:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_NACKPosition == I2C_NACKPosition_Next)
 729              		.loc 1 612 0
 730 0000 B1F5006F 		cmp	r1, #2048
 613:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 614:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Next byte in shift register is the last received byte */
 615:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_NACKPosition_Next;
 731              		.loc 1 615 0
 732 0004 0388     		ldrh	r3, [r0, #0]
 612:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_NACKPosition == I2C_NACKPosition_Next)
 733              		.loc 1 612 0
 734 0006 03D1     		bne	.L62
 735              		.loc 1 615 0
 736 0008 99B2     		uxth	r1, r3
 737              	.LVL87:
 738 000a 41F40063 		orr	r3, r1, #2048
 739 000e 03E0     		b	.L64
 740              	.LVL88:
 741              	.L62:
 616:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 617:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 618:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 619:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Current byte in shift register is the last received byte */
 620:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= I2C_NACKPosition_Current;
 742              		.loc 1 620 0
 743 0010 23F40061 		bic	r1, r3, #2048
 744              	.LVL89:
 745 0014 0A04     		lsls	r2, r1, #16
 746 0016 130C     		lsrs	r3, r2, #16
 747              	.L64:
 748 0018 0380     		strh	r3, [r0, #0]	@ movhi
 749 001a 7047     		bx	lr
 750              		.cfi_endproc
 751              	.LFE70:
 753              		.section	.text.I2C_SMBusAlertConfig,"ax",%progbits
 754              		.align	1
 755              		.global	I2C_SMBusAlertConfig
 756              		.thumb
 757              		.thumb_func
 759              	I2C_SMBusAlertConfig:
 760              	.LFB71:
 621:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 622:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 623:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 624:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 625:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Drives the SMBusAlert pin high or low for the specified I2C.
 626:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 627:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_SMBusAlert: specifies SMBAlert pin level. 
 628:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be one of the following values:
 629:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_SMBusAlert_Low: SMBAlert pin driven low
 630:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_SMBusAlert_High: SMBAlert pin driven high
 631:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 632:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 633:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
 634:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 761              		.loc 1 634 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766              	.LVL90:
 635:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 636:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 637:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_SMBUS_ALERT(I2C_SMBusAlert));
 638:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 767              		.loc 1 638 0
 768 0000 B1F5005F 		cmp	r1, #8192
 639:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 640:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Drive the SMBusAlert pin Low */
 641:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_SMBusAlert_Low;
 769              		.loc 1 641 0
 770 0004 0388     		ldrh	r3, [r0, #0]
 638:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 771              		.loc 1 638 0
 772 0006 03D1     		bne	.L66
 773              		.loc 1 641 0
 774 0008 99B2     		uxth	r1, r3
 775              	.LVL91:
 776 000a 41F40053 		orr	r3, r1, #8192
 777 000e 03E0     		b	.L68
 778              	.LVL92:
 779              	.L66:
 642:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 643:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 644:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 645:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Drive the SMBusAlert pin High  */
 646:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= I2C_SMBusAlert_High;
 780              		.loc 1 646 0
 781 0010 23F40051 		bic	r1, r3, #8192
 782              	.LVL93:
 783 0014 0A04     		lsls	r2, r1, #16
 784 0016 130C     		lsrs	r3, r2, #16
 785              	.L68:
 786 0018 0380     		strh	r3, [r0, #0]	@ movhi
 787 001a 7047     		bx	lr
 788              		.cfi_endproc
 789              	.LFE71:
 791              		.section	.text.I2C_ARPCmd,"ax",%progbits
 792              		.align	1
 793              		.global	I2C_ARPCmd
 794              		.thumb
 795              		.thumb_func
 797              	I2C_ARPCmd:
 798              	.LFB72:
 647:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 648:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 649:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 650:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 651:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C ARP.
 652:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 653:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2Cx ARP. 
 654:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 655:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 656:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 657:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 658:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 799              		.loc 1 658 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL94:
 659:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 660:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 661:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 662:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 663:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 664:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable the selected I2C ARP */
 665:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENARP;
 805              		.loc 1 665 0
 806 0000 0388     		ldrh	r3, [r0, #0]
 662:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 807              		.loc 1 662 0
 808 0002 19B1     		cbz	r1, .L70
 809              		.loc 1 665 0
 810 0004 99B2     		uxth	r1, r3
 811              	.LVL95:
 812 0006 41F01003 		orr	r3, r1, #16
 813 000a 03E0     		b	.L72
 814              	.LVL96:
 815              	.L70:
 666:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 667:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 668:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 669:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the selected I2C ARP */
 670:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENARP);
 816              		.loc 1 670 0
 817 000c 23F01001 		bic	r1, r3, #16
 818              	.LVL97:
 819 0010 0A04     		lsls	r2, r1, #16
 820 0012 130C     		lsrs	r3, r2, #16
 821              	.L72:
 822 0014 0380     		strh	r3, [r0, #0]	@ movhi
 823 0016 7047     		bx	lr
 824              		.cfi_endproc
 825              	.LFE72:
 827              		.section	.text.I2C_SendData,"ax",%progbits
 828              		.align	1
 829              		.global	I2C_SendData
 830              		.thumb
 831              		.thumb_func
 833              	I2C_SendData:
 834              	.LFB73:
 671:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 672:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 673:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 674:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @}
 675:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 676:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 677:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /** @defgroup I2C_Group2 Data transfers functions
 678:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *  @brief   Data transfers functions 
 679:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *
 680:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @verbatim   
 681:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================
 682:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                         Data transfers functions
 683:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================  
 684:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 685:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @endverbatim
 686:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @{
 687:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 688:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 689:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 690:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Sends a data byte through the I2Cx peripheral.
 691:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 692:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  Data: Byte to be transmitted..
 693:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 694:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 695:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)
 696:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 835              		.loc 1 696 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 840              	.LVL98:
 697:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 698:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 699:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Write in the DR register the data to be sent */
 700:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->DR = Data;
 841              		.loc 1 700 0
 842 0000 0182     		strh	r1, [r0, #16]	@ movhi
 843 0002 7047     		bx	lr
 844              		.cfi_endproc
 845              	.LFE73:
 847              		.section	.text.I2C_ReceiveData,"ax",%progbits
 848              		.align	1
 849              		.global	I2C_ReceiveData
 850              		.thumb
 851              		.thumb_func
 853              	I2C_ReceiveData:
 854              	.LFB74:
 701:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 702:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 703:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 704:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Returns the most recent received data by the I2Cx peripheral.
 705:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 706:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval The value of the received data.
 707:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 708:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)
 709:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 855              		.loc 1 709 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860              	.LVL99:
 710:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 711:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 712:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Return the data in the DR register */
 713:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   return (uint8_t)I2Cx->DR;
 861              		.loc 1 713 0
 862 0000 008A     		ldrh	r0, [r0, #16]
 863              	.LVL100:
 714:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 864              		.loc 1 714 0
 865 0002 C0B2     		uxtb	r0, r0
 866 0004 7047     		bx	lr
 867              		.cfi_endproc
 868              	.LFE74:
 870              		.section	.text.I2C_TransmitPEC,"ax",%progbits
 871              		.align	1
 872              		.global	I2C_TransmitPEC
 873              		.thumb
 874              		.thumb_func
 876              	I2C_TransmitPEC:
 877              	.LFB75:
 715:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 716:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 717:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @}
 718:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 719:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 720:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /** @defgroup I2C_Group3 PEC management functions
 721:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *  @brief   PEC management functions 
 722:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *
 723:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @verbatim   
 724:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================
 725:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                          PEC management functions
 726:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================  
 727:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 728:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @endverbatim
 729:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @{
 730:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 731:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 732:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 733:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C PEC transfer.
 734:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 735:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2C PEC transmission.
 736:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 737:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 738:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 739:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 740:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 878              		.loc 1 740 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 883              	.LVL101:
 741:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 742:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 743:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 744:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 745:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 746:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable the selected I2C PEC transmission */
 747:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PEC;
 884              		.loc 1 747 0
 885 0000 0388     		ldrh	r3, [r0, #0]
 744:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 886              		.loc 1 744 0
 887 0002 19B1     		cbz	r1, .L76
 888              		.loc 1 747 0
 889 0004 99B2     		uxth	r1, r3
 890              	.LVL102:
 891 0006 41F48053 		orr	r3, r1, #4096
 892 000a 03E0     		b	.L78
 893              	.LVL103:
 894              	.L76:
 748:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 750:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 751:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the selected I2C PEC transmission */
 752:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PEC);
 895              		.loc 1 752 0
 896 000c 23F48051 		bic	r1, r3, #4096
 897              	.LVL104:
 898 0010 0A04     		lsls	r2, r1, #16
 899 0012 130C     		lsrs	r3, r2, #16
 900              	.L78:
 901 0014 0380     		strh	r3, [r0, #0]	@ movhi
 902 0016 7047     		bx	lr
 903              		.cfi_endproc
 904              	.LFE75:
 906              		.section	.text.I2C_PECPositionConfig,"ax",%progbits
 907              		.align	1
 908              		.global	I2C_PECPositionConfig
 909              		.thumb
 910              		.thumb_func
 912              	I2C_PECPositionConfig:
 913              	.LFB76:
 753:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 754:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 755:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 757:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Selects the specified I2C PEC position.
 758:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 759:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_PECPosition: specifies the PEC position. 
 760:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be one of the following values:
 761:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_PECPosition_Next: indicates that the next byte is PEC
 762:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_PECPosition_Current: indicates that current byte is PEC
 763:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *       
 764:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_NACKPositionConfig()
 765:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          but is intended to be used in SMBUS mode while I2C_NACKPositionConfig() 
 766:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          is intended to used in I2C mode.
 767:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                
 768:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 769:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 770:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
 771:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 914              		.loc 1 771 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 919              	.LVL105:
 772:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 773:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 774:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_PEC_POSITION(I2C_PECPosition));
 775:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
 920              		.loc 1 775 0
 921 0000 B1F5006F 		cmp	r1, #2048
 776:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 777:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Next byte in shift register is PEC */
 778:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_PECPosition_Next;
 922              		.loc 1 778 0
 923 0004 0388     		ldrh	r3, [r0, #0]
 775:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
 924              		.loc 1 775 0
 925 0006 03D1     		bne	.L80
 926              		.loc 1 778 0
 927 0008 99B2     		uxth	r1, r3
 928              	.LVL106:
 929 000a 41F40063 		orr	r3, r1, #2048
 930 000e 03E0     		b	.L82
 931              	.LVL107:
 932              	.L80:
 779:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 780:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 781:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 782:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Current byte in shift register is PEC */
 783:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= I2C_PECPosition_Current;
 933              		.loc 1 783 0
 934 0010 23F40061 		bic	r1, r3, #2048
 935              	.LVL108:
 936 0014 0A04     		lsls	r2, r1, #16
 937 0016 130C     		lsrs	r3, r2, #16
 938              	.L82:
 939 0018 0380     		strh	r3, [r0, #0]	@ movhi
 940 001a 7047     		bx	lr
 941              		.cfi_endproc
 942              	.LFE76:
 944              		.section	.text.I2C_CalculatePEC,"ax",%progbits
 945              		.align	1
 946              		.global	I2C_CalculatePEC
 947              		.thumb
 948              		.thumb_func
 950              	I2C_CalculatePEC:
 951              	.LFB77:
 784:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 785:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 786:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 787:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 788:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the PEC value calculation of the transferred bytes.
 789:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 790:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2Cx PEC value calculation.
 791:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 792:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 793:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 794:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 795:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 952              		.loc 1 795 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		@ link register save eliminated.
 957              	.LVL109:
 796:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 797:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 798:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 799:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 800:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 801:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable the selected I2C PEC calculation */
 802:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENPEC;
 958              		.loc 1 802 0
 959 0000 0388     		ldrh	r3, [r0, #0]
 799:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 960              		.loc 1 799 0
 961 0002 19B1     		cbz	r1, .L84
 962              		.loc 1 802 0
 963 0004 99B2     		uxth	r1, r3
 964              	.LVL110:
 965 0006 41F02003 		orr	r3, r1, #32
 966 000a 03E0     		b	.L86
 967              	.LVL111:
 968              	.L84:
 803:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 804:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 805:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 806:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the selected I2C PEC calculation */
 807:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENPEC);
 969              		.loc 1 807 0
 970 000c 23F02001 		bic	r1, r3, #32
 971              	.LVL112:
 972 0010 0A04     		lsls	r2, r1, #16
 973 0012 130C     		lsrs	r3, r2, #16
 974              	.L86:
 975 0014 0380     		strh	r3, [r0, #0]	@ movhi
 976 0016 7047     		bx	lr
 977              		.cfi_endproc
 978              	.LFE77:
 980              		.section	.text.I2C_GetPEC,"ax",%progbits
 981              		.align	1
 982              		.global	I2C_GetPEC
 983              		.thumb
 984              		.thumb_func
 986              	I2C_GetPEC:
 987              	.LFB78:
 808:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 809:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 810:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 811:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 812:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Returns the PEC value for the specified I2C.
 813:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 814:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval The PEC value.
 815:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 816:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)
 817:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 988              		.loc 1 817 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              		@ link register save eliminated.
 993              	.LVL113:
 818:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 819:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 820:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Return the selected I2C PEC value */
 821:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   return ((I2Cx->SR2) >> 8);
 994              		.loc 1 821 0
 995 0000 008B     		ldrh	r0, [r0, #24]
 996              	.LVL114:
 822:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 997              		.loc 1 822 0
 998 0002 C0F30720 		ubfx	r0, r0, #8, #8
 999 0006 7047     		bx	lr
 1000              		.cfi_endproc
 1001              	.LFE78:
 1003              		.section	.text.I2C_DMACmd,"ax",%progbits
 1004              		.align	1
 1005              		.global	I2C_DMACmd
 1006              		.thumb
 1007              		.thumb_func
 1009              	I2C_DMACmd:
 1010              	.LFB79:
 823:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 824:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 825:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @}
 826:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 827:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 828:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /** @defgroup I2C_Group4 DMA transfers management functions
 829:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *  @brief   DMA transfers management functions 
 830:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *
 831:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @verbatim   
 832:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================
 833:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                          DMA transfers management functions
 834:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================  
 835:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   This section provides functions allowing to configure the I2C DMA channels 
 836:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   requests.
 837:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   
 838:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @endverbatim
 839:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @{
 840:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 841:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 842:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 843:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C DMA requests.
 844:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 845:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2C DMA transfer.
 846:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 847:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 848:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 849:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 850:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1011              		.loc 1 850 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
 1016              	.LVL115:
 851:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 852:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 853:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 854:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 855:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 856:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable the selected I2C DMA requests */
 857:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_DMAEN;
 1017              		.loc 1 857 0
 1018 0000 8388     		ldrh	r3, [r0, #4]
 854:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 1019              		.loc 1 854 0
 1020 0002 19B1     		cbz	r1, .L89
 1021              		.loc 1 857 0
 1022 0004 99B2     		uxth	r1, r3
 1023              	.LVL116:
 1024 0006 41F40063 		orr	r3, r1, #2048
 1025 000a 03E0     		b	.L91
 1026              	.LVL117:
 1027              	.L89:
 858:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 859:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 860:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 861:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the selected I2C DMA requests */
 862:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_DMAEN);
 1028              		.loc 1 862 0
 1029 000c 23F40061 		bic	r1, r3, #2048
 1030              	.LVL118:
 1031 0010 0A04     		lsls	r2, r1, #16
 1032 0012 130C     		lsrs	r3, r2, #16
 1033              	.L91:
 1034 0014 8380     		strh	r3, [r0, #4]	@ movhi
 1035 0016 7047     		bx	lr
 1036              		.cfi_endproc
 1037              	.LFE79:
 1039              		.section	.text.I2C_DMALastTransferCmd,"ax",%progbits
 1040              		.align	1
 1041              		.global	I2C_DMALastTransferCmd
 1042              		.thumb
 1043              		.thumb_func
 1045              	I2C_DMALastTransferCmd:
 1046              	.LFB80:
 863:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 864:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 865:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 866:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 867:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Specifies that the next DMA transfer is the last one.
 868:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 869:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the I2C DMA last transfer.
 870:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 871:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
 872:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 873:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 874:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1047              		.loc 1 874 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              		@ link register save eliminated.
 1052              	.LVL119:
 875:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
 876:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 877:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 878:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 879:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 880:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Next DMA transfer is the last transfer */
 881:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_LAST;
 1053              		.loc 1 881 0
 1054 0000 8388     		ldrh	r3, [r0, #4]
 878:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 1055              		.loc 1 878 0
 1056 0002 19B1     		cbz	r1, .L93
 1057              		.loc 1 881 0
 1058 0004 99B2     		uxth	r1, r3
 1059              	.LVL120:
 1060 0006 41F48053 		orr	r3, r1, #4096
 1061 000a 03E0     		b	.L95
 1062              	.LVL121:
 1063              	.L93:
 882:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 883:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
 884:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
 885:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Next DMA transfer is not the last transfer */
 886:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_LAST);
 1064              		.loc 1 886 0
 1065 000c 23F48051 		bic	r1, r3, #4096
 1066              	.LVL122:
 1067 0010 0A04     		lsls	r2, r1, #16
 1068 0012 130C     		lsrs	r3, r2, #16
 1069              	.L95:
 1070 0014 8380     		strh	r3, [r0, #4]	@ movhi
 1071 0016 7047     		bx	lr
 1072              		.cfi_endproc
 1073              	.LFE80:
 1075              		.section	.text.I2C_ReadRegister,"ax",%progbits
 1076              		.align	1
 1077              		.global	I2C_ReadRegister
 1078              		.thumb
 1079              		.thumb_func
 1081              	I2C_ReadRegister:
 1082              	.LFB81:
 887:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
 888:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 889:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 890:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 891:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @}
 892:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 893:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 894:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /** @defgroup I2C_Group5 Interrupts events and flags management functions
 895:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *  @brief   Interrupts, events and flags management functions
 896:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  *
 897:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @verbatim   
 898:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================
 899:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                 Interrupts, events and flags management functions
 900:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================  
 901:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   This section provides functions allowing to configure the I2C Interrupts 
 902:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   sources and check or clear the flags or pending bits status.
 903:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   The user should identify which mode will be used in his application to manage 
 904:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
 905:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 906:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================
 907:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                           I2C State Monitoring Functions                    
 908:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================   
 909:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   This I2C driver provides three different ways for I2C state monitoring
 910:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   depending on the application requirements and constraints:
 911:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****          
 912:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****    
 913:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****      1. Basic state monitoring (Using I2C_CheckEvent() function)
 914:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****      -----------------------------------------------------------
 915:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****         It compares the status registers (SR1 and SR2) content to a given event
 916:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****         (can be the combination of one or more flags).
 917:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****         It returns SUCCESS if the current status includes the given flags 
 918:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****         and returns ERROR if one or more flags are missing in the current status.
 919:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 920:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****           - When to use
 921:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - This function is suitable for most applications as well as for startup 
 922:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                activity since the events are fully described in the product reference 
 923:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                manual (RM0033).
 924:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - It is also suitable for users who need to define their own events.
 925:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 926:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****           - Limitations
 927:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - If an error occurs (ie. error flags are set besides to the monitored 
 928:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                flags), the I2C_CheckEvent() function may return SUCCESS despite 
 929:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                the communication hold or corrupted real state. 
 930:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                In this case, it is advised to use error interrupts to monitor 
 931:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                the error events and handle them in the interrupt IRQ handler.
 932:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****          
 933:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****      @note 
 934:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****          For error management, it is advised to use the following functions:
 935:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****            - I2C_ITConfig() to configure and enable the error interrupts (I2C_IT_ERR).
 936:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****            - I2Cx_ER_IRQHandler() which is called when the error interrupt occurs.
 937:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              Where x is the peripheral instance (I2C1, I2C2 ...)
 938:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****            - I2C_GetFlagStatus() or I2C_GetITStatus()  to be called into the 
 939:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              I2Cx_ER_IRQHandler() function in order to determine which error occurred.
 940:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****            - I2C_ClearFlag() or I2C_ClearITPendingBit() and/or I2C_SoftwareResetCmd() 
 941:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              and/or I2C_GenerateStop() in order to clear the error flag and source 
 942:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              and return to correct  communication status.
 943:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              
 944:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  
 945:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****      2. Advanced state monitoring (Using the function I2C_GetLastEvent())
 946:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****      -------------------------------------------------------------------- 
 947:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****         Using the function I2C_GetLastEvent() which returns the image of both status 
 948:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****         registers in a single word (uint32_t) (Status Register 2 value is shifted left 
 949:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****         by 16 bits and concatenated to Status Register 1).
 950:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 951:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****           - When to use
 952:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - This function is suitable for the same applications above but it 
 953:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                allows to overcome the mentioned limitation of I2C_GetFlagStatus() 
 954:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                function.
 955:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - The returned value could be compared to events already defined in 
 956:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                the library (stm32f2xx_i2c.h) or to custom values defined by user.
 957:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                This function is suitable when multiple flags are monitored at the 
 958:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                same time.
 959:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - At the opposite of I2C_CheckEvent() function, this function allows 
 960:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                user to choose when an event is accepted (when all events flags are 
 961:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                set and no other flags are set or just when the needed flags are set 
 962:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                like I2C_CheckEvent() function.
 963:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 964:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****           - Limitations
 965:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - User may need to define his own events.
 966:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - Same remark concerning the error management is applicable for this 
 967:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                function if user decides to check only regular communication flags 
 968:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                (and ignores error flags).
 969:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       
 970:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  
 971:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****      3. Flag-based state monitoring (Using the function I2C_GetFlagStatus())
 972:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****      -----------------------------------------------------------------------
 973:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****      
 974:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       Using the function I2C_GetFlagStatus() which simply returns the status of 
 975:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****       one single flag (ie. I2C_FLAG_RXNE ...). 
 976:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
 977:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****           - When to use
 978:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - This function could be used for specific applications or in debug 
 979:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                phase.
 980:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - It is suitable when only one flag checking is needed (most I2C 
 981:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                events are monitored through multiple flags).
 982:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****           - Limitations: 
 983:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - When calling this function, the Status register is accessed. 
 984:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                Some flags are cleared when the status register is accessed. 
 985:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                So checking the status of one Flag, may clear other ones.
 986:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****              - Function may need to be called twice or more in order to monitor 
 987:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                one single event.
 988:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  
 989:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****    For detailed description of Events, please refer to section I2C_Events in 
 990:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****    stm32f2xx_i2c.h file.
 991:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****        
 992:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** @endverbatim
 993:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @{
 994:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
 995:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****    
 996:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
 997:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Reads the specified I2C register and returns its value.
 998:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_Register: specifies the register to read.
 999:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be one of the following values:
1000:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Register_CR1:  CR1 register.
1001:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Register_CR2:   CR2 register.
1002:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Register_OAR1:  OAR1 register.
1003:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Register_OAR2:  OAR2 register.
1004:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Register_DR:    DR register.
1005:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Register_SR1:   SR1 register.
1006:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Register_SR2:   SR2 register.
1007:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Register_CCR:   CCR register.
1008:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_Register_TRISE: TRISE register.
1009:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval The value of the read register.
1010:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
1011:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
1012:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1083              		.loc 1 1012 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 8
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088              	.LVL123:
 1089 0000 82B0     		sub	sp, sp, #8
 1090              	.LCFI3:
 1091              		.cfi_def_cfa_offset 8
1013:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   __IO uint32_t tmp = 0;
 1092              		.loc 1 1013 0
 1093 0002 0023     		movs	r3, #0
 1094 0004 0193     		str	r3, [sp, #4]
 1095              	.LVL124:
1014:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1015:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
1016:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1017:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
1018:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1019:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmp = (uint32_t) I2Cx;
 1096              		.loc 1 1019 0
 1097 0006 0190     		str	r0, [sp, #4]
1020:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   tmp += I2C_Register;
 1098              		.loc 1 1020 0
 1099 0008 0198     		ldr	r0, [sp, #4]
 1100              	.LVL125:
 1101 000a 0918     		adds	r1, r1, r0
 1102              	.LVL126:
 1103 000c 0191     		str	r1, [sp, #4]
 1104              	.LVL127:
1021:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1022:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Return the selected register value */
1023:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   return (*(__IO uint16_t *) tmp);
 1105              		.loc 1 1023 0
 1106 000e 019A     		ldr	r2, [sp, #4]
 1107 0010 1388     		ldrh	r3, [r2, #0]
1024:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 1108              		.loc 1 1024 0
 1109 0012 98B2     		uxth	r0, r3
 1110 0014 02B0     		add	sp, sp, #8
 1111 0016 7047     		bx	lr
 1112              		.cfi_endproc
 1113              	.LFE81:
 1115              		.section	.text.I2C_ITConfig,"ax",%progbits
 1116              		.align	1
 1117              		.global	I2C_ITConfig
 1118              		.thumb
 1119              		.thumb_func
 1121              	I2C_ITConfig:
 1122              	.LFB82:
1025:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1026:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
1027:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Enables or disables the specified I2C interrupts.
1028:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1029:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_IT: specifies the I2C interrupts sources to be enabled or disabled. 
1030:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be any combination of the following values:
1031:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_BUF: Buffer interrupt mask
1032:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_EVT: Event interrupt mask
1033:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_ERR: Error interrupt mask
1034:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  NewState: new state of the specified I2C interrupts.
1035:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1036:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
1037:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
1038:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
1039:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1123              		.loc 1 1039 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128              	.LVL128:
1040:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
1041:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1042:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1043:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_CONFIG_IT(I2C_IT));
1044:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   
1045:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
1046:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1047:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Enable the selected I2C interrupts */
1048:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR2 |= I2C_IT;
 1129              		.loc 1 1048 0
 1130 0000 8388     		ldrh	r3, [r0, #4]
 1131 0002 9BB2     		uxth	r3, r3
1045:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (NewState != DISABLE)
 1132              		.loc 1 1045 0
 1133 0004 0AB1     		cbz	r2, .L98
 1134              		.loc 1 1048 0
 1135 0006 1943     		orrs	r1, r1, r3
 1136              	.LVL129:
 1137 0008 01E0     		b	.L100
 1138              	.LVL130:
 1139              	.L98:
1049:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1050:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
1051:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1052:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Disable the selected I2C interrupts */
1053:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~I2C_IT;
 1140              		.loc 1 1053 0
 1141 000a 23EA0101 		bic	r1, r3, r1
 1142              	.LVL131:
 1143              	.L100:
 1144 000e 8180     		strh	r1, [r0, #4]	@ movhi
 1145 0010 7047     		bx	lr
 1146              		.cfi_endproc
 1147              	.LFE82:
 1149              		.section	.text.I2C_CheckEvent,"ax",%progbits
 1150              		.align	1
 1151              		.global	I2C_CheckEvent
 1152              		.thumb
 1153              		.thumb_func
 1155              	I2C_CheckEvent:
 1156              	.LFB83:
1054:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1055:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
1056:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1057:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /*
1058:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================
1059:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                           1. Basic state monitoring                    
1060:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================  
1061:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  */
1062:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1063:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
1064:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Checks whether the last I2Cx Event is equal to the one passed
1065:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         as parameter.
1066:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1067:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_EVENT: specifies the event to be checked. 
1068:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be one of the following values:
1069:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED: EV1
1070:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED: EV1
1071:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED: EV1
1072:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED: EV1
1073:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED: EV1
1074:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_RECEIVED: EV2
1075:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF): EV2
1076:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL): EV2
1077:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_TRANSMITTED: EV3
1078:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF): EV3
1079:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL): EV3
1080:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_ACK_FAILURE: EV3_2
1081:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_STOP_DETECTED: EV4
1082:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_SELECT: EV5
1083:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED: EV6     
1084:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED: EV6
1085:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_RECEIVED: EV7
1086:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTING: EV8
1087:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTED: EV8_2
1088:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_ADDRESS10: EV9
1089:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *     
1090:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1091:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         in stm32f2xx_i2c.h file.
1092:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *    
1093:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval An ErrorStatus enumeration value:
1094:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           - SUCCESS: Last event is equal to the I2C_EVENT
1095:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *           - ERROR: Last event is different from the I2C_EVENT
1096:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
1097:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
1098:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1157              		.loc 1 1098 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162              	.LVL132:
1099:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint32_t lastevent = 0;
1100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
1101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   ErrorStatus status = ERROR;
1102:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1103:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
1104:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1105:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_EVENT(I2C_EVENT));
1106:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Read the I2Cx status register */
1108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flag1 = I2Cx->SR1;
 1163              		.loc 1 1108 0
 1164 0000 838A     		ldrh	r3, [r0, #20]
1109:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flag2 = I2Cx->SR2;
 1165              		.loc 1 1109 0
 1166 0002 008B     		ldrh	r0, [r0, #24]
 1167              	.LVL133:
1108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flag1 = I2Cx->SR1;
 1168              		.loc 1 1108 0
 1169 0004 9AB2     		uxth	r2, r3
 1170              	.LVL134:
1110:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flag2 = flag2 << 16;
1111:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1112:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get the last event value from I2C status register */
1113:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1171              		.loc 1 1113 0
 1172 0006 42EA0043 		orr	r3, r2, r0, lsl #16
 1173 000a 0B40     		ands	r3, r3, r1
1114:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1115:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check whether the last event contains the I2C_EVENT */
1116:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if ((lastevent & I2C_EVENT) == I2C_EVENT)
 1174              		.loc 1 1116 0
 1175 000c 23F07F42 		bic	r2, r3, #-16777216
 1176              	.LVL135:
1117:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1118:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* SUCCESS: last event is equal to I2C_EVENT */
1119:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     status = SUCCESS;
1120:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1121:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
1122:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1123:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* ERROR: last event is different from I2C_EVENT */
1124:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     status = ERROR;
1125:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1126:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Return status */
1127:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   return status;
1128:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 1177              		.loc 1 1128 0
 1178 0010 511A     		subs	r1, r2, r1
 1179              	.LVL136:
 1180 0012 4842     		rsbs	r0, r1, #0
 1181              	.LVL137:
 1182 0014 4841     		adcs	r0, r0, r1
 1183 0016 7047     		bx	lr
 1184              		.cfi_endproc
 1185              	.LFE83:
 1187              		.section	.text.I2C_GetLastEvent,"ax",%progbits
 1188              		.align	1
 1189              		.global	I2C_GetLastEvent
 1190              		.thumb
 1191              		.thumb_func
 1193              	I2C_GetLastEvent:
 1194              	.LFB84:
1129:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1130:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /*
1131:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================
1132:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                           2. Advanced state monitoring                   
1133:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================  
1134:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  */
1135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1136:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
1137:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Returns the last I2Cx Event.
1138:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1139:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *     
1140:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1141:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *         in stm32f2xx_i2c.h file.
1142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *    
1143:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval The last event
1144:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
1145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx)
1146:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1195              		.loc 1 1146 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200              	.LVL138:
1147:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint32_t lastevent = 0;
1148:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
1149:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1150:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
1151:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1152:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Read the I2Cx status register */
1154:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flag1 = I2Cx->SR1;
 1201              		.loc 1 1154 0
 1202 0000 838A     		ldrh	r3, [r0, #20]
1155:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flag2 = I2Cx->SR2;
 1203              		.loc 1 1155 0
 1204 0002 008B     		ldrh	r0, [r0, #24]
 1205              	.LVL139:
1154:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flag1 = I2Cx->SR1;
 1206              		.loc 1 1154 0
 1207 0004 99B2     		uxth	r1, r3
 1208              	.LVL140:
1156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flag2 = flag2 << 16;
1157:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1158:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get the last event value from I2C status register */
1159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1209              		.loc 1 1159 0
 1210 0006 41EA0042 		orr	r2, r1, r0, lsl #16
1160:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1161:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Return status */
1162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   return lastevent;
1163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 1211              		.loc 1 1163 0
 1212 000a 22F07F40 		bic	r0, r2, #-16777216
 1213              	.LVL141:
 1214 000e 7047     		bx	lr
 1215              		.cfi_endproc
 1216              	.LFE84:
 1218              		.section	.text.I2C_GetFlagStatus,"ax",%progbits
 1219              		.align	1
 1220              		.global	I2C_GetFlagStatus
 1221              		.thumb
 1222              		.thumb_func
 1224              	I2C_GetFlagStatus:
 1225              	.LFB85:
1164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1165:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /*
1166:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================
1167:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****                           3. Flag-based state monitoring                   
1168:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  ===============================================================================  
1169:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****  */
1170:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
1172:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Checks whether the specified I2C flag is set or not.
1173:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1174:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to check. 
1175:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be one of the following values:
1176:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_DUALF: Dual flag (Slave mode)
1177:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_SMBHOST: SMBus host header (Slave mode)
1178:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_SMBDEFAULT: SMBus default header (Slave mode)
1179:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_GENCALL: General call header flag (Slave mode)
1180:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_TRA: Transmitter/Receiver flag
1181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_BUSY: Bus busy flag
1182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_MSL: Master/Slave flag
1183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1184:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1186:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_TXE: Data register empty flag (Transmitter)
1191:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_RXNE: Data register not empty (Receiver) flag
1192:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_STOPF: Stop detection flag (Slave mode)
1193:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_ADD10: 10-bit header sent flag (Master mode)
1194:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_BTF: Byte transfer finished flag
1195:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address sent flag (Master mode) "ADSL"
1196:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                                Address matched flag (Slave mode)"ENDAD"
1197:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_SB: Start bit flag (Master mode)
1198:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1199:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
1200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1201:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1226              		.loc 1 1201 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 8
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 1231              	.LVL142:
 1232 0000 82B0     		sub	sp, sp, #8
 1233              	.LCFI4:
 1234              		.cfi_def_cfa_offset 8
1202:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   FlagStatus bitstatus = RESET;
1203:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   __IO uint32_t i2creg = 0, i2cxbase = 0;
 1235              		.loc 1 1203 0
 1236 0002 0023     		movs	r3, #0
 1237 0004 0093     		str	r3, [sp, #0]
 1238              	.LVL143:
 1239 0006 0193     		str	r3, [sp, #4]
 1240              	.LVL144:
1204:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1205:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
1206:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1207:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_GET_FLAG(I2C_FLAG));
1208:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1209:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get the I2Cx peripheral base address */
1210:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   i2cxbase = (uint32_t)I2Cx;
 1241              		.loc 1 1210 0
 1242 0008 0190     		str	r0, [sp, #4]
1211:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   
1212:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Read flag register index */
1213:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   i2creg = I2C_FLAG >> 28;
 1243              		.loc 1 1213 0
 1244 000a 080F     		lsrs	r0, r1, #28
 1245              	.LVL145:
 1246 000c 0090     		str	r0, [sp, #0]
 1247              	.LVL146:
1214:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   
1215:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get bit[23:0] of the flag */
1216:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_FLAG &= FLAG_MASK;
1217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   
1218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if(i2creg != 0)
 1248              		.loc 1 1218 0
 1249 000e 009A     		ldr	r2, [sp, #0]
1216:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_FLAG &= FLAG_MASK;
 1250              		.loc 1 1216 0
 1251 0010 21F07F41 		bic	r1, r1, #-16777216
 1252              	.LVL147:
 1253              		.loc 1 1218 0
 1254 0014 12B1     		cbz	r2, .L104
1219:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1220:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Get the I2Cx SR1 register address */
1221:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     i2cxbase += 0x14;
 1255              		.loc 1 1221 0
 1256 0016 019B     		ldr	r3, [sp, #4]
 1257 0018 1433     		adds	r3, r3, #20
 1258              	.LVL148:
 1259 001a 02E0     		b	.L106
 1260              	.LVL149:
 1261              	.L104:
1222:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1223:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
1224:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1225:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Flag in I2Cx SR2 Register */
1226:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2C_FLAG = (uint32_t)(I2C_FLAG >> 16);
1227:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* Get the I2Cx SR2 register address */
1228:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     i2cxbase += 0x18;
 1262              		.loc 1 1228 0
 1263 001c 019B     		ldr	r3, [sp, #4]
1226:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     I2C_FLAG = (uint32_t)(I2C_FLAG >> 16);
 1264              		.loc 1 1226 0
 1265 001e 090C     		lsrs	r1, r1, #16
 1266              	.LVL150:
 1267              		.loc 1 1228 0
 1268 0020 1833     		adds	r3, r3, #24
 1269              	.LVL151:
 1270              	.L106:
 1271 0022 0193     		str	r3, [sp, #4]
1229:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1230:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   
1231:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if(((*(__IO uint32_t *)i2cxbase) & I2C_FLAG) != (uint32_t)RESET)
 1272              		.loc 1 1231 0
 1273 0024 0198     		ldr	r0, [sp, #4]
 1274 0026 0268     		ldr	r2, [r0, #0]
 1275              	.LVL152:
 1276 0028 1142     		tst	r1, r2
1232:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1233:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* I2C_FLAG is set */
1234:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     bitstatus = SET;
1235:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1236:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
1237:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1238:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* I2C_FLAG is reset */
1239:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     bitstatus = RESET;
1240:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1241:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   
1242:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Return the I2C_FLAG status */
1243:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   return  bitstatus;
1244:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 1277              		.loc 1 1244 0
 1278 002a 0CBF     		ite	eq
 1279 002c 0020     		moveq	r0, #0
 1280 002e 0120     		movne	r0, #1
 1281 0030 02B0     		add	sp, sp, #8
 1282 0032 7047     		bx	lr
 1283              		.cfi_endproc
 1284              	.LFE85:
 1286              		.section	.text.I2C_ClearFlag,"ax",%progbits
 1287              		.align	1
 1288              		.global	I2C_ClearFlag
 1289              		.thumb
 1290              		.thumb_func
 1292              	I2C_ClearFlag:
 1293              	.LFB86:
1245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1246:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
1247:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Clears the I2Cx's pending flags.
1248:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1249:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to clear. 
1250:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be any combination of the following values:
1251:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1252:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1253:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1254:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1255:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1256:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1257:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1258:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *   
1259:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1260:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetFlagStatus()) followed by a write operation 
1261:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          to I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1262:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1263:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetFlagStatus()) followed by writing the 
1264:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          second byte of the address in DR register.
1265:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1266:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetFlagStatus()) followed by a 
1267:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1268:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1269:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          I2C_SR1 register (I2C_GetFlagStatus()) followed by a read operation to 
1270:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1271:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   SB (Start Bit) is cleared software sequence: a read operation to I2C_SR1
1272:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          register (I2C_GetFlagStatus()) followed by a write operation to I2C_DR
1273:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          register (I2C_SendData()).
1274:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *  
1275:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
1276:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
1277:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1278:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1294              		.loc 1 1278 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
 1299              	.LVL153:
1279:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint32_t flagpos = 0;
1280:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
1281:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1282:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_CLEAR_FLAG(I2C_FLAG));
1283:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get the I2C flag position */
1284:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flagpos = I2C_FLAG & FLAG_MASK;
1285:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Clear the selected I2C flag */
1286:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 1300              		.loc 1 1286 0
 1301 0000 C943     		mvns	r1, r1
 1302              	.LVL154:
 1303 0002 8AB2     		uxth	r2, r1
 1304 0004 8282     		strh	r2, [r0, #20]	@ movhi
 1305 0006 7047     		bx	lr
 1306              		.cfi_endproc
 1307              	.LFE86:
 1309              		.section	.text.I2C_GetITStatus,"ax",%progbits
 1310              		.align	1
 1311              		.global	I2C_GetITStatus
 1312              		.thumb
 1313              		.thumb_func
 1315              	I2C_GetITStatus:
 1316              	.LFB87:
1287:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
1288:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1289:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
1290:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Checks whether the specified I2C interrupt has occurred or not.
1291:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1292:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt source to check. 
1293:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be one of the following values:
1294:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert flag
1295:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error flag
1296:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception flag
1297:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun flag (Slave mode)
1298:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure flag
1299:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost flag (Master mode)
1300:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error flag
1301:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_TXE: Data register empty flag (Transmitter)
1302:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_RXNE: Data register not empty (Receiver) flag
1303:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_STOPF: Stop detection flag (Slave mode)
1304:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_ADD10: 10-bit header sent flag (Master mode)
1305:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_BTF: Byte transfer finished flag
1306:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_ADDR: Address sent flag (Master mode) "ADSL"
1307:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *                              Address matched flag (Slave mode)"ENDAD"
1308:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_SB: Start bit flag (Master mode)
1309:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1310:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
1311:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1312:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1317              		.loc 1 1312 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              		@ link register save eliminated.
 1322              	.LVL155:
1313:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   ITStatus bitstatus = RESET;
1314:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint32_t enablestatus = 0;
1315:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1316:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
1317:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1318:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_GET_IT(I2C_IT));
1319:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1320:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check if the interrupt source is enabled or not */
1321:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 1323              		.loc 1 1321 0
 1324 0000 8388     		ldrh	r3, [r0, #4]
1322:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   
1323:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get bit[23:0] of the flag */
1324:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2C_IT &= FLAG_MASK;
1325:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1326:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the status of the specified I2C flag */
1327:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   if (((I2Cx->SR1 & I2C_IT) != (uint32_t)RESET) && enablestatus)
 1325              		.loc 1 1327 0
 1326 0002 808A     		ldrh	r0, [r0, #20]
 1327              	.LVL156:
1321:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 1328              		.loc 1 1321 0
 1329 0004 9AB2     		uxth	r2, r3
 1330              	.LVL157:
 1331              		.loc 1 1327 0
 1332 0006 83B2     		uxth	r3, r0
 1333 0008 13EA0100 		ands	r0, r3, r1
 1334 000c 06D0     		beq	.L109
1321:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 1335              		.loc 1 1321 0 discriminator 1
 1336 000e 01F0E061 		and	r1, r1, #117440512
 1337              	.LVL158:
 1338              		.loc 1 1327 0 discriminator 1
 1339 0012 12EA1141 		ands	r1, r2, r1, lsr #16
 1340              	.LVL159:
1328:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1329:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* I2C_IT is set */
1330:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     bitstatus = SET;
 1341              		.loc 1 1330 0 discriminator 1
 1342 0016 0CBF     		ite	eq
 1343 0018 0020     		moveq	r0, #0
 1344 001a 0120     		movne	r0, #1
 1345              	.L109:
 1346              	.LVL160:
1331:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1332:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   else
1333:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   {
1334:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     /* I2C_IT is reset */
1335:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****     bitstatus = RESET;
1336:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   }
1337:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Return the I2C_IT status */
1338:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   return  bitstatus;
1339:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** }
 1347              		.loc 1 1339 0
 1348 001c 7047     		bx	lr
 1349              		.cfi_endproc
 1350              	.LFE87:
 1352              		.section	.text.I2C_ClearITPendingBit,"ax",%progbits
 1353              		.align	1
 1354              		.global	I2C_ClearITPendingBit
 1355              		.thumb
 1356              		.thumb_func
 1358              	I2C_ClearITPendingBit:
 1359              	.LFB88:
1340:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1341:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** /**
1342:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @brief  Clears the I2Cx's interrupt pending bits.
1343:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1344:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt pending bit to clear. 
1345:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          This parameter can be any combination of the following values:
1346:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert interrupt
1347:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error interrupt
1348:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception  interrupt
1349:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun interrupt (Slave mode)
1350:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure interrupt
1351:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost interrupt (Master mode)
1352:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error interrupt
1353:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * 
1354:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1355:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1356:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1357:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1358:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetITStatus()) followed by writing the second 
1359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          byte of the address in I2C_DR register.
1360:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1361:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetITStatus()) followed by a 
1362:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1363:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1364:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a read operation to 
1365:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1366:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @note   SB (Start Bit) is cleared by software sequence: a read operation to 
1367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1368:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   *          I2C_DR register (I2C_SendData()).
1369:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   * @retval None
1370:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   */
1371:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1372:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** {
 1360              		.loc 1 1372 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 0
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364              		@ link register save eliminated.
 1365              	.LVL161:
1373:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   uint32_t flagpos = 0;
1374:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Check the parameters */
1375:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1376:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   assert_param(IS_I2C_CLEAR_IT(I2C_IT));
1377:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1378:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Get the I2C flag position */
1379:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   flagpos = I2C_IT & FLAG_MASK;
1380:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c **** 
1381:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   /* Clear the selected I2C flag */
1382:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 1366              		.loc 1 1382 0
 1367 0000 C943     		mvns	r1, r1
 1368              	.LVL162:
 1369 0002 8AB2     		uxth	r2, r1
 1370 0004 8282     		strh	r2, [r0, #20]	@ movhi
 1371 0006 7047     		bx	lr
 1372              		.cfi_endproc
 1373              	.LFE88:
 1375              		.text
 1376              	.Letext0:
 1377              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q1\\bin\\../lib/gcc/arm-none-eab
 1378              		.file 3 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx.h"
 1379              		.file 4 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx_rcc.h"
 1380              		.file 5 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx_i2c.h"
 1381              		.file 6 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_i2c.c
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:19     .text.I2C_DeInit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:24     .text.I2C_DeInit:00000000 I2C_DeInit
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:91     .text.I2C_DeInit:00000050 $d
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:98     .text.I2C_Init:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:103    .text.I2C_Init:00000000 I2C_Init
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:282    .text.I2C_Init:000000cc $d
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:288    .text.I2C_StructInit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:293    .text.I2C_StructInit:00000000 I2C_StructInit
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:326    .text.I2C_Cmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:331    .text.I2C_Cmd:00000000 I2C_Cmd
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:362    .text.I2C_GenerateSTART:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:367    .text.I2C_GenerateSTART:00000000 I2C_GenerateSTART
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:398    .text.I2C_GenerateSTOP:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:403    .text.I2C_GenerateSTOP:00000000 I2C_GenerateSTOP
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:434    .text.I2C_Send7bitAddress:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:439    .text.I2C_Send7bitAddress:00000000 I2C_Send7bitAddress
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:465    .text.I2C_AcknowledgeConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:470    .text.I2C_AcknowledgeConfig:00000000 I2C_AcknowledgeConfig
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:501    .text.I2C_OwnAddress2Config:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:506    .text.I2C_OwnAddress2Config:00000000 I2C_OwnAddress2Config
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:534    .text.I2C_DualAddressCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:539    .text.I2C_DualAddressCmd:00000000 I2C_DualAddressCmd
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:570    .text.I2C_GeneralCallCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:575    .text.I2C_GeneralCallCmd:00000000 I2C_GeneralCallCmd
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:606    .text.I2C_SoftwareResetCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:611    .text.I2C_SoftwareResetCmd:00000000 I2C_SoftwareResetCmd
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:642    .text.I2C_StretchClockCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:647    .text.I2C_StretchClockCmd:00000000 I2C_StretchClockCmd
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:678    .text.I2C_FastModeDutyCycleConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:683    .text.I2C_FastModeDutyCycleConfig:00000000 I2C_FastModeDutyCycleConfig
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:716    .text.I2C_NACKPositionConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:721    .text.I2C_NACKPositionConfig:00000000 I2C_NACKPositionConfig
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:754    .text.I2C_SMBusAlertConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:759    .text.I2C_SMBusAlertConfig:00000000 I2C_SMBusAlertConfig
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:792    .text.I2C_ARPCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:797    .text.I2C_ARPCmd:00000000 I2C_ARPCmd
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:828    .text.I2C_SendData:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:833    .text.I2C_SendData:00000000 I2C_SendData
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:848    .text.I2C_ReceiveData:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:853    .text.I2C_ReceiveData:00000000 I2C_ReceiveData
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:871    .text.I2C_TransmitPEC:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:876    .text.I2C_TransmitPEC:00000000 I2C_TransmitPEC
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:907    .text.I2C_PECPositionConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:912    .text.I2C_PECPositionConfig:00000000 I2C_PECPositionConfig
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:945    .text.I2C_CalculatePEC:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:950    .text.I2C_CalculatePEC:00000000 I2C_CalculatePEC
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:981    .text.I2C_GetPEC:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:986    .text.I2C_GetPEC:00000000 I2C_GetPEC
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1004   .text.I2C_DMACmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1009   .text.I2C_DMACmd:00000000 I2C_DMACmd
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1040   .text.I2C_DMALastTransferCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1045   .text.I2C_DMALastTransferCmd:00000000 I2C_DMALastTransferCmd
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1076   .text.I2C_ReadRegister:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1081   .text.I2C_ReadRegister:00000000 I2C_ReadRegister
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1116   .text.I2C_ITConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1121   .text.I2C_ITConfig:00000000 I2C_ITConfig
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1150   .text.I2C_CheckEvent:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1155   .text.I2C_CheckEvent:00000000 I2C_CheckEvent
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1188   .text.I2C_GetLastEvent:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1193   .text.I2C_GetLastEvent:00000000 I2C_GetLastEvent
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1219   .text.I2C_GetFlagStatus:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1224   .text.I2C_GetFlagStatus:00000000 I2C_GetFlagStatus
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1287   .text.I2C_ClearFlag:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1292   .text.I2C_ClearFlag:00000000 I2C_ClearFlag
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1310   .text.I2C_GetITStatus:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1315   .text.I2C_GetITStatus:00000000 I2C_GetITStatus
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1353   .text.I2C_ClearITPendingBit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccemmiql.s:1358   .text.I2C_ClearITPendingBit:00000000 I2C_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
