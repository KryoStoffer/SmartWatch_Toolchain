   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f2xx_iwdg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  19              		.align	1
  20              		.global	IWDG_WriteAccessCmd
  21              		.thumb
  22              		.thumb_func
  24              	IWDG_WriteAccessCmd:
  25              	.LFB56:
  26              		.file 1 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx_iwdg.c"
   1:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /**
   2:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   ******************************************************************************
   3:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @file    stm32f2xx_iwdg.c
   4:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @author  MCD Application Team
   5:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @version V1.1.2
   6:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @date    05-March-2012 
   7:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          functionalities of the Independent watchdog (IWDG) peripheral:           
   9:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *           - Prescaler and Counter configuration
  10:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *           - IWDG activation
  11:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *           - Flag management
  12:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *
  13:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *  @verbatim  
  14:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *  
  15:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          ===================================================================
  16:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *                                     IWDG features
  17:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          ===================================================================
  18:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *    
  19:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          The IWDG can be started by either software or hardware (configurable
  20:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          through option byte).
  21:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            
  22:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          The IWDG is clocked by its own dedicated low-speed clock (LSI) and
  23:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          thus stays active even if the main clock fails.
  24:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          Once the IWDG is started, the LSI is forced ON and cannot be disabled
  25:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          (LSI cannot be disabled too), and the counter starts counting down from 
  26:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          the reset value of 0xFFF. When it reaches the end of count value (0x000)
  27:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          a system reset is generated.
  28:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          The IWDG counter should be reloaded at regular intervals to prevent
  29:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          an MCU reset.
  30:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *                           
  31:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          The IWDG is implemented in the VDD voltage domain that is still functional
  32:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).          
  33:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            
  34:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          IWDGRST flag in RCC_CSR register can be used to inform when a IWDG
  35:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          reset occurs.
  36:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            
  37:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  38:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          The IWDG timeout may vary due to LSI frequency dispersion. STM32F2xx
  39:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          devices provide the capability to measure the LSI frequency (LSI clock
  40:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          connected internally to TIM5 CH4 input capture). The measured value
  41:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          can be used to have an IWDG timeout with an acceptable accuracy. 
  42:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          For more information, please refer to the STM32F2xx Reference manual
  43:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          
  44:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *                            
  45:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          ===================================================================
  46:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *                                 How to use this driver
  47:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          ===================================================================
  48:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          1. Enable write access to IWDG_PR and IWDG_RLR registers using
  49:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *             IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable) function
  50:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *               
  51:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          2. Configure the IWDG prescaler using IWDG_SetPrescaler() function
  52:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            
  53:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          3. Configure the IWDG counter value using IWDG_SetReload() function.
  54:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *             This value will be loaded in the IWDG counter each time the counter
  55:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *             is reloaded, then the IWDG will start counting down from this value.
  56:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            
  57:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          4. Start the IWDG using IWDG_Enable() function, when the IWDG is used
  58:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *             in software mode (no need to enable the LSI, it will be enabled
  59:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *             by hardware)
  60:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *             
  61:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          5. Then the application program must reload the IWDG counter at regular
  62:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  63:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *             IWDG_ReloadCounter() function.      
  64:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          
  65:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *  @endverbatim
  66:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *    
  67:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   ******************************************************************************
  68:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @attention
  69:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *
  70:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  71:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *
  72:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  73:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * You may not use this file except in compliance with the License.
  74:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * You may obtain a copy of the License at:
  75:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *
  76:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  77:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *
  78:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * Unless required by applicable law or agreed to in writing, software 
  79:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  80:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  81:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * See the License for the specific language governing permissions and
  82:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * limitations under the License.
  83:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *
  84:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   ******************************************************************************
  85:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
  86:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
  87:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  88:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** #include "stm32f2xx_iwdg.h"
  89:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
  90:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
  91:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @{
  92:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
  93:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
  94:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /** @defgroup IWDG 
  95:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @brief IWDG driver modules
  96:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @{
  97:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */ 
  98:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
  99:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
 100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /* Private define ------------------------------------------------------------*/
 101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 102:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /* KR register bit mask */
 103:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** #define KR_KEY_RELOAD    ((uint16_t)0xAAAA)
 104:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** #define KR_KEY_ENABLE    ((uint16_t)0xCCCC)
 105:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 106:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 109:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /* Private functions ---------------------------------------------------------*/
 110:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 111:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /** @defgroup IWDG_Private_Functions
 112:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @{
 113:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 114:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 115:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /** @defgroup IWDG_Group1 Prescaler and Counter configuration functions
 116:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  *  @brief   Prescaler and Counter configuration functions
 117:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  *
 118:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** @verbatim   
 119:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  ===============================================================================
 120:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****                   Prescaler and Counter configuration functions
 121:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  ===============================================================================  
 122:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 123:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** @endverbatim
 124:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @{
 125:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 126:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 127:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /**
 128:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
 129:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
 130:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          This parameter can be one of the following values:
 131:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
 132:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR register
 133:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @retval None
 134:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
 136:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** {
  27              		.loc 1 136 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 137:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   /* Check the parameters */
 138:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
 139:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  33              		.loc 1 139 0
  34 0000 014B     		ldr	r3, .L2
  35 0002 1860     		str	r0, [r3, #0]
  36 0004 7047     		bx	lr
  37              	.L3:
  38 0006 00BF     		.align	2
  39              	.L2:
  40 0008 00300040 		.word	1073754112
  41              		.cfi_endproc
  42              	.LFE56:
  44              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  45              		.align	1
  46              		.global	IWDG_SetPrescaler
  47              		.thumb
  48              		.thumb_func
  50              	IWDG_SetPrescaler:
  51              	.LFB57:
 140:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** }
 141:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /**
 143:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 144:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          This parameter can be one of the following values:
 146:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 147:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 148:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 149:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 150:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 151:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 152:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @retval None
 154:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 155:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** {
  52              		.loc 1 156 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
 157:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   /* Check the parameters */
 158:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
  58              		.loc 1 159 0
  59 0000 014B     		ldr	r3, .L5
  60 0002 5860     		str	r0, [r3, #4]
  61 0004 7047     		bx	lr
  62              	.L6:
  63 0006 00BF     		.align	2
  64              	.L5:
  65 0008 00300040 		.word	1073754112
  66              		.cfi_endproc
  67              	.LFE57:
  69              		.section	.text.IWDG_SetReload,"ax",%progbits
  70              		.align	1
  71              		.global	IWDG_SetReload
  72              		.thumb
  73              		.thumb_func
  75              	IWDG_SetReload:
  76              	.LFB58:
 160:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** }
 161:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /**
 163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @brief  Sets IWDG Reload value.
 164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 165:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          This parameter must be a number between 0 and 0x0FFF.
 166:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @retval None
 167:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 168:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 169:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** {
  77              		.loc 1 169 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.LVL2:
 170:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   /* Check the parameters */
 171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 172:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   IWDG->RLR = Reload;
  83              		.loc 1 172 0
  84 0000 014B     		ldr	r3, .L8
  85 0002 9860     		str	r0, [r3, #8]
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 00BF     		.align	2
  89              	.L8:
  90 0008 00300040 		.word	1073754112
  91              		.cfi_endproc
  92              	.LFE58:
  94              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
  95              		.align	1
  96              		.global	IWDG_ReloadCounter
  97              		.thumb
  98              		.thumb_func
 100              	IWDG_ReloadCounter:
 101              	.LFB59:
 173:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** }
 174:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 175:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /**
 176:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 177:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *         (write access to IWDG_PR and IWDG_RLR registers disabled).
 178:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @param  None
 179:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @retval None
 180:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** void IWDG_ReloadCounter(void)
 182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** {
 102              		.loc 1 182 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   IWDG->KR = KR_KEY_RELOAD;
 107              		.loc 1 183 0
 108 0000 024B     		ldr	r3, .L11
 109 0002 4AF6AA22 		movw	r2, #43690
 110 0006 1A60     		str	r2, [r3, #0]
 111 0008 7047     		bx	lr
 112              	.L12:
 113 000a 00BF     		.align	2
 114              	.L11:
 115 000c 00300040 		.word	1073754112
 116              		.cfi_endproc
 117              	.LFE59:
 119              		.section	.text.IWDG_Enable,"ax",%progbits
 120              		.align	1
 121              		.global	IWDG_Enable
 122              		.thumb
 123              		.thumb_func
 125              	IWDG_Enable:
 126              	.LFB60:
 184:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** }
 185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 186:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /**
 187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @}
 188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /** @defgroup IWDG_Group2 IWDG activation function
 191:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  *  @brief   IWDG activation function 
 192:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  *
 193:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** @verbatim   
 194:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  ===============================================================================
 195:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****                           IWDG activation function
 196:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  ===============================================================================  
 197:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 198:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** @endverbatim
 199:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @{
 200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 201:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 202:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /**
 203:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 204:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @param  None
 205:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @retval None
 206:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 207:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** void IWDG_Enable(void)
 208:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** {
 127              		.loc 1 208 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 209:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   IWDG->KR = KR_KEY_ENABLE;
 132              		.loc 1 209 0
 133 0000 024B     		ldr	r3, .L14
 134 0002 4CF6CC42 		movw	r2, #52428
 135 0006 1A60     		str	r2, [r3, #0]
 136 0008 7047     		bx	lr
 137              	.L15:
 138 000a 00BF     		.align	2
 139              	.L14:
 140 000c 00300040 		.word	1073754112
 141              		.cfi_endproc
 142              	.LFE60:
 144              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 145              		.align	1
 146              		.global	IWDG_GetFlagStatus
 147              		.thumb
 148              		.thumb_func
 150              	IWDG_GetFlagStatus:
 151              	.LFB61:
 210:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** }
 211:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 212:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /**
 213:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @}
 214:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 215:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 216:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /** @defgroup IWDG_Group3 Flag management function 
 217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  *  @brief  Flag management function  
 218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  *
 219:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** @verbatim   
 220:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  ===============================================================================
 221:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****                             Flag management function 
 222:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****  ===============================================================================  
 223:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 224:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** @endverbatim
 225:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @{
 226:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 227:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** 
 228:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** /**
 229:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 230:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 231:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *          This parameter can be one of the following values:
 232:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 233:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   *            @arg IWDG_FLAG_RVU: Reload Value Update on going
 234:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 235:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   */
 236:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 237:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** {
 152              		.loc 1 237 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.LVL3:
 238:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   FlagStatus bitstatus = RESET;
 239:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   /* Check the parameters */
 240:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 241:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 158              		.loc 1 241 0
 159 0000 034B     		ldr	r3, .L17
 160 0002 D968     		ldr	r1, [r3, #12]
 161              	.LVL4:
 162 0004 0842     		tst	r0, r1
 242:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   {
 243:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****     bitstatus = SET;
 244:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   }
 245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   else
 246:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   {
 247:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****     bitstatus = RESET;
 248:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   }
 249:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   /* Return the flag status */
 250:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c ****   return bitstatus;
 251:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_iwdg.c **** }
 163              		.loc 1 251 0
 164 0006 0CBF     		ite	eq
 165 0008 0020     		moveq	r0, #0
 166 000a 0120     		movne	r0, #1
 167              	.LVL5:
 168 000c 7047     		bx	lr
 169              	.L18:
 170 000e 00BF     		.align	2
 171              	.L17:
 172 0010 00300040 		.word	1073754112
 173              		.cfi_endproc
 174              	.LFE61:
 176              		.text
 177              	.Letext0:
 178              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q1\\bin\\../lib/gcc/arm-none-eab
 179              		.file 3 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx.h"
 180              		.file 4 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_iwdg.c
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:19     .text.IWDG_WriteAccessCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:24     .text.IWDG_WriteAccessCmd:00000000 IWDG_WriteAccessCmd
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:40     .text.IWDG_WriteAccessCmd:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:45     .text.IWDG_SetPrescaler:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:50     .text.IWDG_SetPrescaler:00000000 IWDG_SetPrescaler
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:65     .text.IWDG_SetPrescaler:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:70     .text.IWDG_SetReload:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:75     .text.IWDG_SetReload:00000000 IWDG_SetReload
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:90     .text.IWDG_SetReload:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:95     .text.IWDG_ReloadCounter:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:100    .text.IWDG_ReloadCounter:00000000 IWDG_ReloadCounter
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:115    .text.IWDG_ReloadCounter:0000000c $d
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:120    .text.IWDG_Enable:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:125    .text.IWDG_Enable:00000000 IWDG_Enable
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:140    .text.IWDG_Enable:0000000c $d
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:145    .text.IWDG_GetFlagStatus:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:150    .text.IWDG_GetFlagStatus:00000000 IWDG_GetFlagStatus
C:\Users\STINA\AppData\Local\Temp\ccU5OyJ0.s:172    .text.IWDG_GetFlagStatus:00000010 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
