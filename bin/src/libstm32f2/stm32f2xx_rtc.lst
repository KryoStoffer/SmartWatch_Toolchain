   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f2xx_rtc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	RTC_ByteToBcd2:
  24              	.LFB98:
  25              		.file 1 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx_rtc.c"
   1:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
   2:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ******************************************************************************
   3:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @file    stm32f2xx_rtc.c
   4:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @author  MCD Application Team
   5:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @version V1.1.2
   6:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @date    05-March-2012 
   7:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
   9:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - Initialization
  10:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - Calendar (Time and Date) configuration
  11:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - Alarms (Alarm A and Alarm B) configuration
  12:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - WakeUp Timer configuration
  13:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - Daylight Saving configuration
  14:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - Output pin Configuration
  15:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - Coarse Calibration configuration
  16:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - TimeStamp configuration
  17:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - Tampers configuration
  18:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - Backup Data Registers configuration
  19:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration
  20:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           - Interrupts and flags management
  21:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  22:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *  @verbatim
  23:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  24:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
  25:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                               Backup Domain Operating Condition
  26:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
  27:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          The real-time clock (RTC), the RTC backup registers, and the backup 
  28:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          SRAM (BKP SRAM) can be powered from the VBAT voltage when the main 
  29:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          VDD supply is powered off.
  30:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          To retain the content of the RTC backup registers, backup SRAM, 
  31:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          and supply the RTC when VDD is turned off, VBAT pin can be connected 
  32:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          to an optional standby voltage supplied by a battery or by another 
  33:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          source.
  34:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  35:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          To allow the RTC to operate even when the main digital supply (VDD) 
  36:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          is turned off, the VBAT pin powers the following blocks:
  37:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            1 - The RTC
  38:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            2 - The LSE oscillator
  39:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            3 - The backup SRAM when the low power backup regulator is enabled
  40:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            4 - PC13 to PC15 I/Os, plus PI8 I/O (when available)
  41:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  42:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          When the backup domain is supplied by VDD (analog switch connected 
  43:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          to VDD), the following functions are available:
  44:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            1 - PC14 and PC15 can be used as either GPIO or LSE pins
  45:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            2 - PC13 can be used as a GPIO or as the RTC_AF1 pin
  46:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            3 - PI8 can be used as a GPIO or as the RTC_AF2 pin
  47:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  48:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          When the backup domain is supplied by VBAT (analog switch connected 
  49:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          to VBAT because VDD is not present), the following functions are available:
  50:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            1 - PC14 and PC15 can be used as LSE pins only
  51:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            2 - PC13 can be used as the RTC_AF1 pin 
  52:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            3 - PI8 can be used as the RTC_AF2 pin
  53:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  54:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
  55:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                    Backup Domain Reset
  56:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
  57:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          The backup domain reset sets all RTC registers and the RCC_BDCR 
  58:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          register to their reset values. The BKPSRAM is not affected by this
  59:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          reset. The only way of resetting the BKPSRAM is through the Flash 
  60:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          interface by requesting a protection level change from 1 to 0.
  61:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          A backup domain reset is generated when one of the following events
  62:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          occurs:
  63:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            1 - Software reset, triggered by setting the BDRST bit in the 
  64:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                RCC Backup domain control register (RCC_BDCR). You can use the
  65:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                RCC_BackupResetCmd().
  66:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            2 - VDD or VBAT power on, if both supplies have previously been
  67:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                powered off.
  68:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  69:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
  70:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                   Backup Domain Access
  71:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
  72:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          After reset, the backup domain (RTC registers, RTC backup data 
  73:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          registers and backup SRAM) is protected against possible unwanted 
  74:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          write accesses. 
  75:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          To enable access to the RTC Domain and RTC registers, proceed as follows:
  76:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Enable the Power Controller (PWR) APB1 interface clock using the
  77:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              RCC_APB1PeriphClockCmd() function.
  78:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Enable access to RTC domain using the PWR_BackupAccessCmd() function.
  79:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Select the RTC clock source using the RCC_RTCCLKConfig() function.
  80:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Enable RTC Clock using the RCC_RTCCLKCmd() function.
  81:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  82:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
  83:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                   RTC Driver: how to use it
  84:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
  85:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Enable the RTC domain access (see description in the section above)
  86:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Configure the RTC Prescaler (Asynchronous and Synchronous) and
  87:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              RTC hour format using the RTC_Init() function.
  88:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  89:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          Time and Date configuration
  90:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===========================
  91:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - To configure the RTC Calendar (Time and Date) use the RTC_SetTime()
  92:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              and RTC_SetDate() functions.
  93:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - To read the RTC Calendar, use the RTC_GetTime() and RTC_GetDate()
  94:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              functions.
  95:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Use the RTC_DayLightSavingConfig() function to add or sub one
  96:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              hour to the RTC Calendar.    
  97:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
  98:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          Alarm configuration
  99:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================
 100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - To configure the RTC Alarm use the RTC_SetAlarm() function.
 101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Enable the selected RTC Alarm using the RTC_AlarmCmd() function
 102:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - To read the RTC Alarm, use the RTC_GetAlarm() function.
 103:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 104:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          RTC Wakeup configuration
 105:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ========================
 106:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Configure the RTC Wakeup Clock source use the RTC_WakeUpClockConfig()
 107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function.
 108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Configure the RTC WakeUp Counter using the RTC_SetWakeUpCounter() 
 109:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function  
 110:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Enable the RTC WakeUp using the RTC_WakeUpCmd() function  
 111:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - To read the RTC WakeUp Counter register, use the RTC_GetWakeUpCounter() 
 112:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function.
 113:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 114:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          Outputs configuration
 115:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          =====================
 116:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          The RTC has 2 different outputs:
 117:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - AFO_ALARM: this output is used to manage the RTC Alarm A, Alarm B
 118:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              and WaKeUp signals.          
 119:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              To output the selected RTC signal on RTC_AF1 pin, use the 
 120:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              RTC_OutputConfig() function.                
 121:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - AFO_CALIB: this output is used to manage the RTC Clock divided 
 122:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              by 64 (512Hz) signal.
 123:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              To output the RTC Clock on RTC_AF1 pin, use the RTC_CalibOutputCmd()
 124:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function.
 125:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 126:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          Coarse Calibration configuration
 127:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          =================================
 128:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Configure the RTC Coarse Calibration Value and the corresponding
 129:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              sign using the RTC_CoarseCalibConfig() function.
 130:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Enable the RTC Coarse Calibration using the RTC_CoarseCalibCmd() 
 131:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function  
 132:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 133:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          TimeStamp configuration
 134:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          =======================
 135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Configure the RTC_AF1 trigger and enables the RTC TimeStamp 
 136:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              using the RTC_TimeStampCmd() function.
 137:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - To read the RTC TimeStamp Time and Date register, use the 
 138:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              RTC_GetTimeStamp() function.
 139:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - The TAMPER1 alternate function can be mapped either to RTC_AF1(PC13)
 140:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              or RTC_AF2 (PI8) depending on the value of TAMP1INSEL bit in 
 141:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              RTC_TAFCR register. You can use the  RTC_TamperPinSelection()
 142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function to select the corresponding pin.     
 143:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 144:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          Tamper configuration
 145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ====================
 146:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Configure the RTC Tamper trigger using the RTC_TamperConfig() 
 147:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function.
 148:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - Enable the RTC Tamper using the RTC_TamperCmd() function.
 149:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - The TIMESTAMP alternate function can be mapped to either RTC_AF1 
 150:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              or RTC_AF2 depending on the value of the TSINSEL bit in the 
 151:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              RTC_TAFCR register. You can use the  RTC_TimeStampPinSelection()
 152:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function to select the corresponding pin.   
 153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 154:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          Backup Data Registers configuration
 155:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================
 156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - To write to the RTC Backup Data registers, use the RTC_WriteBackupRegister()
 157:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function.  
 158:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - To read the RTC Backup Data registers, use the RTC_ReadBackupRegister()
 159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *              function.
 160:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * 
 161:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
 162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                  RTC and low power modes
 163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
 164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           The MCU can be woken up from a low power mode by an RTC alternate 
 165:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           function.
 166:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           The RTC alternate functions are the RTC alarms (Alarm A and Alarm B), 
 167:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
 168:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           These RTC alternate functions can wake up the system from the Stop 
 169:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           and Standby lowpower modes.
 170:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           The system can also wake up from low power modes without depending 
 171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           on an external interrupt (Auto-wakeup mode), by using the RTC alarm 
 172:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           or the RTC wakeup events.
 173:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           The RTC provides a programmable time base for waking up from the 
 174:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           Stop or Standby mode at regular intervals.
 175:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           Wakeup from STOP and Standby modes is possible only when the RTC 
 176:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           clock source is LSE or LSI.
 177:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 178:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
 179:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                            Selection of RTC_AF1 alternate functions
 180:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
 181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          The RTC_AF1 pin (PC13) can be used for the following purposes:
 182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - AFO_ALARM output
 183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - AFO_CALIB output
 184:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - AFI_TAMPER
 185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - AFI_TIMESTAMP
 186:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * +----------------------------------------------------------------------------------------------
 188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |     Pin         |AFO_ALARM |AFO_CALIB |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    
 189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  configuration  | ENABLED  | ENABLED  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin 
 190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  and function   |          |          |           |              | selection  |  selection   
 191:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 192:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |   Alarm out     |          |          |           |              |    Don't   |     Don't    
 193:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |   output OD     |     1    |Don't care|Don't care | Don't care   |    care    |     care     
 194:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 195:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |   Alarm out     |          |          |           |              |    Don't   |     Don't    
 196:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |   output PP     |     1    |Don't care|Don't care | Don't care   |    care    |     care     
 197:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 198:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * | Calibration out |          |          |           |              |    Don't   |     Don't    
 199:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |   output PP     |     0    |    1     |Don't care | Don't care   |    care    |     care     
 200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 201:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  TAMPER input   |          |          |           |              |            |     Don't    
 202:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |   floating      |     0    |    0     |     1     |      0       |      0     |     care     
 203:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 204:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  TIMESTAMP and  |          |          |           |              |            |              
 205:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  TAMPER input   |     0    |    0     |     1     |      1       |      0     |      0       
 206:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |   floating      |          |          |           |              |            |              
 207:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 208:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * | TIMESTAMP input |          |          |           |              |    Don't   |              
 209:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |    floating     |     0    |    0     |     0     |      1       |    care    |      0       
 210:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|----------|----------|-----------|--------------|------------|--------------
 211:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  Standard GPIO  |     0    |    0     |     0     |      0       | Don't care |  Don't care  
 212:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * +----------------------------------------------------------------------------------------------
 213:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 214:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 215:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
 216:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                            Selection of RTC_AF2 alternate functions
 217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          ===================================================================
 218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          The RTC_AF2 pin (PI8) can be used for the following purposes:
 219:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - AFI_TAMPER
 220:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            - AFI_TIMESTAMP
 221:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 222:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * +---------------------------------------------------------------------------------------+
 223:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |     Pin         |AFI_TAMPER |AFI_TIMESTAMP | TAMP1INSEL |   TSINSEL    |ALARMOUTTYPE  |
 224:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  configuration  |  ENABLED  |   ENABLED    |TAMPER1 pin |TIMESTAMP pin |  AFO_ALARM   |
 225:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  and function   |           |              | selection  |  selection   |Configuration |
 226:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 227:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  TAMPER input   |           |              |            |     Don't    |              |
 228:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |   floating      |     1     |      0       |      1     |     care     |  Don't care  |
 229:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 230:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  TIMESTAMP and  |           |              |            |              |              |
 231:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  TAMPER input   |     1     |      1       |      1     |      1       |  Don't care  |
 232:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |   floating      |           |              |            |              |              |
 233:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 234:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * | TIMESTAMP input |           |              |    Don't   |              |              |
 235:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |    floating     |     0     |      1       |    care    |      1       |  Don't care  |
 236:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |-----------------|-----------|--------------|------------|--------------|--------------|
 237:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * |  Standard GPIO  |     0     |      0       | Don't care |  Don't care  |  Don't care  |
 238:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * +---------------------------------------------------------------------------------------+
 239:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * 
 240:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 241:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *  @endverbatim
 242:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 243:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ******************************************************************************
 244:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @attention
 245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 246:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
 247:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 248:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 249:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * You may not use this file except in compliance with the License.
 250:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * You may obtain a copy of the License at:
 251:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 252:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 253:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 254:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * Unless required by applicable law or agreed to in writing, software 
 255:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 256:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 257:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * See the License for the specific language governing permissions and
 258:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * limitations under the License.
 259:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *
 260:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ******************************************************************************
 261:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */ 
 262:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 263:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /* Includes ------------------------------------------------------------------*/
 264:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** #include "stm32f2xx_rtc.h"
 265:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** #include "stm32f2xx_rcc.h"
 266:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 267:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
 268:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
 269:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 270:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 271:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC 
 272:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief RTC driver modules
 273:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
 274:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 275:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 276:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 277:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /* Private define ------------------------------------------------------------*/
 278:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 279:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /* Masks Definition */
 280:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** #define RTC_TR_RESERVED_MASK    ((uint32_t)0x007F7F7F)
 281:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** #define RTC_DR_RESERVED_MASK    ((uint32_t)0x00FFFF3F) 
 282:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** #define RTC_INIT_MASK           ((uint32_t)0xFFFFFFFF)  
 283:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** #define RTC_RSF_MASK            ((uint32_t)0xFFFFFF5F)
 284:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** #define RTC_FLAGS_MASK          ((uint32_t)(RTC_FLAG_TSOVF | RTC_FLAG_TSF | RTC_FLAG_WUTF | \
 285:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                             RTC_FLAG_ALRBF | RTC_FLAG_ALRAF | RTC_FLAG_INITF | \
 286:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                             RTC_FLAG_RSF | RTC_FLAG_INITS | RTC_FLAG_WUTWF | \
 287:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                             RTC_FLAG_ALRBWF | RTC_FLAG_ALRAWF | RTC_FLAG_TAMP1F ))
 288:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 289:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** #define INITMODE_TIMEOUT         ((uint32_t) 0x00010000)
 290:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** #define SYNCHRO_TIMEOUT          ((uint32_t) 0x00008000)
 291:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 292:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /* Private macro -------------------------------------------------------------*/
 293:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /* Private variables ---------------------------------------------------------*/
 294:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 295:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value);
 296:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value);
 297:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 298:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /* Private functions ---------------------------------------------------------*/
 299:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 300:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Private_Functions
 301:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
 302:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */ 
 303:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 304:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group1 Initialization and Configuration functions
 305:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   Initialization and Configuration functions 
 306:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
 307:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
 308:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
 309:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                  Initialization and Configuration functions
 310:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
 311:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 312:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   This section provide functions allowing to initialize and configure the RTC
 313:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   Prescaler (Synchronous and Asynchronous), RTC Hour format, disable RTC registers
 314:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   Write protection, enter and exit the RTC initialization mode, RTC registers
 315:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   synchronization check and reference clock detection enable.
 316:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 317:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   1. The RTC Prescaler is programmed to generate the RTC 1Hz time base. It is
 318:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      split into 2 programmable prescalers to minimize power consumption.
 319:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      - A 7-bit asynchronous prescaler and A 13-bit synchronous prescaler.
 320:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      - When both prescalers are used, it is recommended to configure the asynchronous
 321:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****        prescaler to a high value to minimize consumption.
 322:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 323:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   2. All RTC registers are Write protected. Writing to the RTC registers
 324:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      is enabled by writing a key into the Write Protection register, RTC_WPR.
 325:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 326:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   3. To Configure the RTC Calendar, user application should enter initialization
 327:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      mode. In this mode, the calendar counter is stopped and its value can be 
 328:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      updated. When the initialization sequence is complete, the calendar restarts 
 329:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      counting after 4 RTCCLK cycles.
 330:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 331:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   4. To read the calendar through the shadow registers after Calendar initialization,
 332:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      calendar update or after wakeup from low power modes the software must first 
 333:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      clear the RSF flag. The software must then wait until it is set again before 
 334:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      reading the calendar, which means that the calendar registers have been 
 335:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      correctly copied into the RTC_TR and RTC_DR shadow registers.
 336:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      The RTC_WaitForSynchro() function implements the above software sequence 
 337:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      (RSF clear and RSF check).
 338:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 339:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
 340:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
 341:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 342:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 343:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 344:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Deinitializes the RTC registers to their default reset values.
 345:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   This function doesn't reset the RTC Clock source and RTC Backup Data
 346:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         registers.       
 347:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  None
 348:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 349:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC registers are deinitialized
 350:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC registers are not deinitialized
 351:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 352:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_DeInit(void)
 353:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 354:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 355:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
 356:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
 357:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 358:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
 359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 360:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 361:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 362:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Set Initialization mode */
 363:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 364:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 365:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 366:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }  
 367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 368:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 369:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Reset TR, DR and CR registers */
 370:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TR = (uint32_t)0x00000000;
 371:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
 372:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 373:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)0x00000007;
 374:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 375:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 376:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     do
 377:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 378:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
 379:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutcounter++;  
 380:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 381:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 382:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
 383:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 384:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = ERROR;
 385:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 386:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
 387:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 388:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       /* Reset all RTC CR register bits */
 389:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR &= (uint32_t)0x00000000;
 390:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 391:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 392:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 393:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->ALRMAR = (uint32_t)0x00000000;        
 394:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->ALRMBR = (uint32_t)0x00000000;
 395:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       
 396:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       /* Reset ISR register and exit initialization mode */
 397:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->ISR = (uint32_t)0x00000000;
 398:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       
 399:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       /* Reset Tamper and alternate functions configuration register */
 400:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->TAFCR = 0x00000000;
 401:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 402:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
 403:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       {
 404:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****         status = ERROR;
 405:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       }
 406:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       else
 407:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       {
 408:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****         status = SUCCESS;      
 409:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       }
 410:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 411:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 412:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 413:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
 414:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF;  
 415:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 416:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return status;
 417:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 418:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 419:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 420:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Initializes the RTC registers according to the specified parameters 
 421:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         in RTC_InitStruct.
 422:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure that contains 
 423:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         the configuration information for the RTC peripheral.
 424:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   The RTC Prescaler register is write protected and can be written in 
 425:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         initialization mode only.  
 426:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 427:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC registers are initialized
 428:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC registers are not initialized  
 429:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 430:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_Init(RTC_InitTypeDef* RTC_InitStruct)
 431:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 432:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
 433:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 434:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
 435:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(RTC_InitStruct->RTC_HourFormat));
 436:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(RTC_InitStruct->RTC_AsynchPrediv));
 437:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(RTC_InitStruct->RTC_SynchPrediv));
 438:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 439:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
 440:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 441:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 442:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 443:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Set Initialization mode */
 444:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 445:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 446:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 447:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
 448:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 449:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 450:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Clear RTC CR FMT Bit */
 451:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= ((uint32_t)~(RTC_CR_FMT));
 452:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Set RTC_CR register */
 453:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |=  ((uint32_t)(RTC_InitStruct->RTC_HourFormat));
 454:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 455:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Configure the RTC PRER */
 456:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->PRER = (uint32_t)(RTC_InitStruct->RTC_SynchPrediv);
 457:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 458:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 459:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Exit Initialization mode */
 460:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode();
 461:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 462:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;    
 463:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 464:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
 465:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 466:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 467:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return status;
 468:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 469:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 470:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 471:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Fills each RTC_InitStruct member with its default value.
 472:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_InitStruct: pointer to a RTC_InitTypeDef structure which will be 
 473:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         initialized.
 474:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
 475:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 476:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_StructInit(RTC_InitTypeDef* RTC_InitStruct)
 477:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 478:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Initialize the RTC_HourFormat member */
 479:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_InitStruct->RTC_HourFormat = RTC_HourFormat_24;
 480:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 481:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Initialize the RTC_AsynchPrediv member */
 482:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_InitStruct->RTC_AsynchPrediv = (uint32_t)0x7F;
 483:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 484:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Initialize the RTC_SynchPrediv member */
 485:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_InitStruct->RTC_SynchPrediv = (uint32_t)0xFF; 
 486:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 487:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 488:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 489:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enables or disables the RTC registers write protection.
 490:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   All the RTC registers are write protected except for RTC_ISR[13:8], 
 491:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         RTC_TAFCR and RTC_BKPxR.
 492:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   Writing a wrong key reactivates the write protection.
 493:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   The protection mechanism is not affected by system reset.  
 494:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  NewState: new state of the write protection.
 495:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 496:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
 497:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 498:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_WriteProtectionCmd(FunctionalState NewState)
 499:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 500:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
 501:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 503:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
 504:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 505:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Enable the write protection for RTC registers */
 506:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->WPR = 0xFF;   
 507:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 508:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 509:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 510:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Disable the write protection for RTC registers */
 511:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->WPR = 0xCA;
 512:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->WPR = 0x53;    
 513:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 514:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 515:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 516:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 517:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enters the RTC Initialization mode.
 518:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 519:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.    
 520:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  None
 521:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 522:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC is in Init mode
 523:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC is not in Init mode  
 524:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 525:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_EnterInitMode(void)
 526:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 527:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t initcounter = 0x00;
 528:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
 529:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t initstatus = 0x00;
 530:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      
 531:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check if the Initialization mode is set */
 532:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 533:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 534:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Set the Initialization mode */
 535:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->ISR = (uint32_t)RTC_INIT_MASK;
 536:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 537:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 538:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     do
 539:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 540:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       initstatus = RTC->ISR & RTC_ISR_INITF;
 541:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       initcounter++;  
 542:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } while((initcounter != INITMODE_TIMEOUT) && (initstatus == 0x00));
 543:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 544:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_INITF) != RESET)
 545:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 546:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = SUCCESS;
 547:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 548:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
 549:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 550:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = ERROR;
 551:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }        
 552:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 553:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 554:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 555:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;  
 556:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
 557:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 558:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return (status);  
 559:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 560:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 561:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 562:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Exits the RTC Initialization mode.
 563:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   When the initialization sequence is complete, the calendar restarts 
 564:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         counting after 4 RTCCLK cycles.  
 565:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the 
 566:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function.      
 567:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  None
 568:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
 569:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 570:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_ExitInitMode(void)
 571:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** { 
 572:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Exit Initialization mode */
 573:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->ISR &= (uint32_t)~RTC_ISR_INIT;  
 574:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 575:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 576:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 577:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Waits until the RTC Time and Date registers (RTC_TR and RTC_DR) are 
 578:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         synchronized with RTC APB clock.
 579:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
 580:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         RTC_WriteProtectionCmd(DISABLE) before calling this function. 
 581:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
 582:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes 
 583:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         the software must first clear the RSF flag. 
 584:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         The software must then wait until it is set again before reading 
 585:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         the calendar, which means that the calendar registers have been 
 586:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.   
 587:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  None
 588:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 589:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC registers are synchronised
 590:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC registers are not synchronised
 591:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 592:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_WaitForSynchro(void)
 593:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 594:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 595:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
 596:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t synchrostatus = 0x00;
 597:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 598:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
 599:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 600:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 601:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 602:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Clear RSF flag */
 603:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->ISR &= (uint32_t)RTC_RSF_MASK;
 604:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 605:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Wait the registers to be synchronised */
 606:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   do
 607:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 608:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     synchrostatus = RTC->ISR & RTC_ISR_RSF;
 609:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     synchrocounter++;  
 610:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } while((synchrocounter != SYNCHRO_TIMEOUT) && (synchrostatus == 0x00));
 611:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 612:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RSF) != RESET)
 613:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 614:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;
 615:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 616:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 617:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 618:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 619:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }        
 620:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 621:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
 622:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 623:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 624:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return (status); 
 625:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 626:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 627:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 628:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enables or disables the RTC reference clock detection.
 629:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  NewState: new state of the RTC reference clock.
 630:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
 631:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 632:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC reference clock detection is enabled
 633:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC reference clock detection is disabled  
 634:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 635:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_RefClockCmd(FunctionalState NewState)
 636:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** { 
 637:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
 638:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 639:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
 640:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 641:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 642:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
 643:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 644:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 645:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 646:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Set Initialization mode */
 647:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 648:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 649:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 650:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
 651:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 652:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {  
 653:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if (NewState != DISABLE)
 654:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 655:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       /* Enable the RTC reference clock detection */
 656:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR |= RTC_CR_REFCKON;   
 657:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 658:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
 659:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 660:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       /* Disable the RTC reference clock detection */
 661:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR &= ~RTC_CR_REFCKON;    
 662:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 663:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Exit Initialization mode */
 664:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode();
 665:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 666:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;
 667:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 668:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 669:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
 670:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF;  
 671:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 672:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return status; 
 673:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 674:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 675:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 676:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
 677:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 678:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 679:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group2 Time and Date configuration functions
 680:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   Time and Date configuration functions 
 681:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
 682:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
 683:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
 684:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                    Time and Date configuration functions
 685:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
 686:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 687:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   This section provide functions allowing to program and read the RTC Calendar
 688:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   (Time and Date).
 689:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 690:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
 691:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
 692:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 693:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 694:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 695:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Set the RTC current time.
 696:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 697:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be  one of the following values:
 698:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 699:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 700:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that contains 
 701:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                        the time configuration information for the RTC.     
 702:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 703:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC Time register is configured
 704:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC Time register is not configured
 705:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 706:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_SetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 707:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 708:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0;
 709:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
 710:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 711:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
 712:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 713:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 714:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 715:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 716:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 717:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 718:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_TimeStruct->RTC_Hours));
 719:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12));
 720:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } 
 721:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
 722:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 723:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 724:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_TimeStruct->RTC_Hours));
 725:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 726:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_TimeStruct->RTC_Minutes));
 727:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_TimeStruct->RTC_Seconds));
 728:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 729:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 730:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 731:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 732:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 733:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 734:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 735:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_TimeStruct->RTC_H12)); 
 736:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } 
 737:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
 738:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 739:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 740:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours)));
 741:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 742:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes)));
 743:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds)));
 744:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 745:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 746:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the input parameters format */
 747:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 748:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 750:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 751:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 752:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_H12) << 16)); 
 753:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }  
 754:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 755:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 757:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 758:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 759:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                    (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
 760:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }  
 761:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 762:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
 763:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 764:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 765:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 766:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Set Initialization mode */
 767:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 768:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 769:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 770:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
 771:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 772:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 773:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Set the RTC_TR register */
 774:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 775:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 776:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Exit Initialization mode */
 777:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode(); 
 778:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 779:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 780:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 781:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = ERROR;
 782:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 783:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
 784:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 785:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = SUCCESS;
 786:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 787:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 788:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 789:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
 790:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 791:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
 792:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return status;
 793:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 794:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 795:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 796:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Fills each RTC_TimeStruct member with its default value
 797:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         (Time = 00h:00min:00sec).
 798:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure which will be 
 799:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         initialized.
 800:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
 801:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 802:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_TimeStructInit(RTC_TimeTypeDef* RTC_TimeStruct)
 803:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 804:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Time = 00h:00min:00sec */
 805:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = RTC_H12_AM;
 806:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = 0;
 807:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = 0;
 808:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = 0; 
 809:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 810:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 811:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 812:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Get the RTC current Time.
 813:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
 814:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be  one of the following values:
 815:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 816:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 817:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_TimeStruct: pointer to a RTC_TimeTypeDef structure that will 
 818:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                        contain the returned current time configuration.     
 819:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
 820:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 821:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_GetTime(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_TimeStruct)
 822:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 823:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0;
 824:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 825:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
 826:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 827:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 828:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the RTC_TR register */
 829:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TR & RTC_TR_RESERVED_MASK); 
 830:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 831:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Fill the structure fields with the read parameters */
 832:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 833:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 834:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 835:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 836:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 837:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the input parameters format */
 838:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 839:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 840:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Convert the structure parameters to Binary format */
 841:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_TimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 842:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 843:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 844:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 845:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 846:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 847:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 848:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Set the RTC current date.
 849:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Format: specifies the format of the entered parameters.
 850:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be  one of the following values:
 851:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BIN:  Binary data format 
 852:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BCD:  BCD data format
 853:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure that contains 
 854:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                         the date configuration information for the RTC.
 855:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
 856:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC Date register is configured
 857:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC Date register is not configured
 858:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 859:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_SetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
 860:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 861:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0;
 862:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
 863:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 864:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
 865:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 866:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 867:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((RTC_Format == RTC_Format_BIN) && ((RTC_DateStruct->RTC_Month & 0x10) == 0x10))
 868:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 869:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_DateStruct->RTC_Month = (RTC_DateStruct->RTC_Month & (uint32_t)~(0x10)) + 0x0A;
 870:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }  
 871:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 872:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 873:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_DateStruct->RTC_Year));
 874:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_DateStruct->RTC_Month));
 875:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_DATE(RTC_DateStruct->RTC_Date));
 876:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 877:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 878:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 879:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year)));
 880:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 881:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_MONTH(tmpreg));
 882:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date);
 883:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_DATE(tmpreg));
 884:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 885:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_WEEKDAY(RTC_DateStruct->RTC_WeekDay));
 886:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 887:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the input parameters format */
 888:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
 889:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 890:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 891:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 892:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 893:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_WeekDay) << 13)); 
 894:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }  
 895:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 896:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 897:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 898:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 899:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 900:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
 901:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 902:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 903:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
 904:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 905:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 906:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 907:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Set Initialization mode */
 908:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 909:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 910:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 911:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
 912:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
 913:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 914:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Set the RTC_DR register */
 915:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->DR = (uint32_t)(tmpreg & RTC_DR_RESERVED_MASK);
 916:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 917:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Exit Initialization mode */
 918:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode(); 
 919:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 920:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 921:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 922:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = ERROR;
 923:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 924:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
 925:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
 926:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = SUCCESS;
 927:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
 928:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 929:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
 930:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF;   
 931:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 932:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return status;
 933:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 934:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 935:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 936:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Fills each RTC_DateStruct member with its default value
 937:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         (Monday, January 01 xx00).
 938:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_DateStruct: pointer to a RTC_DateTypeDef structure which will be 
 939:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         initialized.
 940:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
 941:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 942:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_DateStructInit(RTC_DateTypeDef* RTC_DateStruct)
 943:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 944:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Monday, January 01 xx00 */
 945:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = RTC_Weekday_Monday;
 946:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
 947:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Month = RTC_Month_January;
 948:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
 949:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 950:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 951:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 952:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Get the RTC current date. 
 953:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
 954:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
 955:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
 956:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
 957:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param RTC_DateStruct: pointer to a RTC_DateTypeDef structure that will 
 958:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                        contain the returned current date configuration.     
 959:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
 960:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 961:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_GetDate(uint32_t RTC_Format, RTC_DateTypeDef* RTC_DateStruct)
 962:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 963:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0;
 964:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 965:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
 966:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
 967:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
 968:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the RTC_TR register */
 969:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->DR & RTC_DR_RESERVED_MASK); 
 970:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 971:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Fill the structure fields with the read parameters */
 972:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Year = (uint8_t)((tmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16);
 973:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 974:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 975:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);  
 976:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 977:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the input parameters format */
 978:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 979:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
 980:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Convert the structure parameters to Binary format */
 981:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_DateStruct->RTC_Year = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year);
 982:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 983:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date); 
 984:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
 985:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 986:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 987:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
 988:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
 989:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
 990:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 991:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group3 Alarms configuration functions
 992:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   Alarms (Alarm A and Alarm B) configuration functions 
 993:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
 994:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
 995:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
 996:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               Alarms (Alarm A and Alarm B) configuration functions
 997:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
 998:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
 999:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   This section provide functions allowing to program and read the RTC Alarms.
1000:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1001:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
1002:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
1003:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1004:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1005:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1006:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Set the specified RTC Alarm.
1007:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
1008:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         is disabled (Use the RTC_AlarmCmd(DISABLE)).    
1009:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Format: specifies the format of the returned parameters.
1010:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1011:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1012:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1013:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1014:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1015:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1016:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1017:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that 
1018:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                          contains the alarm configuration parameters.     
1019:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1020:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1021:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_SetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1022:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1023:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0;
1024:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1025:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1026:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1027:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm));
1028:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_ALARM_MASK(RTC_AlarmStruct->RTC_AlarmMask));
1029:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel));
1030:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1031:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
1032:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1033:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
1034:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1035:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
1036:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
1037:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } 
1038:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
1039:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1040:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
1041:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours));
1042:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
1043:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes));
1044:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds));
1045:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
1046:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
1047:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1048:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
1049:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
1050:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
1051:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1052:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_AlarmStruct->RTC_AlarmDateWeekDay));
1053:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
1054:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1055:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1056:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1057:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
1058:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1059:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours);
1060:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
1061:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_H12(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12));
1062:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } 
1063:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
1064:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1065:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
1066:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours)));
1067:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
1068:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
1069:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes)));
1070:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)));
1071:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
1072:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if(RTC_AlarmStruct->RTC_AlarmDateWeekDaySel == RTC_AlarmDateWeekDaySel_Date)
1073:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1074:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
1075:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
1076:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
1077:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
1078:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1079:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       tmpreg = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
1080:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
1081:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }    
1082:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1083:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1084:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the input parameters format */
1085:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format != RTC_Format_BIN)
1086:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1087:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
1088:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
1089:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
1090:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
1091:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
1092:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
1093:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
1094:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }  
1095:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1096:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1097:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
1098:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
1099:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
1100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
1101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
1102:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmDateWeekDaySel) | \
1103:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmMask)); 
1104:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
1105:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1106:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1109:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1110:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Configure the Alarm register */
1111:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1112:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1113:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->ALRMAR = (uint32_t)tmpreg;
1114:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1115:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1116:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1117:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->ALRMBR = (uint32_t)tmpreg;
1118:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1119:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1120:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1121:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF;   
1122:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1123:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1124:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1125:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Fills each RTC_AlarmStruct member with its default value
1126:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         (Time = 00h:00mn:00sec / Date = 1st day of the month/Mask =
1127:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         all fields are masked).
1128:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a @ref RTC_AlarmTypeDef structure which
1129:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         will be initialized.
1130:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1131:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1132:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_AlarmStructInit(RTC_AlarmTypeDef* RTC_AlarmStruct)
1133:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1134:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
1135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = RTC_H12_AM;
1136:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
1137:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
1138:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
1139:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1140:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Alarm Date Settings : Date = 1st day of the month */
1141:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = RTC_AlarmDateWeekDaySel_Date;
1142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
1143:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1144:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
1145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = RTC_AlarmMask_None;
1146:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1147:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1148:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1149:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1150:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
1151:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1152:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1154:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be read.
1155:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1157:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1158:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_AlarmStruct: pointer to a RTC_AlarmTypeDef structure that will 
1159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                          contains the output alarm configuration values.     
1160:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1161:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_GetAlarm(uint32_t RTC_Format, uint32_t RTC_Alarm, RTC_AlarmTypeDef* RTC_AlarmStruct)
1163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0;
1165:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1166:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1167:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1168:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_ALARM(RTC_Alarm)); 
1169:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1170:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the RTC_ALRMxR register */
1171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
1172:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1173:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMAR);
1174:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1175:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1176:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1177:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMBR);
1178:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1179:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1180:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Fill the structure with the read parameters */
1181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | \
1182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                                      RTC_ALRMAR_HU)) >> 16);
1183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | \
1184:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                                      RTC_ALRMAR_MNU)) >> 8);
1185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | \
1186:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                                      RTC_ALRMAR_SU));
1187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
1188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
1189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
1190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
1191:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1192:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
1193:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1194:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
1195:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Hours);
1196:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
1197:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Minutes);
1198:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
1199:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                                         RTC_AlarmTime.RTC_Seconds);
1200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmDateWeekDay = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
1201:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }  
1202:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1203:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1204:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1205:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enables or disables the specified RTC Alarm.
1206:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Alarm: specifies the alarm to be configured.
1207:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be any combination of the following values:
1208:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Alarm_A: to select Alarm A
1209:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Alarm_B: to select Alarm B  
1210:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  NewState: new state of the specified alarm.
1211:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1212:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1213:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC Alarm is enabled/disabled
1214:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC Alarm is not enabled/disabled  
1215:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1216:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_AlarmCmd(uint32_t RTC_Alarm, FunctionalState NewState)
1217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
1219:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t alarmstatus = 0x00;
1220:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
1221:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
1222:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1223:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_CMD_ALARM(RTC_Alarm));
1224:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1225:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1226:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1227:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1228:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1229:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1230:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Configure the Alarm state */
1231:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
1232:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1233:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_Alarm;
1234:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1235:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;    
1236:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1237:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1238:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   { 
1239:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Disable the Alarm in RTC_CR register */
1240:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_Alarm;
1241:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    
1242:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1243:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     do
1244:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       alarmstatus = RTC->ISR & (RTC_Alarm >> 8);
1246:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       alarmcounter++;  
1247:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
1248:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
1249:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->ISR & (RTC_Alarm >> 8)) == RESET)
1250:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1251:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = ERROR;
1252:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } 
1253:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
1254:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1255:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = SUCCESS;
1256:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }        
1257:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
1258:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1259:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1260:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1261:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1262:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return status;
1263:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1264:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1265:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1266:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
1267:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1268:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1269:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group4 WakeUp Timer configuration functions
1270:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   WakeUp Timer configuration functions 
1271:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
1272:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
1273:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
1274:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                      WakeUp Timer configuration functions
1275:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
1276:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1277:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   This section provide functions allowing to program and read the RTC WakeUp.
1278:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1279:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
1280:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
1281:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1282:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1283:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1284:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Configures the RTC Wakeup clock source.
1285:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   The WakeUp Clock source can only be changed when the RTC WakeUp
1286:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).      
1287:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_WakeUpClock: Wakeup Clock source.
1288:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1289:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div16: RTC Wakeup Counter Clock = RTCCLK/16
1290:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div8: RTC Wakeup Counter Clock = RTCCLK/8
1291:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div4: RTC Wakeup Counter Clock = RTCCLK/4
1292:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_WakeUpClock_RTCCLK_Div2: RTC Wakeup Counter Clock = RTCCLK/2
1293:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_16bits: RTC Wakeup Counter Clock = CK_SPRE
1294:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_WakeUpClock_CK_SPRE_17bits: RTC Wakeup Counter Clock = CK_SPRE
1295:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1296:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1297:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_WakeUpClockConfig(uint32_t RTC_WakeUpClock)
1298:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1299:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1300:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(RTC_WakeUpClock));
1301:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1302:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1303:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1304:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1305:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1306:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
1307:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR &= (uint32_t)~RTC_CR_WUCKSEL;
1308:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1309:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Configure the clock source */
1310:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_WakeUpClock;
1311:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1312:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1313:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1314:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1315:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1316:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1317:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Configures the RTC Wakeup counter.
1318:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   The RTC WakeUp counter can only be written when the RTC WakeUp
1319:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         is disabled (Use the RTC_WakeUpCmd(DISABLE)).        
1320:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_WakeUpCounter: specifies the WakeUp counter.
1321:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be a value from 0x0000 to 0xFFFF. 
1322:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1323:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1324:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_SetWakeUpCounter(uint32_t RTC_WakeUpCounter)
1325:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1326:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1327:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(RTC_WakeUpCounter));
1328:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1329:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1330:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1331:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1332:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1333:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Configure the Wakeup Timer counter */
1334:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WUTR = (uint32_t)RTC_WakeUpCounter;
1335:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1336:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1337:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1338:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1339:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1340:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1341:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Returns the RTC WakeUp timer counter value.
1342:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  None
1343:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval The RTC WakeUp Counter value.
1344:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1345:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** uint32_t RTC_GetWakeUpCounter(void)
1346:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1347:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the counter value */
1348:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return ((uint32_t)(RTC->WUTR & RTC_WUTR_WUT));
1349:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1350:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1351:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1352:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enables or Disables the RTC WakeUp timer.
1353:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  NewState: new state of the WakeUp timer.
1354:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1355:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1356:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1357:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_WakeUpCmd(FunctionalState NewState)
1358:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
1360:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t wutwfstatus = 0x00;
1361:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
1362:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1363:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1364:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1365:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1366:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1368:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1369:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1370:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
1371:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1372:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Enable the Wakeup Timer */
1373:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_WUTE;
1374:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;    
1375:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1376:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1377:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1378:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Disable the Wakeup Timer */
1379:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_WUTE;
1380:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
1381:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     do
1382:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1383:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
1384:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutcounter++;  
1385:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
1386:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
1387:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
1388:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1389:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = ERROR;
1390:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
1391:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
1392:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1393:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = SUCCESS;
1394:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }    
1395:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1396:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1397:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1398:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1399:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1400:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return status;
1401:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1402:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1403:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1404:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
1405:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1406:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1407:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group5 Daylight Saving configuration functions
1408:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   Daylight Saving configuration functions 
1409:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
1410:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
1411:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
1412:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                     Daylight Saving configuration functions
1413:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
1414:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1415:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   This section provide functions allowing to configure the RTC DayLight Saving.
1416:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1417:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
1418:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
1419:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1420:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1421:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1422:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Adds or substract one hour from the current time.
1423:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_DayLightSaveOperation: the value of hour adjustment. 
1424:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1425:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_DayLightSaving_SUB1H: Substract one hour (winter time)
1426:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_DayLightSaving_ADD1H: Add one hour (summer time)
1427:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_StoreOperation: Specifies the value to be written in the BCK bit 
1428:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                            in CR register to store the operation.
1429:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1430:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_StoreOperation_Reset: BCK Bit Reset
1431:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_StoreOperation_Set: BCK Bit Set
1432:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1433:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1434:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_DayLightSavingConfig(uint32_t RTC_DayLightSaving, uint32_t RTC_StoreOperation)
1435:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1436:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1437:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(RTC_DayLightSaving));
1438:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(RTC_StoreOperation));
1439:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1440:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1441:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1442:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1443:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1444:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Clear the bits to be configured */
1445:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_BCK);
1446:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1447:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Configure the RTC_CR register */
1448:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_DayLightSaving | RTC_StoreOperation);
1449:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1450:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1451:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1452:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1453:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1454:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1455:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Returns the RTC Day Light Saving stored operation.
1456:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  None
1457:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval RTC Day Light Saving stored operation.
1458:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - RTC_StoreOperation_Reset
1459:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - RTC_StoreOperation_Set       
1460:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1461:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** uint32_t RTC_GetStoreOperation(void)
1462:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1463:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return (RTC->CR & RTC_CR_BCK);
1464:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1465:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1466:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1467:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
1468:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1469:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1470:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group6 Output pin Configuration function
1471:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   Output pin Configuration function 
1472:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
1473:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
1474:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
1475:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                          Output pin Configuration function
1476:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
1477:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1478:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   This section provide functions allowing to configure the RTC Output source.
1479:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1480:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
1481:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
1482:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1483:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1484:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1485:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Configures the RTC output source (AFO_ALARM).
1486:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Output: Specifies which signal will be routed to the RTC output. 
1487:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1488:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Output_Disable: No output selected
1489:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Output_AlarmA: signal of AlarmA mapped to output
1490:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Output_AlarmB: signal of AlarmB mapped to output
1491:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Output_WakeUp: signal of WakeUp mapped to output
1492:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_OutputPolarity: Specifies the polarity of the output signal. 
1493:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following:
1494:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_OutputPolarity_High: The output pin is high when the 
1495:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1496:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_OutputPolarity_Low: The output pin is low when the 
1497:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                 ALRAF/ALRBF/WUTF is high (depending on OSEL)
1498:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1499:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1500:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_OutputConfig(uint32_t RTC_Output, uint32_t RTC_OutputPolarity)
1501:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1502:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1503:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_OUTPUT(RTC_Output));
1504:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(RTC_OutputPolarity));
1505:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1506:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1507:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1508:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1509:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1510:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Clear the bits to be configured */
1511:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_OSEL | RTC_CR_POL);
1512:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1513:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Configure the output selection and polarity */
1514:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_Output | RTC_OutputPolarity);
1515:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1516:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1517:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1518:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1519:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1520:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1521:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
1522:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1523:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1524:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group7 Coarse Calibration configuration functions
1525:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   Coarse Calibration configuration functions 
1526:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
1527:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
1528:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
1529:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                   Coarse Calibration configuration functions
1530:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
1531:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1532:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
1533:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
1534:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1535:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1536:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1537:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Configures the Coarse calibration parameters.
1538:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_CalibSign: specifies the sign of the coarse calibration value.
1539:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be  one of the following values:
1540:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_CalibSign_Positive: The value sign is positive 
1541:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_CalibSign_Negative: The value sign is negative
1542:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  Value: value of coarse calibration expressed in ppm (coded on 5 bits).
1543:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *    
1544:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   This Calibration value should be between 0 and 63 when using negative
1545:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         sign with a 2-ppm step.
1546:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           
1547:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @note   This Calibration value should be between 0 and 126 when using positive
1548:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         sign with a 4-ppm step.
1549:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *           
1550:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1551:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are initialized
1552:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not initialized     
1553:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1554:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_CoarseCalibConfig(uint32_t RTC_CalibSign, uint32_t Value)
1555:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1556:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
1557:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    
1558:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1559:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_CALIB_SIGN(RTC_CalibSign));
1560:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_CALIB_VALUE(Value)); 
1561:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1562:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1563:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1564:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1565:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1566:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Set Initialization mode */
1567:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
1568:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1569:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
1570:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
1571:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1572:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1573:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Set the coarse calibration value */
1574:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CALIBR = (uint32_t)(RTC_CalibSign | Value);
1575:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Exit Initialization mode */
1576:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode();
1577:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
1578:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;
1579:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
1580:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1581:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1582:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1583:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1584:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return status;
1585:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1586:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1587:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1588:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enables or disables the Coarse calibration process.
1589:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  NewState: new state of the Coarse calibration.
1590:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1591:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval An ErrorStatus enumeration value:
1592:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - SUCCESS: RTC Coarse calibration are enabled/disabled
1593:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          - ERROR: RTC Coarse calibration are not enabled/disabled    
1594:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1595:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ErrorStatus RTC_CoarseCalibCmd(FunctionalState NewState)
1596:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1597:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ErrorStatus status = ERROR;
1598:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1599:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1600:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1601:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1602:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1603:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1604:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1605:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1606:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Set Initialization mode */
1607:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
1608:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1609:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status =  ERROR;
1610:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1611:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1612:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1613:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if (NewState != DISABLE)
1614:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     {
1615:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       /* Enable the Coarse Calibration */
1616:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR |= (uint32_t)RTC_CR_DCE;
1617:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
1618:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     else
1619:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     { 
1620:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       /* Disable the Coarse Calibration */
1621:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR &= (uint32_t)~RTC_CR_DCE;
1622:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     }
1623:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Exit Initialization mode */
1624:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode();
1625:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     
1626:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;
1627:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } 
1628:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1629:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1630:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1631:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1632:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return status;
1633:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1634:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1635:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1636:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enables or disables the RTC clock to be output through the relative pin.
1637:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  NewState: new state of the digital calibration Output.
1638:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1639:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1640:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1641:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_CalibOutputCmd(FunctionalState NewState)
1642:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1643:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1644:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1645:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1646:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1647:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1648:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1649:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1650:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
1651:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1652:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Enable the RTC clock output */
1653:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_COE;
1654:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1655:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1656:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   { 
1657:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Disable the RTC clock output */
1658:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_COE;
1659:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1660:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1661:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1662:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1663:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1664:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1665:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1666:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
1667:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1668:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1669:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1670:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group8 TimeStamp configuration functions
1671:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   TimeStamp configuration functions 
1672:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
1673:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
1674:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
1675:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                        TimeStamp configuration functions
1676:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
1677:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1678:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
1679:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
1680:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1681:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1682:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1683:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enables or Disables the RTC TimeStamp functionality with the 
1684:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         specified time stamp pin stimulating edge.
1685:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_TimeStampEdge: Specifies the pin edge on which the TimeStamp is 
1686:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         activated.
1687:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following:
1688:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Rising: the Time stamp event occurs on the rising 
1689:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                    edge of the related pin.
1690:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_TimeStampEdge_Falling: the Time stamp event occurs on the 
1691:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                     falling edge of the related pin.
1692:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  NewState: new state of the TimeStamp.
1693:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
1694:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1695:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1696:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_TimeStampCmd(uint32_t RTC_TimeStampEdge, FunctionalState NewState)
1697:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1698:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0;
1699:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1700:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1701:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_EDGE(RTC_TimeStampEdge));
1702:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1703:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1704:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the RTC_CR register and clear the bits to be configured */
1705:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
1706:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1707:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the new configuration */
1708:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
1709:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1710:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge | RTC_CR_TSE);
1711:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1712:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1713:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1714:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge);
1715:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1716:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1717:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
1718:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
1719:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
1720:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1721:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
1722:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR = (uint32_t)tmpreg;
1723:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1724:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
1725:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
1726:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1727:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1728:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1729:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Get the RTC TimeStamp value and masks.
1730:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Format: specifies the format of the output parameters.
1731:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1732:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BIN: Binary data format 
1733:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_Format_BCD: BCD data format
1734:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param RTC_StampTimeStruct: pointer to a RTC_TimeTypeDef structure that will 
1735:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                             contains the TimeStamp time values. 
1736:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param RTC_StampDateStruct: pointer to a RTC_DateTypeDef structure that will 
1737:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                             contains the TimeStamp date values.     
1738:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1739:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1740:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_GetTimeStamp(uint32_t RTC_Format, RTC_TimeTypeDef* RTC_StampTimeStruct, 
1741:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                                       RTC_DateTypeDef* RTC_StampDateStruct)
1742:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1743:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmptime = 0, tmpdate = 0;
1744:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1745:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1746:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_FORMAT(RTC_Format));
1747:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1748:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the TimeStamp time and date registers values */
1749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmptime = (uint32_t)(RTC->TSTR & RTC_TR_RESERVED_MASK);
1750:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
1751:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1752:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Fill the Time structure fields with the read parameters */
1753:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16);
1754:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
1755:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
1756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
1757:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1758:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Fill the Date structure fields with the read parameters */
1759:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_Year = 0;
1760:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
1761:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
1762:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
1763:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1764:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the input parameters format */
1765:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
1766:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1767:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Convert the Time structure parameters to Binary format */
1768:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampTimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Hours);
1769:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
1770:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
1771:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1772:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Convert the Date structure parameters to Binary format */
1773:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampDateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Month);
1774:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
1775:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
1776:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1777:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1778:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1779:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1780:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
1781:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1782:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1783:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group9 Tampers configuration functions
1784:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   Tampers configuration functions 
1785:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
1786:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
1787:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
1788:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                        Tampers configuration functions
1789:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
1790:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1791:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
1792:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
1793:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1794:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1795:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1796:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Configures the select Tamper pin edge.
1797:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
1798:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be RTC_Tamper_1.
1799:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_TamperTrigger: Specifies the trigger on the tamper pin that 
1800:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *         stimulates tamper event. 
1801:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1802:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_TamperTrigger_RisingEdge: Rising Edge of the tamper pin causes tamper event
1803:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_TamperTrigger_FallingEdge: Falling Edge of the tamper pin causes tamper eve
1804:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1805:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1806:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_TamperTriggerConfig(uint32_t RTC_Tamper, uint32_t RTC_TamperTrigger)
1807:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1808:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1809:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper)); 
1810:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(RTC_TamperTrigger));
1811:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  
1812:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_TamperTrigger == RTC_TamperTrigger_RisingEdge)
1813:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {  
1814:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Configure the RTC_TAFCR register */
1815:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR &= (uint32_t)((uint32_t)~(RTC_Tamper << 1));	
1816:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1817:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1818:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   { 
1819:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Configure the RTC_TAFCR register */
1820:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_Tamper << 1);  
1821:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }  
1822:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1823:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1824:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1825:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enables or Disables the Tamper detection.
1826:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_Tamper: Selected tamper pin.
1827:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be RTC_Tamper_1.
1828:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  NewState: new state of the tamper pin.
1829:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.                   
1830:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1831:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1832:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_TamperCmd(uint32_t RTC_Tamper, FunctionalState NewState)
1833:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1834:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1835:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_TAMPER(RTC_Tamper));  
1836:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1837:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1838:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
1839:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1840:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Enable the selected Tamper pin */
1841:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_Tamper;
1842:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
1843:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
1844:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
1845:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Disable the selected Tamper pin */
1846:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_Tamper;    
1847:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }  
1848:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1849:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1850:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1851:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
1852:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1853:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1854:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group10 Backup Data Registers configuration functions
1855:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   Backup Data Registers configuration functions  
1856:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
1857:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
1858:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
1859:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                        Backup Data Registers configuration functions 
1860:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
1861:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1862:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
1863:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
1864:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1865:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1866:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1867:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Writes a data in a specified RTC Backup data register.
1868:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
1869:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1870:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                          specify the register.
1871:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  Data: Data to be written in the specified RTC Backup data register.                    
1872:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1873:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1874:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_WriteBackupRegister(uint32_t RTC_BKP_DR, uint32_t Data)
1875:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1876:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t tmp = 0;
1877:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1878:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1879:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
1880:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1881:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp = RTC_BASE + 0x50;
1882:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
1883:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1884:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Write the specified register */
1885:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
1886:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1887:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1888:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1889:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Reads data from the specified RTC Backup data Register.
1890:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_BKP_DR: RTC Backup data Register number.
1891:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1892:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                          specify the register.                   
1893:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1894:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1895:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** uint32_t RTC_ReadBackupRegister(uint32_t RTC_BKP_DR)
1896:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1897:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t tmp = 0;
1898:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1899:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1900:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_BKP(RTC_BKP_DR));
1901:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1902:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp = RTC_BASE + 0x50;
1903:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
1904:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1905:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Read the specified register */
1906:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return (*(__IO uint32_t *)tmp);
1907:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1908:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1909:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1910:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
1911:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1912:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1913:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group11 RTC Tamper and TimeStamp Pins Selection and Output Type Config configurat
1914:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   RTC Tamper and TimeStamp Pins Selection and Output Type Config 
1915:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *           configuration functions  
1916:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
1917:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
1918:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
1919:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC Tamper and TimeStamp Pins Selection and Output Type Config configuration 
1920:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   functions 
1921:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
1922:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1923:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
1924:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
1925:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1926:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1927:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1928:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Selects the RTC Tamper Pin.
1929:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_TamperPin: specifies the RTC Tamper Pin.
1930:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1931:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_TamperPin_PC13: PC13 is selected as RTC Tamper Pin.
1932:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_TamperPin_PI8: PI8 is selected as RTC Tamper Pin.    
1933:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1934:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1935:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_TamperPinSelection(uint32_t RTC_TamperPin)
1936:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1937:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1938:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_TAMPER_PIN(RTC_TamperPin));
1939:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1940:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPINSEL);
1941:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TamperPin);  
1942:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1943:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1944:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1945:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Selects the RTC TimeStamp Pin.
1946:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_TimeStampPin: specifies the RTC TimeStamp Pin.
1947:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1948:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_TimeStampPin_PC13: PC13 is selected as RTC TimeStamp Pin.
1949:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_TimeStampPin_PI8: PI8 is selected as RTC TimeStamp Pin.    
1950:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1951:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1952:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_TimeStampPinSelection(uint32_t RTC_TimeStampPin)
1953:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1954:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1955:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
1956:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1957:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TSINSEL);
1958:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TimeStampPin);  
1959:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1960:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1961:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1962:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Configures the RTC Output Pin mode. 
1963:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_OutputType: specifies the RTC Output (PC13) pin mode.
1964:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
1965:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_OutputType_OpenDrain: RTC Output (PC13) is configured in 
1966:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                    Open Drain mode.
1967:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_OutputType_PushPull:  RTC Output (PC13) is configured in 
1968:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *                                    Push Pull mode.    
1969:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
1970:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1971:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_OutputTypeConfig(uint32_t RTC_OutputType)
1972:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
1973:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
1974:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(RTC_OutputType));
1975:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
1976:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_ALARMOUTTYPE);
1977:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_OutputType);  
1978:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
1979:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1980:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
1981:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
1982:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
1983:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
1984:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /** @defgroup RTC_Group12 Interrupts and flags management functions
1985:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *  @brief   Interrupts and flags management functions  
1986:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  *
1987:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @verbatim   
1988:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================
1989:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                        Interrupts and flags management functions
1990:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  ===============================================================================  
1991:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  All RTC interrupts are connected to the EXTI controller.
1992:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  
1993:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  - To enable the RTC Alarm interrupt, the following sequence is required:
1994:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure and enable the EXTI Line 17 in interrupt mode and select the rising 
1995:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
1996:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure and enable the RTC_Alarm IRQ channel in the NVIC using the NVIC_Init()
1997:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      function.
1998:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure the RTC to generate RTC alarms (Alarm A and/or Alarm B) using
1999:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      the RTC_SetAlarm() and RTC_AlarmCmd() functions.
2000:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2001:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  - To enable the RTC Wakeup interrupt, the following sequence is required:
2002:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure and enable the EXTI Line 22 in interrupt mode and select the rising 
2003:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2004:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure and enable the RTC_WKUP IRQ channel in the NVIC using the NVIC_Init()
2005:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      function.
2006:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure the RTC to generate the RTC wakeup timer event using the 
2007:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      RTC_WakeUpClockConfig(), RTC_SetWakeUpCounter() and RTC_WakeUpCmd() functions.
2008:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2009:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  - To enable the RTC Tamper interrupt, the following sequence is required:
2010:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure and enable the EXTI Line 21 in interrupt mode and select the rising 
2011:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2012:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the NVIC_Init()
2013:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      function.
2014:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure the RTC to detect the RTC tamper event using the 
2015:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      RTC_TamperTriggerConfig() and RTC_TamperCmd() functions.
2016:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2017:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  - To enable the RTC TimeStamp interrupt, the following sequence is required:
2018:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure and enable the EXTI Line 21 in interrupt mode and select the rising 
2019:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      edge sensitivity using the EXTI_Init() function.
2020:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure and enable the TAMP_STAMP IRQ channel in the NVIC using the NVIC_Init()
2021:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      function.
2022:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****    - Configure the RTC to detect the RTC time-stamp event using the 
2023:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****      RTC_TimeStampCmd() functions.
2024:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2025:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** @endverbatim
2026:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @{
2027:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
2028:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2029:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
2030:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
2031:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt sources to be enabled or disabled. 
2032:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be any combination of the following values:
2033:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_TS:  Time Stamp interrupt mask
2034:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_WUT:  WakeUp Timer interrupt mask
2035:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_ALRB:  Alarm B interrupt mask
2036:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_ALRA:  Alarm A interrupt mask
2037:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_TAMP: Tamper event interrupt mask
2038:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
2039:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be: ENABLE or DISABLE.
2040:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
2041:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
2042:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_ITConfig(uint32_t RTC_IT, FunctionalState NewState)
2043:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
2044:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
2045:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_CONFIG_IT(RTC_IT));
2046:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2047:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2048:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Disable the write protection for RTC registers */
2049:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
2050:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
2051:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2052:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
2053:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
2054:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2055:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)(RTC_IT & ~RTC_TAFCR_TAMPIE);
2056:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2057:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_IT & RTC_TAFCR_TAMPIE);
2058:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
2059:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
2060:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
2061:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Configure the Interrupts in the RTC_CR register */
2062:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~(RTC_IT & (uint32_t)~RTC_TAFCR_TAMPIE);
2063:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     /* Configure the Tamper Interrupt in the RTC_TAFCR */
2064:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~(RTC_IT & RTC_TAFCR_TAMPIE);
2065:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
2066:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Enable the write protection for RTC registers */
2067:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
2068:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
2069:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2070:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
2071:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
2072:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
2073:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
2074:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2075:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp OverFlow flag
2076:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2077:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2078:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2079:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2080:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_INITF: Initialization mode flag
2081:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2082:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_INITS: Registers Configured flag
2083:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_WUTWF: WakeUp Timer Write flag
2084:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_ALRBWF: Alarm B Write flag
2085:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_ALRAWF: Alarm A write flag
2086:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
2087:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
2088:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** FlagStatus RTC_GetFlagStatus(uint32_t RTC_FLAG)
2089:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
2090:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   FlagStatus bitstatus = RESET;
2091:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0;
2092:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
2093:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
2094:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG));
2095:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
2096:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get all the flags */
2097:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->ISR & RTC_FLAGS_MASK);
2098:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
2099:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Return the status of the flag */
2100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((tmpreg & RTC_FLAG) != (uint32_t)RESET)
2101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
2102:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     bitstatus = SET;
2103:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
2104:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
2105:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
2106:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     bitstatus = RESET;
2107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
2108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return bitstatus;
2109:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
2110:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2111:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
2112:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Clears the RTC's pending flags.
2113:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_FLAG: specifies the RTC flag to clear.
2114:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be any combination of the following values:
2115:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_TAMP1F: Tamper 1 event flag
2116:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_TSOVF: Time Stamp Overflow flag 
2117:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_TSF: Time Stamp event flag
2118:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_WUTF: WakeUp Timer flag
2119:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_ALRBF: Alarm B flag
2120:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_ALRAF: Alarm A flag
2121:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_FLAG_RSF: Registers Synchronized flag
2122:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
2123:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
2124:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_ClearFlag(uint32_t RTC_FLAG)
2125:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
2126:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
2127:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG));
2128:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2129:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Clear the Flags in the RTC_ISR register */
2130:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((RTC_FLAG | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR &
2131:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
2132:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2133:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
2134:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
2135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt source to check.
2136:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be one of the following values:
2137:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2138:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2139:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2140:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
2141:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt 
2142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval The new state of RTC_IT (SET or RESET).
2143:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
2144:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** ITStatus RTC_GetITStatus(uint32_t RTC_IT)
2145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
2146:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   ITStatus bitstatus = RESET;
2147:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0, enablestatus = 0;
2148:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  
2149:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
2150:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT));
2151:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
2152:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the TAMPER Interrupt enable bit and pending bit */
2153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TAFCR & (RTC_TAFCR_TAMPIE));
2154:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****  
2155:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the Interrupt enable Status */
2156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   enablestatus = (uint32_t)((RTC->CR & RTC_IT) | (tmpreg & (RTC_IT >> 15)));
2157:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
2158:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the Interrupt pending bit */
2159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)((RTC->ISR & (uint32_t)(RTC_IT >> 4)));
2160:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
2161:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the status of the Interrupt */
2162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((enablestatus != (uint32_t)RESET) && ((tmpreg & 0x0000FFFF) != (uint32_t)RESET))
2163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
2164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     bitstatus = SET;
2165:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
2166:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   else
2167:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
2168:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     bitstatus = RESET;
2169:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
2170:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return bitstatus;
2171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
2172:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2173:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
2174:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
2175:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupt pending bit to clear.
2176:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *          This parameter can be any combination of the following values:
2177:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_TS: Time Stamp interrupt 
2178:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_WUT: WakeUp Timer interrupt 
2179:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_ALRB: Alarm B interrupt 
2180:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_ALRA: Alarm A interrupt 
2181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *            @arg RTC_IT_TAMP1: Tamper 1 event interrupt 
2182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval None
2183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
2184:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** void RTC_ClearITPendingBit(uint32_t RTC_IT)
2185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
2186:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint32_t tmpreg = 0;
2187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Check the parameters */
2189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   assert_param(IS_RTC_CLEAR_IT(RTC_IT));
2190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2191:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Get the RTC_ISR Interrupt pending bits mask */
2192:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC_IT >> 4);
2193:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2194:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   /* Clear the interrupt pending bits in the RTC_ISR register */
2195:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((tmpreg | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR & R
2196:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
2197:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2198:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
2199:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @}
2200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
2201:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2202:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
2203:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
2204:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  Value: Byte to be converted.
2205:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval Converted byte
2206:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
2207:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value)
2208:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
  26              		.loc 1 2208 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
2209:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint8_t bcdhigh = 0;
  32              		.loc 1 2209 0
  33 0000 0021     		movs	r1, #0
  34              	.LVL1:
  35              	.L2:
2210:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
2211:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   while (Value >= 10)
  36              		.loc 1 2211 0 discriminator 1
  37 0002 0928     		cmp	r0, #9
  38 0004 04D9     		bls	.L5
  39              	.L3:
2212:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   {
2213:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     bcdhigh++;
  40              		.loc 1 2213 0
  41 0006 4B1C     		adds	r3, r1, #1
2214:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     Value -= 10;
  42              		.loc 1 2214 0
  43 0008 0A38     		subs	r0, r0, #10
  44              	.LVL2:
2213:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     bcdhigh++;
  45              		.loc 1 2213 0
  46 000a D9B2     		uxtb	r1, r3
  47              	.LVL3:
  48              		.loc 1 2214 0
  49 000c C0B2     		uxtb	r0, r0
  50              	.LVL4:
  51 000e F8E7     		b	.L2
  52              	.LVL5:
  53              	.L5:
2215:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   }
2216:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   
2217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return  ((uint8_t)(bcdhigh << 4) | Value);
  54              		.loc 1 2217 0
  55 0010 40EA0110 		orr	r0, r0, r1, lsl #4
  56              	.LVL6:
2218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
  57              		.loc 1 2218 0
  58 0014 C0B2     		uxtb	r0, r0
  59 0016 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE98:
  63              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
  64              		.align	1
  65              		.thumb
  66              		.thumb_func
  68              	RTC_Bcd2ToByte:
  69              	.LFB99:
2219:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** 
2220:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** /**
2221:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
2222:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @param  Value: BCD value to be converted.
2223:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   * @retval Converted word
2224:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   */
2225:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value)
2226:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
  70              		.loc 1 2226 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.LVL7:
2227:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   uint8_t tmp = 0;
2228:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
  76              		.loc 1 2228 0
  77 0000 0209     		lsrs	r2, r0, #4
2229:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
  78              		.loc 1 2229 0
  79 0002 00F00F03 		and	r3, r0, #15
  80 0006 0A20     		movs	r0, #10
  81              	.LVL8:
  82 0008 00FB0231 		mla	r1, r0, r2, r3
2230:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
  83              		.loc 1 2230 0
  84 000c C8B2     		uxtb	r0, r1
  85 000e 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE99:
  89              		.section	.text.RTC_StructInit,"ax",%progbits
  90              		.align	1
  91              		.global	RTC_StructInit
  92              		.thumb
  93              		.thumb_func
  95              	RTC_StructInit:
  96              	.LFB58:
 477:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
  97              		.loc 1 477 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.LVL9:
 485:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_InitStruct->RTC_SynchPrediv = (uint32_t)0xFF; 
 103              		.loc 1 485 0
 104 0000 0021     		movs	r1, #0
 105 0002 7F22     		movs	r2, #127
 106 0004 FF23     		movs	r3, #255
 107 0006 80E80E00 		stmia	r0, {r1, r2, r3}
 108 000a 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE58:
 112              		.section	.text.RTC_WriteProtectionCmd,"ax",%progbits
 113              		.align	1
 114              		.global	RTC_WriteProtectionCmd
 115              		.thumb
 116              		.thumb_func
 118              	RTC_WriteProtectionCmd:
 119              	.LFB59:
 499:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 120              		.loc 1 499 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.LVL10:
 126 0000 044B     		ldr	r3, .L12
 503:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
 127              		.loc 1 503 0
 128 0002 08B1     		cbz	r0, .L9
 506:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->WPR = 0xFF;   
 129              		.loc 1 506 0
 130 0004 FF20     		movs	r0, #255
 131              	.LVL11:
 132 0006 02E0     		b	.L11
 133              	.LVL12:
 134              	.L9:
 511:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->WPR = 0xCA;
 135              		.loc 1 511 0
 136 0008 CA22     		movs	r2, #202
 137 000a 5A62     		str	r2, [r3, #36]
 512:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->WPR = 0x53;    
 138              		.loc 1 512 0
 139 000c 5320     		movs	r0, #83
 140              	.LVL13:
 141              	.L11:
 142 000e 5862     		str	r0, [r3, #36]
 143 0010 7047     		bx	lr
 144              	.L13:
 145 0012 00BF     		.align	2
 146              	.L12:
 147 0014 00280040 		.word	1073752064
 148              		.cfi_endproc
 149              	.LFE59:
 151              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 152              		.align	1
 153              		.global	RTC_EnterInitMode
 154              		.thumb
 155              		.thumb_func
 157              	RTC_EnterInitMode:
 158              	.LFB60:
 526:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 159              		.loc 1 526 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 527:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t initcounter = 0x00;
 164              		.loc 1 527 0
 165 0000 0023     		movs	r3, #0
 526:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 166              		.loc 1 526 0
 167 0002 82B0     		sub	sp, sp, #8
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 532:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 170              		.loc 1 532 0
 171 0004 0D49     		ldr	r1, .L26
 527:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t initcounter = 0x00;
 172              		.loc 1 527 0
 173 0006 0193     		str	r3, [sp, #4]
 174              	.LVL14:
 532:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 175              		.loc 1 532 0
 176 0008 CA68     		ldr	r2, [r1, #12]
 177 000a 5006     		lsls	r0, r2, #25
 178 000c 13D4     		bmi	.L18
 535:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->ISR = (uint32_t)RTC_INIT_MASK;
 179              		.loc 1 535 0
 180 000e 4FF0FF30 		mov	r0, #-1
 181 0012 C860     		str	r0, [r1, #12]
 182              	.LVL15:
 183              	.L17:
 540:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       initstatus = RTC->ISR & RTC_ISR_INITF;
 184              		.loc 1 540 0 discriminator 1
 185 0014 094B     		ldr	r3, .L26
 186 0016 D968     		ldr	r1, [r3, #12]
 541:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       initcounter++;  
 187              		.loc 1 541 0 discriminator 1
 188 0018 0198     		ldr	r0, [sp, #4]
 540:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       initstatus = RTC->ISR & RTC_ISR_INITF;
 189              		.loc 1 540 0 discriminator 1
 190 001a 01F04002 		and	r2, r1, #64
 191              	.LVL16:
 541:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       initcounter++;  
 192              		.loc 1 541 0 discriminator 1
 193 001e 411C     		adds	r1, r0, #1
 194              	.LVL17:
 195 0020 0191     		str	r1, [sp, #4]
 196              	.LVL18:
 542:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } while((initcounter != INITMODE_TIMEOUT) && (initstatus == 0x00));
 197              		.loc 1 542 0 discriminator 1
 198 0022 0198     		ldr	r0, [sp, #4]
 199 0024 B0F5803F 		cmp	r0, #65536
 200 0028 01D0     		beq	.L16
 201 002a 002A     		cmp	r2, #0
 202 002c F2D0     		beq	.L17
 203              	.L16:
 204              	.LBB4:
 205              	.LBB5:
 544:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_INITF) != RESET)
 206              		.loc 1 544 0
 207 002e DB68     		ldr	r3, [r3, #12]
 546:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       status = SUCCESS;
 208              		.loc 1 546 0
 209 0030 C3F38010 		ubfx	r0, r3, #6, #1
 210              	.LVL19:
 211 0034 00E0     		b	.L15
 212              	.LVL20:
 213              	.L18:
 214              	.LBE5:
 215              	.LBE4:
 555:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;  
 216              		.loc 1 555 0
 217 0036 0120     		movs	r0, #1
 218              	.LVL21:
 219              	.L15:
 559:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 220              		.loc 1 559 0
 221 0038 02B0     		add	sp, sp, #8
 222 003a 7047     		bx	lr
 223              	.L27:
 224              		.align	2
 225              	.L26:
 226 003c 00280040 		.word	1073752064
 227              		.cfi_endproc
 228              	.LFE60:
 230              		.section	.text.RTC_ExitInitMode,"ax",%progbits
 231              		.align	1
 232              		.global	RTC_ExitInitMode
 233              		.thumb
 234              		.thumb_func
 236              	RTC_ExitInitMode:
 237              	.LFB61:
 571:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** { 
 238              		.loc 1 571 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 573:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->ISR &= (uint32_t)~RTC_ISR_INIT;  
 243              		.loc 1 573 0
 244 0000 024B     		ldr	r3, .L29
 245 0002 DA68     		ldr	r2, [r3, #12]
 246 0004 22F08000 		bic	r0, r2, #128
 247 0008 D860     		str	r0, [r3, #12]
 248 000a 7047     		bx	lr
 249              	.L30:
 250              		.align	2
 251              	.L29:
 252 000c 00280040 		.word	1073752064
 253              		.cfi_endproc
 254              	.LFE61:
 256              		.section	.text.RTC_Init,"ax",%progbits
 257              		.align	1
 258              		.global	RTC_Init
 259              		.thumb
 260              		.thumb_func
 262              	RTC_Init:
 263              	.LFB57:
 431:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 264              		.loc 1 431 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              	.LVL22:
 269 0000 38B5     		push	{r3, r4, r5, lr}
 270              	.LCFI1:
 271              		.cfi_def_cfa_offset 16
 272              		.cfi_offset 3, -16
 273              		.cfi_offset 4, -12
 274              		.cfi_offset 5, -8
 275              		.cfi_offset 14, -4
 440:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 276              		.loc 1 440 0
 277 0002 104C     		ldr	r4, .L34
 431:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 278              		.loc 1 431 0
 279 0004 0546     		mov	r5, r0
 440:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 280              		.loc 1 440 0
 281 0006 CA23     		movs	r3, #202
 441:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 282              		.loc 1 441 0
 283 0008 5320     		movs	r0, #83
 284              	.LVL23:
 440:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 285              		.loc 1 440 0
 286 000a 6362     		str	r3, [r4, #36]
 441:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 287              		.loc 1 441 0
 288 000c 6062     		str	r0, [r4, #36]
 444:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 289              		.loc 1 444 0
 290 000e FFF7FEFF 		bl	RTC_EnterInitMode
 291              	.LVL24:
 292 0012 90B1     		cbz	r0, .L32
 451:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= ((uint32_t)~(RTC_CR_FMT));
 293              		.loc 1 451 0
 294 0014 A168     		ldr	r1, [r4, #8]
 295 0016 21F04002 		bic	r2, r1, #64
 296 001a A260     		str	r2, [r4, #8]
 453:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |=  ((uint32_t)(RTC_InitStruct->RTC_HourFormat));
 297              		.loc 1 453 0
 298 001c A068     		ldr	r0, [r4, #8]
 299 001e 2B68     		ldr	r3, [r5, #0]
 300 0020 40EA0301 		orr	r1, r0, r3
 301 0024 A160     		str	r1, [r4, #8]
 456:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->PRER = (uint32_t)(RTC_InitStruct->RTC_SynchPrediv);
 302              		.loc 1 456 0
 303 0026 AA68     		ldr	r2, [r5, #8]
 304 0028 2261     		str	r2, [r4, #16]
 457:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->PRER |= (uint32_t)(RTC_InitStruct->RTC_AsynchPrediv << 16);
 305              		.loc 1 457 0
 306 002a 2069     		ldr	r0, [r4, #16]
 307 002c 6B68     		ldr	r3, [r5, #4]
 308 002e 40EA0341 		orr	r1, r0, r3, lsl #16
 309 0032 2161     		str	r1, [r4, #16]
 460:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode();
 310              		.loc 1 460 0
 311 0034 FFF7FEFF 		bl	RTC_ExitInitMode
 312              	.LVL25:
 462:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;    
 313              		.loc 1 462 0
 314 0038 0120     		movs	r0, #1
 315              	.LVL26:
 316              	.L32:
 465:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 317              		.loc 1 465 0
 318 003a 024B     		ldr	r3, .L34
 319 003c FF22     		movs	r2, #255
 320 003e 5A62     		str	r2, [r3, #36]
 468:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 321              		.loc 1 468 0
 322 0040 38BD     		pop	{r3, r4, r5, pc}
 323              	.L35:
 324 0042 00BF     		.align	2
 325              	.L34:
 326 0044 00280040 		.word	1073752064
 327              		.cfi_endproc
 328              	.LFE57:
 330              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 331              		.align	1
 332              		.global	RTC_WaitForSynchro
 333              		.thumb
 334              		.thumb_func
 336              	RTC_WaitForSynchro:
 337              	.LFB62:
 593:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 338              		.loc 1 593 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 8
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 599:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 343              		.loc 1 599 0
 344 0000 0F48     		ldr	r0, .L46
 594:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 345              		.loc 1 594 0
 346 0002 0023     		movs	r3, #0
 599:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 347              		.loc 1 599 0
 348 0004 CA22     		movs	r2, #202
 593:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 349              		.loc 1 593 0
 350 0006 82B0     		sub	sp, sp, #8
 351              	.LCFI2:
 352              		.cfi_def_cfa_offset 8
 600:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 353              		.loc 1 600 0
 354 0008 5321     		movs	r1, #83
 594:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t synchrocounter = 0;
 355              		.loc 1 594 0
 356 000a 0193     		str	r3, [sp, #4]
 357              	.LVL27:
 599:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 358              		.loc 1 599 0
 359 000c 4262     		str	r2, [r0, #36]
 600:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 360              		.loc 1 600 0
 361 000e 4162     		str	r1, [r0, #36]
 603:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->ISR &= (uint32_t)RTC_RSF_MASK;
 362              		.loc 1 603 0
 363 0010 C368     		ldr	r3, [r0, #12]
 364 0012 23F0A002 		bic	r2, r3, #160
 365 0016 C260     		str	r2, [r0, #12]
 366              	.LVL28:
 367              	.L38:
 608:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     synchrostatus = RTC->ISR & RTC_ISR_RSF;
 368              		.loc 1 608 0 discriminator 1
 369 0018 094B     		ldr	r3, .L46
 370 001a D868     		ldr	r0, [r3, #12]
 609:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     synchrocounter++;  
 371              		.loc 1 609 0 discriminator 1
 372 001c 0199     		ldr	r1, [sp, #4]
 608:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     synchrostatus = RTC->ISR & RTC_ISR_RSF;
 373              		.loc 1 608 0 discriminator 1
 374 001e 00F02002 		and	r2, r0, #32
 375              	.LVL29:
 609:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     synchrocounter++;  
 376              		.loc 1 609 0 discriminator 1
 377 0022 481C     		adds	r0, r1, #1
 378              	.LVL30:
 379 0024 0190     		str	r0, [sp, #4]
 380              	.LVL31:
 610:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   } while((synchrocounter != SYNCHRO_TIMEOUT) && (synchrostatus == 0x00));
 381              		.loc 1 610 0 discriminator 1
 382 0026 0199     		ldr	r1, [sp, #4]
 383 0028 B1F5004F 		cmp	r1, #32768
 384 002c 01D0     		beq	.L37
 385 002e 002A     		cmp	r2, #0
 386 0030 F2D0     		beq	.L38
 387              	.L37:
 612:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((RTC->ISR & RTC_ISR_RSF) != RESET)
 388              		.loc 1 612 0
 389 0032 D868     		ldr	r0, [r3, #12]
 390              	.LVL32:
 622:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 391              		.loc 1 622 0
 392 0034 FF22     		movs	r2, #255
 393              	.LVL33:
 394 0036 5A62     		str	r2, [r3, #36]
 625:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 395              		.loc 1 625 0
 396 0038 C0F34010 		ubfx	r0, r0, #5, #1
 397              	.LVL34:
 398 003c 02B0     		add	sp, sp, #8
 399 003e 7047     		bx	lr
 400              	.L47:
 401              		.align	2
 402              	.L46:
 403 0040 00280040 		.word	1073752064
 404              		.cfi_endproc
 405              	.LFE62:
 407              		.section	.text.RTC_DeInit,"ax",%progbits
 408              		.align	1
 409              		.global	RTC_DeInit
 410              		.thumb
 411              		.thumb_func
 413              	RTC_DeInit:
 414              	.LFB56:
 353:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 415              		.loc 1 353 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 8
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 420              	.LCFI3:
 421              		.cfi_def_cfa_offset 24
 422              		.cfi_offset 0, -24
 423              		.cfi_offset 1, -20
 424              		.cfi_offset 2, -16
 425              		.cfi_offset 4, -12
 426              		.cfi_offset 5, -8
 427              		.cfi_offset 14, -4
 359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 428              		.loc 1 359 0
 429 0002 1D4C     		ldr	r4, .L64
 354:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 430              		.loc 1 354 0
 431 0004 0025     		movs	r5, #0
 359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 432              		.loc 1 359 0
 433 0006 CA23     		movs	r3, #202
 360:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 434              		.loc 1 360 0
 435 0008 5320     		movs	r0, #83
 354:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 436              		.loc 1 354 0
 437 000a 0195     		str	r5, [sp, #4]
 438              	.LVL35:
 359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 439              		.loc 1 359 0
 440 000c 6362     		str	r3, [r4, #36]
 360:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 441              		.loc 1 360 0
 442 000e 6062     		str	r0, [r4, #36]
 363:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 443              		.loc 1 363 0
 444 0010 FFF7FEFF 		bl	RTC_EnterInitMode
 445              	.LVL36:
 446 0014 08B9     		cbnz	r0, .L49
 447              	.LVL37:
 448              	.L53:
 365:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 449              		.loc 1 365 0
 450 0016 0020     		movs	r0, #0
 451 0018 2AE0     		b	.L50
 452              	.LVL38:
 453              	.L49:
 371:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
 454              		.loc 1 371 0
 455 001a 42F20111 		movw	r1, #8449
 370:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TR = (uint32_t)0x00000000;
 456              		.loc 1 370 0
 457 001e 2560     		str	r5, [r4, #0]
 371:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->DR = (uint32_t)0x00002101;
 458              		.loc 1 371 0
 459 0020 6160     		str	r1, [r4, #4]
 373:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)0x00000007;
 460              		.loc 1 373 0
 461 0022 A268     		ldr	r2, [r4, #8]
 462 0024 02F00703 		and	r3, r2, #7
 463 0028 A360     		str	r3, [r4, #8]
 464              	.LVL39:
 465              	.L52:
 378:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
 466              		.loc 1 378 0 discriminator 1
 467 002a 1348     		ldr	r0, .L64
 468 002c C168     		ldr	r1, [r0, #12]
 379:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutcounter++;  
 469              		.loc 1 379 0 discriminator 1
 470 002e 019A     		ldr	r2, [sp, #4]
 378:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
 471              		.loc 1 378 0 discriminator 1
 472 0030 01F00403 		and	r3, r1, #4
 473              	.LVL40:
 379:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutcounter++;  
 474              		.loc 1 379 0 discriminator 1
 475 0034 511C     		adds	r1, r2, #1
 476              	.LVL41:
 477 0036 0191     		str	r1, [sp, #4]
 478              	.LVL42:
 380:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 479              		.loc 1 380 0 discriminator 1
 480 0038 019A     		ldr	r2, [sp, #4]
 481 003a B2F5803F 		cmp	r2, #65536
 482 003e 01D0     		beq	.L51
 483 0040 002B     		cmp	r3, #0
 484 0042 F2D0     		beq	.L52
 485              	.L51:
 382:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
 486              		.loc 1 382 0
 487 0044 C168     		ldr	r1, [r0, #12]
 488 0046 0C4B     		ldr	r3, .L64
 489              	.LVL43:
 490 0048 4A07     		lsls	r2, r1, #29
 491 004a E4D5     		bpl	.L53
 391:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 492              		.loc 1 391 0
 493 004c 0B49     		ldr	r1, .L64+4
 389:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR &= (uint32_t)0x00000000;
 494              		.loc 1 389 0
 495 004e 9A68     		ldr	r2, [r3, #8]
 390:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 496              		.loc 1 390 0
 497 0050 4FF6FF70 		movw	r0, #65535
 389:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR &= (uint32_t)0x00000000;
 498              		.loc 1 389 0
 499 0054 0022     		movs	r2, #0
 500 0056 9A60     		str	r2, [r3, #8]
 390:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->WUTR = (uint32_t)0x0000FFFF;
 501              		.loc 1 390 0
 502 0058 5861     		str	r0, [r3, #20]
 391:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->PRER = (uint32_t)0x007F00FF;
 503              		.loc 1 391 0
 504 005a 1961     		str	r1, [r3, #16]
 392:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CALIBR = (uint32_t)0x00000000;
 505              		.loc 1 392 0
 506 005c 9A61     		str	r2, [r3, #24]
 393:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->ALRMAR = (uint32_t)0x00000000;        
 507              		.loc 1 393 0
 508 005e DA61     		str	r2, [r3, #28]
 394:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->ALRMBR = (uint32_t)0x00000000;
 509              		.loc 1 394 0
 510 0060 1A62     		str	r2, [r3, #32]
 397:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->ISR = (uint32_t)0x00000000;
 511              		.loc 1 397 0
 512 0062 DA60     		str	r2, [r3, #12]
 400:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->TAFCR = 0x00000000;
 513              		.loc 1 400 0
 514 0064 1A64     		str	r2, [r3, #64]
 402:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       if(RTC_WaitForSynchro() == ERROR)
 515              		.loc 1 402 0
 516 0066 FFF7FEFF 		bl	RTC_WaitForSynchro
 517              	.LVL44:
 365:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 518              		.loc 1 365 0
 519 006a 0030     		adds	r0, r0, #0
 520 006c 18BF     		it	ne
 521 006e 0120     		movne	r0, #1
 522              	.L50:
 523              	.LVL45:
 414:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF;  
 524              		.loc 1 414 0
 525 0070 014B     		ldr	r3, .L64
 526 0072 FF22     		movs	r2, #255
 527 0074 5A62     		str	r2, [r3, #36]
 417:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 528              		.loc 1 417 0
 529 0076 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 530              	.L65:
 531              		.align	2
 532              	.L64:
 533 0078 00280040 		.word	1073752064
 534 007c FF007F00 		.word	8323327
 535              		.cfi_endproc
 536              	.LFE56:
 538              		.section	.text.RTC_RefClockCmd,"ax",%progbits
 539              		.align	1
 540              		.global	RTC_RefClockCmd
 541              		.thumb
 542              		.thumb_func
 544              	RTC_RefClockCmd:
 545              	.LFB63:
 636:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** { 
 546              		.loc 1 636 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL46:
 551 0000 38B5     		push	{r3, r4, r5, lr}
 552              	.LCFI4:
 553              		.cfi_def_cfa_offset 16
 554              		.cfi_offset 3, -16
 555              		.cfi_offset 4, -12
 556              		.cfi_offset 5, -8
 557              		.cfi_offset 14, -4
 643:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 558              		.loc 1 643 0
 559 0002 0B4C     		ldr	r4, .L72
 636:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** { 
 560              		.loc 1 636 0
 561 0004 0546     		mov	r5, r0
 643:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 562              		.loc 1 643 0
 563 0006 CA23     		movs	r3, #202
 644:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 564              		.loc 1 644 0
 565 0008 5320     		movs	r0, #83
 566              	.LVL47:
 643:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 567              		.loc 1 643 0
 568 000a 6362     		str	r3, [r4, #36]
 644:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 569              		.loc 1 644 0
 570 000c 6062     		str	r0, [r4, #36]
 647:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 571              		.loc 1 647 0
 572 000e FFF7FEFF 		bl	RTC_EnterInitMode
 573              	.LVL48:
 574 0012 50B1     		cbz	r0, .L67
 656:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR |= RTC_CR_REFCKON;   
 575              		.loc 1 656 0
 576 0014 A168     		ldr	r1, [r4, #8]
 653:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if (NewState != DISABLE)
 577              		.loc 1 653 0
 578 0016 15B1     		cbz	r5, .L68
 656:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR |= RTC_CR_REFCKON;   
 579              		.loc 1 656 0
 580 0018 41F01002 		orr	r2, r1, #16
 581 001c 01E0     		b	.L71
 582              	.L68:
 661:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR &= ~RTC_CR_REFCKON;    
 583              		.loc 1 661 0
 584 001e 21F01002 		bic	r2, r1, #16
 585              	.L71:
 586 0022 A260     		str	r2, [r4, #8]
 664:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode();
 587              		.loc 1 664 0
 588 0024 FFF7FEFF 		bl	RTC_ExitInitMode
 589              	.LVL49:
 666:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;
 590              		.loc 1 666 0
 591 0028 0120     		movs	r0, #1
 592              	.LVL50:
 593              	.L67:
 670:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF;  
 594              		.loc 1 670 0
 595 002a FF23     		movs	r3, #255
 596 002c 6362     		str	r3, [r4, #36]
 673:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 597              		.loc 1 673 0
 598 002e 38BD     		pop	{r3, r4, r5, pc}
 599              	.L73:
 600              		.align	2
 601              	.L72:
 602 0030 00280040 		.word	1073752064
 603              		.cfi_endproc
 604              	.LFE63:
 606              		.section	.text.RTC_SetTime,"ax",%progbits
 607              		.align	1
 608              		.global	RTC_SetTime
 609              		.thumb
 610              		.thumb_func
 612              	RTC_SetTime:
 613              	.LFB64:
 707:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 614              		.loc 1 707 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              	.LVL51:
 619 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 620              	.LCFI5:
 621              		.cfi_def_cfa_offset 24
 622              		.cfi_offset 3, -24
 623              		.cfi_offset 4, -20
 624              		.cfi_offset 5, -16
 625              		.cfi_offset 6, -12
 626              		.cfi_offset 7, -8
 627              		.cfi_offset 14, -4
 628 0002 214B     		ldr	r3, .L82
 707:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 629              		.loc 1 707 0
 630 0004 0C46     		mov	r4, r1
 716:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 631              		.loc 1 716 0
 632 0006 9968     		ldr	r1, [r3, #8]
 633              	.LVL52:
 714:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 634              		.loc 1 714 0
 635 0008 20B9     		cbnz	r0, .L75
 716:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 636              		.loc 1 716 0
 637 000a 11F04006 		ands	r6, r1, #64
 638 000e 27D1     		bne	.L76
 723:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 639              		.loc 1 723 0
 640 0010 E670     		strb	r6, [r4, #3]
 641 0012 25E0     		b	.L76
 642              	.L75:
 731:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 643              		.loc 1 731 0
 644 0014 11F04000 		ands	r0, r1, #64
 645              	.LVL53:
 646 0018 00D1     		bne	.L77
 739:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC_TimeStruct->RTC_H12 = 0x00;
 647              		.loc 1 739 0
 648 001a E070     		strb	r0, [r4, #3]
 649              	.L77:
 750:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 650              		.loc 1 750 0
 651 001c 6578     		ldrb	r5, [r4, #1]	@ zero_extendqisi2
 749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 652              		.loc 1 749 0
 653 001e 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 750:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 654              		.loc 1 750 0
 655 0020 2B02     		lsls	r3, r5, #8
 751:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****              ((uint32_t)RTC_TimeStruct->RTC_Seconds) | \
 656              		.loc 1 751 0
 657 0022 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 658              		.loc 1 749 0
 659 0024 43EA0241 		orr	r1, r3, r2, lsl #16
 752:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_H12) << 16)); 
 660              		.loc 1 752 0
 661 0028 E478     		ldrb	r4, [r4, #3]	@ zero_extendqisi2
 662              	.LVL54:
 750:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****              ((uint32_t)(RTC_TimeStruct->RTC_Minutes) << 8) | \
 663              		.loc 1 750 0
 664 002a 0143     		orrs	r1, r1, r0
 749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_TimeStruct->RTC_Hours) << 16) | \
 665              		.loc 1 749 0
 666 002c 41EA0445 		orr	r5, r1, r4, lsl #16
 667              	.LVL55:
 668              	.L79:
 763:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 669              		.loc 1 763 0
 670 0030 154C     		ldr	r4, .L82
 671 0032 CA21     		movs	r1, #202
 764:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 672              		.loc 1 764 0
 673 0034 5320     		movs	r0, #83
 763:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 674              		.loc 1 763 0
 675 0036 6162     		str	r1, [r4, #36]
 764:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 676              		.loc 1 764 0
 677 0038 6062     		str	r0, [r4, #36]
 767:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 678              		.loc 1 767 0
 679 003a FFF7FEFF 		bl	RTC_EnterInitMode
 680              	.LVL56:
 681 003e 58B1     		cbz	r0, .L78
 774:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 682              		.loc 1 774 0
 683 0040 05F07F32 		and	r2, r5, #2139062143
 684 0044 22F0FE45 		bic	r5, r2, #2130706432
 685              	.LVL57:
 686 0048 2560     		str	r5, [r4, #0]
 777:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode(); 
 687              		.loc 1 777 0
 688 004a FFF7FEFF 		bl	RTC_ExitInitMode
 689              	.LVL58:
 779:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 690              		.loc 1 779 0
 691 004e FFF7FEFF 		bl	RTC_WaitForSynchro
 692              	.LVL59:
 769:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 693              		.loc 1 769 0
 694 0052 0030     		adds	r0, r0, #0
 695 0054 18BF     		it	ne
 696 0056 0120     		movne	r0, #1
 697              	.L78:
 698              	.LVL60:
 790:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 699              		.loc 1 790 0
 700 0058 0B4B     		ldr	r3, .L82
 701 005a FF21     		movs	r1, #255
 702 005c 5962     		str	r1, [r3, #36]
 703 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 704              	.LVL61:
 705              	.L76:
 756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 706              		.loc 1 756 0
 707 0060 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 708              	.LVL62:
 709 0062 FFF7FEFF 		bl	RTC_ByteToBcd2
 710              	.LVL63:
 711 0066 0746     		mov	r7, r0
 757:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 712              		.loc 1 757 0
 713 0068 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 714 006a FFF7FEFF 		bl	RTC_ByteToBcd2
 715              	.LVL64:
 716 006e 0646     		mov	r6, r0
 758:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Seconds)) | \
 717              		.loc 1 758 0
 718 0070 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 719 0072 FFF7FEFF 		bl	RTC_ByteToBcd2
 720              	.LVL65:
 759:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                    (((uint32_t)RTC_TimeStruct->RTC_H12) << 16));
 721              		.loc 1 759 0
 722 0076 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 723              		.loc 1 756 0
 724 0078 40EA0245 		orr	r5, r0, r2, lsl #16
 757:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****                    ((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Minutes) << 8) | \
 725              		.loc 1 757 0
 726 007c 45EA0743 		orr	r3, r5, r7, lsl #16
 756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(RTC_TimeStruct->RTC_Hours) << 16) | \
 727              		.loc 1 756 0
 728 0080 43EA0625 		orr	r5, r3, r6, lsl #8
 729              	.LVL66:
 730 0084 D4E7     		b	.L79
 731              	.L83:
 732 0086 00BF     		.align	2
 733              	.L82:
 734 0088 00280040 		.word	1073752064
 735              		.cfi_endproc
 736              	.LFE64:
 738              		.section	.text.RTC_TimeStructInit,"ax",%progbits
 739              		.align	1
 740              		.global	RTC_TimeStructInit
 741              		.thumb
 742              		.thumb_func
 744              	RTC_TimeStructInit:
 745              	.LFB65:
 803:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 746              		.loc 1 803 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751              	.LVL67:
 805:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = RTC_H12_AM;
 752              		.loc 1 805 0
 753 0000 0023     		movs	r3, #0
 754 0002 C370     		strb	r3, [r0, #3]
 806:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = 0;
 755              		.loc 1 806 0
 756 0004 0370     		strb	r3, [r0, #0]
 807:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = 0;
 757              		.loc 1 807 0
 758 0006 4370     		strb	r3, [r0, #1]
 808:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = 0; 
 759              		.loc 1 808 0
 760 0008 8370     		strb	r3, [r0, #2]
 761 000a 7047     		bx	lr
 762              		.cfi_endproc
 763              	.LFE65:
 765              		.section	.text.RTC_GetTime,"ax",%progbits
 766              		.align	1
 767              		.global	RTC_GetTime
 768              		.thumb
 769              		.thumb_func
 771              	RTC_GetTime:
 772              	.LFB66:
 822:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 773              		.loc 1 822 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              	.LVL68:
 829:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TR & RTC_TR_RESERVED_MASK); 
 778              		.loc 1 829 0
 779 0000 0F4B     		ldr	r3, .L87
 822:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 780              		.loc 1 822 0
 781 0002 70B5     		push	{r4, r5, r6, lr}
 782              	.LCFI6:
 783              		.cfi_def_cfa_offset 16
 784              		.cfi_offset 4, -16
 785              		.cfi_offset 5, -12
 786              		.cfi_offset 6, -8
 787              		.cfi_offset 14, -4
 822:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 788              		.loc 1 822 0
 789 0004 0C46     		mov	r4, r1
 829:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TR & RTC_TR_RESERVED_MASK); 
 790              		.loc 1 829 0
 791 0006 1968     		ldr	r1, [r3, #0]
 792              	.LVL69:
 835:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 793              		.loc 1 835 0
 794 0008 01F48003 		and	r3, r1, #4194304
 832:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 795              		.loc 1 832 0
 796 000c C1F30542 		ubfx	r2, r1, #16, #6
 833:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 797              		.loc 1 833 0
 798 0010 C1F30626 		ubfx	r6, r1, #8, #7
 834:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 799              		.loc 1 834 0
 800 0014 01F07F05 		and	r5, r1, #127
 835:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 801              		.loc 1 835 0
 802 0018 190C     		lsrs	r1, r3, #16
 803              	.LVL70:
 832:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 804              		.loc 1 832 0
 805 001a 2270     		strb	r2, [r4, #0]
 833:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8);
 806              		.loc 1 833 0
 807 001c 6670     		strb	r6, [r4, #1]
 834:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 808              		.loc 1 834 0
 809 001e A570     		strb	r5, [r4, #2]
 835:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_TimeStruct->RTC_H12 = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16);  
 810              		.loc 1 835 0
 811 0020 E170     		strb	r1, [r4, #3]
 838:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 812              		.loc 1 838 0
 813 0022 58B9     		cbnz	r0, .L85
 841:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_TimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Hours);
 814              		.loc 1 841 0
 815 0024 1046     		mov	r0, r2
 816              	.LVL71:
 817 0026 FFF7FEFF 		bl	RTC_Bcd2ToByte
 818              	.LVL72:
 819 002a 2070     		strb	r0, [r4, #0]
 842:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_TimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Minutes);
 820              		.loc 1 842 0
 821 002c 3046     		mov	r0, r6
 822 002e FFF7FEFF 		bl	RTC_Bcd2ToByte
 823              	.LVL73:
 824 0032 6070     		strb	r0, [r4, #1]
 843:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_TimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_TimeStruct->RTC_Seconds);   
 825              		.loc 1 843 0
 826 0034 2846     		mov	r0, r5
 827 0036 FFF7FEFF 		bl	RTC_Bcd2ToByte
 828              	.LVL74:
 829 003a A070     		strb	r0, [r4, #2]
 830              	.L85:
 831 003c 70BD     		pop	{r4, r5, r6, pc}
 832              	.L88:
 833 003e 00BF     		.align	2
 834              	.L87:
 835 0040 00280040 		.word	1073752064
 836              		.cfi_endproc
 837              	.LFE66:
 839              		.section	.text.RTC_SetDate,"ax",%progbits
 840              		.align	1
 841              		.global	RTC_SetDate
 842              		.thumb
 843              		.thumb_func
 845              	RTC_SetDate:
 846              	.LFB67:
 860:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 847              		.loc 1 860 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL75:
 852 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 853              	.LCFI7:
 854              		.cfi_def_cfa_offset 24
 855              		.cfi_offset 3, -24
 856              		.cfi_offset 4, -20
 857              		.cfi_offset 5, -16
 858              		.cfi_offset 6, -12
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 860:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 861              		.loc 1 860 0
 862 0002 0C46     		mov	r4, r1
 863 0004 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 867:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((RTC_Format == RTC_Format_BIN) && ((RTC_DateStruct->RTC_Month & 0x10) == 0x10))
 864              		.loc 1 867 0
 865 0006 0028     		cmp	r0, #0
 866 0008 31D1     		bne	.L90
 867:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((RTC_Format == RTC_Format_BIN) && ((RTC_DateStruct->RTC_Month & 0x10) == 0x10))
 867              		.loc 1 867 0 is_stmt 0 discriminator 1
 868 000a 03F01006 		and	r6, r3, #16
 869 000e F7B2     		uxtb	r7, r6
 870 0010 1FB1     		cbz	r7, .L91
 869:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_DateStruct->RTC_Month = (RTC_DateStruct->RTC_Month & (uint32_t)~(0x10)) + 0x0A;
 871              		.loc 1 869 0 is_stmt 1
 872 0012 23F01003 		bic	r3, r3, #16
 873 0016 0A33     		adds	r3, r3, #10
 874 0018 4B70     		strb	r3, [r1, #1]
 875              	.L91:
 897:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 876              		.loc 1 897 0
 877 001a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 878              	.LVL76:
 879 001c FFF7FEFF 		bl	RTC_ByteToBcd2
 880              	.LVL77:
 881 0020 0746     		mov	r7, r0
 898:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 882              		.loc 1 898 0
 883 0022 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 884 0024 FFF7FEFF 		bl	RTC_ByteToBcd2
 885              	.LVL78:
 886 0028 0646     		mov	r6, r0
 899:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Date)) | \
 887              		.loc 1 899 0
 888 002a A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 889 002c FFF7FEFF 		bl	RTC_ByteToBcd2
 890              	.LVL79:
 900:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_WeekDay << 13));
 891              		.loc 1 900 0
 892 0030 2578     		ldrb	r5, [r4, #0]	@ zero_extendqisi2
 897:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 893              		.loc 1 897 0
 894 0032 40EA4530 		orr	r0, r0, r5, lsl #13
 898:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Month) << 8) | \
 895              		.loc 1 898 0
 896 0036 40EA0741 		orr	r1, r0, r7, lsl #16
 897:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_DateStruct->RTC_Year) << 16) | \
 897              		.loc 1 897 0
 898 003a 41EA0625 		orr	r5, r1, r6, lsl #8
 899              	.LVL80:
 900              	.L93:
 904:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 901              		.loc 1 904 0
 902 003e 114C     		ldr	r4, .L99
 903 0040 CA22     		movs	r2, #202
 905:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 904              		.loc 1 905 0
 905 0042 5323     		movs	r3, #83
 904:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 906              		.loc 1 904 0
 907 0044 6262     		str	r2, [r4, #36]
 905:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 908              		.loc 1 905 0
 909 0046 6362     		str	r3, [r4, #36]
 908:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 910              		.loc 1 908 0
 911 0048 FFF7FEFF 		bl	RTC_EnterInitMode
 912              	.LVL81:
 913 004c 58B1     		cbz	r0, .L92
 915:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->DR = (uint32_t)(tmpreg & RTC_DR_RESERVED_MASK);
 914              		.loc 1 915 0
 915 004e 25F07F45 		bic	r5, r5, #-16777216
 916              	.LVL82:
 917 0052 25F0C005 		bic	r5, r5, #192
 918 0056 6560     		str	r5, [r4, #4]
 918:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode(); 
 919              		.loc 1 918 0
 920 0058 FFF7FEFF 		bl	RTC_ExitInitMode
 921              	.LVL83:
 920:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if(RTC_WaitForSynchro() == ERROR)
 922              		.loc 1 920 0
 923 005c FFF7FEFF 		bl	RTC_WaitForSynchro
 924              	.LVL84:
 910:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = ERROR;
 925              		.loc 1 910 0
 926 0060 0030     		adds	r0, r0, #0
 927 0062 18BF     		it	ne
 928 0064 0120     		movne	r0, #1
 929              	.L92:
 930              	.LVL85:
 930:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF;   
 931              		.loc 1 930 0
 932 0066 074A     		ldr	r2, .L99
 933 0068 FF21     		movs	r1, #255
 934 006a 5162     		str	r1, [r2, #36]
 935 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 936              	.LVL86:
 937              	.L90:
 890:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 938              		.loc 1 890 0
 939 006e CD78     		ldrb	r5, [r1, #3]	@ zero_extendqisi2
 892:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_DateStruct->RTC_Date) | \
 940              		.loc 1 892 0
 941 0070 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 891:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 942              		.loc 1 891 0
 943 0072 1802     		lsls	r0, r3, #8
 944              	.LVL87:
 890:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 945              		.loc 1 890 0
 946 0074 40EA0541 		orr	r1, r0, r5, lsl #16
 947              	.LVL88:
 893:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_WeekDay) << 13)); 
 948              		.loc 1 893 0
 949 0078 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 950              	.LVL89:
 891:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               (((uint32_t)RTC_DateStruct->RTC_Month) << 8) | \
 951              		.loc 1 891 0
 952 007a 1143     		orrs	r1, r1, r2
 890:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = ((((uint32_t)RTC_DateStruct->RTC_Year) << 16) | \
 953              		.loc 1 890 0
 954 007c 41EA4435 		orr	r5, r1, r4, lsl #13
 955              	.LVL90:
 956 0080 DDE7     		b	.L93
 957              	.L100:
 958 0082 00BF     		.align	2
 959              	.L99:
 960 0084 00280040 		.word	1073752064
 961              		.cfi_endproc
 962              	.LFE67:
 964              		.section	.text.RTC_DateStructInit,"ax",%progbits
 965              		.align	1
 966              		.global	RTC_DateStructInit
 967              		.thumb
 968              		.thumb_func
 970              	RTC_DateStructInit:
 971              	.LFB68:
 943:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 972              		.loc 1 943 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
 977              	.LVL91:
 945:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = RTC_Weekday_Monday;
 978              		.loc 1 945 0
 979 0000 0123     		movs	r3, #1
 948:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
 980              		.loc 1 948 0
 981 0002 0021     		movs	r1, #0
 945:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = RTC_Weekday_Monday;
 982              		.loc 1 945 0
 983 0004 0370     		strb	r3, [r0, #0]
 946:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Date = 1;
 984              		.loc 1 946 0
 985 0006 8370     		strb	r3, [r0, #2]
 947:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Month = RTC_Month_January;
 986              		.loc 1 947 0
 987 0008 4370     		strb	r3, [r0, #1]
 948:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Year = 0;
 988              		.loc 1 948 0
 989 000a C170     		strb	r1, [r0, #3]
 990 000c 7047     		bx	lr
 991              		.cfi_endproc
 992              	.LFE68:
 994              		.section	.text.RTC_GetDate,"ax",%progbits
 995              		.align	1
 996              		.global	RTC_GetDate
 997              		.thumb
 998              		.thumb_func
 1000              	RTC_GetDate:
 1001              	.LFB69:
 962:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1002              		.loc 1 962 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              	.LVL92:
 969:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->DR & RTC_DR_RESERVED_MASK); 
 1007              		.loc 1 969 0
 1008 0000 0E4B     		ldr	r3, .L104
 962:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1009              		.loc 1 962 0
 1010 0002 70B5     		push	{r4, r5, r6, lr}
 1011              	.LCFI8:
 1012              		.cfi_def_cfa_offset 16
 1013              		.cfi_offset 4, -16
 1014              		.cfi_offset 5, -12
 1015              		.cfi_offset 6, -8
 1016              		.cfi_offset 14, -4
 962:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1017              		.loc 1 962 0
 1018 0004 0C46     		mov	r4, r1
 969:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->DR & RTC_DR_RESERVED_MASK); 
 1019              		.loc 1 969 0
 1020 0006 5968     		ldr	r1, [r3, #4]
 1021              	.LVL93:
 972:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Year = (uint8_t)((tmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16);
 1022              		.loc 1 972 0
 1023 0008 C1F30742 		ubfx	r2, r1, #16, #8
 973:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1024              		.loc 1 973 0
 1025 000c C1F30426 		ubfx	r6, r1, #8, #5
 974:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 1026              		.loc 1 974 0
 1027 0010 01F03F05 		and	r5, r1, #63
 975:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);  
 1028              		.loc 1 975 0
 1029 0014 C1F34233 		ubfx	r3, r1, #13, #3
 972:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Year = (uint8_t)((tmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16);
 1030              		.loc 1 972 0
 1031 0018 E270     		strb	r2, [r4, #3]
 973:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Month = (uint8_t)((tmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 1032              		.loc 1 973 0
 1033 001a 6670     		strb	r6, [r4, #1]
 974:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_Date = (uint8_t)(tmpreg & (RTC_DR_DT | RTC_DR_DU));
 1034              		.loc 1 974 0
 1035 001c A570     		strb	r5, [r4, #2]
 975:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_DateStruct->RTC_WeekDay = (uint8_t)((tmpreg & (RTC_DR_WDU)) >> 13);  
 1036              		.loc 1 975 0
 1037 001e 2370     		strb	r3, [r4, #0]
 978:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1038              		.loc 1 978 0
 1039 0020 58B9     		cbnz	r0, .L102
 981:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_DateStruct->RTC_Year = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Year);
 1040              		.loc 1 981 0
 1041 0022 1046     		mov	r0, r2
 1042              	.LVL94:
 1043 0024 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1044              	.LVL95:
 1045 0028 E070     		strb	r0, [r4, #3]
 982:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_DateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Month);
 1046              		.loc 1 982 0
 1047 002a 3046     		mov	r0, r6
 1048 002c FFF7FEFF 		bl	RTC_Bcd2ToByte
 1049              	.LVL96:
 1050 0030 6070     		strb	r0, [r4, #1]
 983:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_DateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_DateStruct->RTC_Date); 
 1051              		.loc 1 983 0
 1052 0032 2846     		mov	r0, r5
 1053 0034 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1054              	.LVL97:
 1055 0038 A070     		strb	r0, [r4, #2]
 1056              	.L102:
 1057 003a 70BD     		pop	{r4, r5, r6, pc}
 1058              	.L105:
 1059              		.align	2
 1060              	.L104:
 1061 003c 00280040 		.word	1073752064
 1062              		.cfi_endproc
 1063              	.LFE69:
 1065              		.section	.text.RTC_SetAlarm,"ax",%progbits
 1066              		.align	1
 1067              		.global	RTC_SetAlarm
 1068              		.thumb
 1069              		.thumb_func
 1071              	RTC_SetAlarm:
 1072              	.LFB70:
1022:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1073              		.loc 1 1022 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 1077              	.LVL98:
 1078 0000 264B     		ldr	r3, .L114
 1079 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1080              	.LCFI9:
 1081              		.cfi_def_cfa_offset 24
 1082              		.cfi_offset 4, -24
 1083              		.cfi_offset 5, -20
 1084              		.cfi_offset 6, -16
 1085              		.cfi_offset 7, -12
 1086              		.cfi_offset 8, -8
 1087              		.cfi_offset 14, -4
1022:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1088              		.loc 1 1022 0
 1089 0006 0D46     		mov	r5, r1
 1090 0008 1446     		mov	r4, r2
1033:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 1091              		.loc 1 1033 0
 1092 000a 9968     		ldr	r1, [r3, #8]
 1093              	.LVL99:
1031:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1094              		.loc 1 1031 0
 1095 000c 20B9     		cbnz	r0, .L107
1033:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 1096              		.loc 1 1033 0
 1097 000e 11F04006 		ands	r6, r1, #64
 1098 0012 24D1     		bne	.L108
1040:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
 1099              		.loc 1 1040 0
 1100 0014 D670     		strb	r6, [r2, #3]
 1101 0016 22E0     		b	.L108
 1102              	.L107:
1057:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->CR & RTC_CR_FMT) != (uint32_t)RESET)
 1103              		.loc 1 1057 0
 1104 0018 11F04000 		ands	r0, r1, #64
 1105              	.LVL100:
 1106 001c 00D1     		bne	.L109
1065:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = 0x00;
 1107              		.loc 1 1065 0
 1108 001e D070     		strb	r0, [r2, #3]
 1109              	.L109:
1087:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1110              		.loc 1 1087 0
 1111 0020 A368     		ldr	r3, [r4, #8]
 1112 0022 6268     		ldr	r2, [r4, #4]
 1113              	.LVL101:
1089:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 1114              		.loc 1 1089 0
 1115 0024 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
1087:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1116              		.loc 1 1087 0
 1117 0026 1A43     		orrs	r2, r2, r3
 1118 0028 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
1088:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1119              		.loc 1 1088 0
 1120 002a 0A43     		orrs	r2, r2, r1
 1121 002c 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
1089:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds) | \
 1122              		.loc 1 1089 0
 1123 002e 42EA0042 		orr	r2, r2, r0, lsl #16
1090:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1124              		.loc 1 1090 0
 1125 0032 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1126 0034 42EA0321 		orr	r1, r2, r3, lsl #8
1091:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1127              		.loc 1 1091 0
 1128 0038 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 1129 003a 41EA0042 		orr	r2, r1, r0, lsl #16
1087:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1130              		.loc 1 1087 0
 1131 003e 42EA0360 		orr	r0, r2, r3, lsl #24
 1132              	.LVL102:
 1133              	.L112:
1107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1134              		.loc 1 1107 0
 1135 0042 164B     		ldr	r3, .L114
 1136 0044 CA21     		movs	r1, #202
1108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1137              		.loc 1 1108 0
 1138 0046 5322     		movs	r2, #83
1111:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 1139              		.loc 1 1111 0
 1140 0048 B5F5807F 		cmp	r5, #256
1107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1141              		.loc 1 1107 0
 1142 004c 5962     		str	r1, [r3, #36]
1108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1143              		.loc 1 1108 0
 1144 004e 5A62     		str	r2, [r3, #36]
1113:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->ALRMAR = (uint32_t)tmpreg;
 1145              		.loc 1 1113 0
 1146 0050 0CBF     		ite	eq
 1147 0052 D861     		streq	r0, [r3, #28]
1117:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->ALRMBR = (uint32_t)tmpreg;
 1148              		.loc 1 1117 0
 1149 0054 1862     		strne	r0, [r3, #32]
1121:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF;   
 1150              		.loc 1 1121 0
 1151 0056 FF20     		movs	r0, #255
 1152              	.LVL103:
 1153 0058 5862     		str	r0, [r3, #36]
 1154 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1155              	.LVL104:
 1156              	.L108:
1097:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1157              		.loc 1 1097 0
 1158 005e 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1159              	.LVL105:
 1160 0060 FFF7FEFF 		bl	RTC_ByteToBcd2
 1161              	.LVL106:
 1162 0064 0746     		mov	r7, r0
1098:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1163              		.loc 1 1098 0
 1164 0066 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1165 0068 FFF7FEFF 		bl	RTC_ByteToBcd2
 1166              	.LVL107:
 1167 006c 0646     		mov	r6, r0
1099:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 1168              		.loc 1 1099 0
 1169 006e A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1170 0070 FFF7FEFF 		bl	RTC_ByteToBcd2
 1171              	.LVL108:
 1172 0074 8046     		mov	r8, r0
1101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1173              		.loc 1 1101 0
 1174 0076 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 1175 0078 FFF7FEFF 		bl	RTC_ByteToBcd2
 1176              	.LVL109:
1097:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1177              		.loc 1 1097 0
 1178 007c 6168     		ldr	r1, [r4, #4]
 1179 007e A268     		ldr	r2, [r4, #8]
 1180 0080 41EA0203 		orr	r3, r1, r2
1100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1181              		.loc 1 1100 0
 1182 0084 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
1098:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes) << 8) | \
 1183              		.loc 1 1098 0
 1184 0086 43EA0142 		orr	r2, r3, r1, lsl #16
1099:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds)) | \
 1185              		.loc 1 1099 0
 1186 008a 42EA0803 		orr	r3, r2, r8
1100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)(RTC_AlarmStruct->RTC_AlarmTime.RTC_H12) << 16) | \
 1187              		.loc 1 1100 0
 1188 008e 43EA0741 		orr	r1, r3, r7, lsl #16
1101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmDateWeekDay) << 24) | \
 1189              		.loc 1 1101 0
 1190 0092 41EA0622 		orr	r2, r1, r6, lsl #8
1097:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours) << 16) | \
 1191              		.loc 1 1097 0
 1192 0096 42EA0060 		orr	r0, r2, r0, lsl #24
 1193              	.LVL110:
 1194 009a D2E7     		b	.L112
 1195              	.L115:
 1196              		.align	2
 1197              	.L114:
 1198 009c 00280040 		.word	1073752064
 1199              		.cfi_endproc
 1200              	.LFE70:
 1202              		.section	.text.RTC_AlarmStructInit,"ax",%progbits
 1203              		.align	1
 1204              		.global	RTC_AlarmStructInit
 1205              		.thumb
 1206              		.thumb_func
 1208              	RTC_AlarmStructInit:
 1209              	.LFB71:
1133:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1210              		.loc 1 1133 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215              	.LVL111:
1135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = RTC_H12_AM;
 1216              		.loc 1 1135 0
 1217 0000 0023     		movs	r3, #0
1142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
 1218              		.loc 1 1142 0
 1219 0002 0122     		movs	r2, #1
1135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = RTC_H12_AM;
 1220              		.loc 1 1135 0
 1221 0004 C370     		strb	r3, [r0, #3]
1136:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = 0;
 1222              		.loc 1 1136 0
 1223 0006 0370     		strb	r3, [r0, #0]
1137:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = 0;
 1224              		.loc 1 1137 0
 1225 0008 4370     		strb	r3, [r0, #1]
1138:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = 0;
 1226              		.loc 1 1138 0
 1227 000a 8370     		strb	r3, [r0, #2]
1141:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = RTC_AlarmDateWeekDaySel_Date;
 1228              		.loc 1 1141 0
 1229 000c 8360     		str	r3, [r0, #8]
1142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = 1;
 1230              		.loc 1 1142 0
 1231 000e 0273     		strb	r2, [r0, #12]
1145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = RTC_AlarmMask_None;
 1232              		.loc 1 1145 0
 1233 0010 4360     		str	r3, [r0, #4]
 1234 0012 7047     		bx	lr
 1235              		.cfi_endproc
 1236              	.LFE71:
 1238              		.section	.text.RTC_GetAlarm,"ax",%progbits
 1239              		.align	1
 1240              		.global	RTC_GetAlarm
 1241              		.thumb
 1242              		.thumb_func
 1244              	RTC_GetAlarm:
 1245              	.LFB72:
1163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1246              		.loc 1 1163 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 0, uses_anonymous_args = 0
 1250              	.LVL112:
 1251 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1252              	.LCFI10:
 1253              		.cfi_def_cfa_offset 24
 1254              		.cfi_offset 3, -24
 1255              		.cfi_offset 4, -20
 1256              		.cfi_offset 5, -16
 1257              		.cfi_offset 6, -12
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 174B     		ldr	r3, .L121
1171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Alarm == RTC_Alarm_A)
 1261              		.loc 1 1171 0
 1262 0004 B1F5807F 		cmp	r1, #256
1173:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMAR);
 1263              		.loc 1 1173 0
 1264 0008 0CBF     		ite	eq
 1265 000a DB69     		ldreq	r3, [r3, #28]
 1266              	.LVL113:
1177:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg = (uint32_t)(RTC->ALRMBR);
 1267              		.loc 1 1177 0
 1268 000c 1B6A     		ldrne	r3, [r3, #32]
 1269              	.LVL114:
1163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1270              		.loc 1 1163 0
 1271 000e 1446     		mov	r4, r2
1187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
 1272              		.loc 1 1187 0
 1273 0010 03F48001 		and	r1, r3, #4194304
 1274              	.LVL115:
 1275 0014 0D0C     		lsrs	r5, r1, #16
1181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | \
 1276              		.loc 1 1181 0
 1277 0016 C3F30542 		ubfx	r2, r3, #16, #6
 1278              	.LVL116:
1183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | \
 1279              		.loc 1 1183 0
 1280 001a C3F30627 		ubfx	r7, r3, #8, #7
1185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | \
 1281              		.loc 1 1185 0
 1282 001e 03F07F06 		and	r6, r3, #127
1189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 1283              		.loc 1 1189 0
 1284 0022 03F08041 		and	r1, r3, #1073741824
1187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_H12 = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16);
 1285              		.loc 1 1187 0
 1286 0026 E570     		strb	r5, [r4, #3]
1188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 1287              		.loc 1 1188 0
 1288 0028 C3F30565 		ubfx	r5, r3, #24, #6
1190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
 1289              		.loc 1 1190 0
 1290 002c 03F08033 		and	r3, r3, #-2139062144
 1291              	.LVL117:
1181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | \
 1292              		.loc 1 1181 0
 1293 0030 2270     		strb	r2, [r4, #0]
1183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | \
 1294              		.loc 1 1183 0
 1295 0032 6770     		strb	r7, [r4, #1]
1185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | \
 1296              		.loc 1 1185 0
 1297 0034 A670     		strb	r6, [r4, #2]
1188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 
 1298              		.loc 1 1188 0
 1299 0036 2573     		strb	r5, [r4, #12]
1189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 1300              		.loc 1 1189 0
 1301 0038 A160     		str	r1, [r4, #8]
1190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_AlarmStruct->RTC_AlarmMask = (uint32_t)(tmpreg & RTC_AlarmMask_All);
 1302              		.loc 1 1190 0
 1303 003a 6360     		str	r3, [r4, #4]
1192:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 1304              		.loc 1 1192 0
 1305 003c 78B9     		cbnz	r0, .L117
1194:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Hours = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
 1306              		.loc 1 1194 0
 1307 003e 1046     		mov	r0, r2
 1308              	.LVL118:
 1309 0040 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1310              	.LVL119:
 1311 0044 2070     		strb	r0, [r4, #0]
1196:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Minutes = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
 1312              		.loc 1 1196 0
 1313 0046 3846     		mov	r0, r7
 1314 0048 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1315              	.LVL120:
 1316 004c 6070     		strb	r0, [r4, #1]
1198:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmTime.RTC_Seconds = RTC_Bcd2ToByte(RTC_AlarmStruct-> \
 1317              		.loc 1 1198 0
 1318 004e 3046     		mov	r0, r6
 1319 0050 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1320              	.LVL121:
 1321 0054 A070     		strb	r0, [r4, #2]
1200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_AlarmStruct->RTC_AlarmDateWeekDay = RTC_Bcd2ToByte(RTC_AlarmStruct->RTC_AlarmDateWeekDay);
 1322              		.loc 1 1200 0
 1323 0056 2846     		mov	r0, r5
 1324 0058 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1325              	.LVL122:
 1326 005c 2073     		strb	r0, [r4, #12]
 1327              	.L117:
 1328 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1329              	.L122:
 1330              		.align	2
 1331              	.L121:
 1332 0060 00280040 		.word	1073752064
 1333              		.cfi_endproc
 1334              	.LFE72:
 1336              		.section	.text.RTC_AlarmCmd,"ax",%progbits
 1337              		.align	1
 1338              		.global	RTC_AlarmCmd
 1339              		.thumb
 1340              		.thumb_func
 1342              	RTC_AlarmCmd:
 1343              	.LFB73:
1217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1344              		.loc 1 1217 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 8
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348              		@ link register save eliminated.
 1349              	.LVL123:
1218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
 1350              		.loc 1 1218 0
 1351 0000 0023     		movs	r3, #0
1217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1352              		.loc 1 1217 0
 1353 0002 82B0     		sub	sp, sp, #8
 1354              	.LCFI11:
 1355              		.cfi_def_cfa_offset 8
1218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t alarmcounter = 0x00;
 1356              		.loc 1 1218 0
 1357 0004 0193     		str	r3, [sp, #4]
 1358              	.LVL124:
1227:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1359              		.loc 1 1227 0
 1360 0006 134B     		ldr	r3, .L133
 1361 0008 CA22     		movs	r2, #202
 1362 000a 5A62     		str	r2, [r3, #36]
1228:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1363              		.loc 1 1228 0
 1364 000c 5322     		movs	r2, #83
 1365 000e 5A62     		str	r2, [r3, #36]
1233:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_Alarm;
 1366              		.loc 1 1233 0
 1367 0010 9A68     		ldr	r2, [r3, #8]
1231:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
 1368              		.loc 1 1231 0
 1369 0012 19B1     		cbz	r1, .L124
1233:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_Alarm;
 1370              		.loc 1 1233 0
 1371 0014 1043     		orrs	r0, r0, r2
 1372              	.LVL125:
 1373 0016 9860     		str	r0, [r3, #8]
 1374              	.LVL126:
1235:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;    
 1375              		.loc 1 1235 0
 1376 0018 0120     		movs	r0, #1
 1377 001a 16E0     		b	.L125
 1378              	.LVL127:
 1379              	.L124:
1240:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_Alarm;
 1380              		.loc 1 1240 0
 1381 001c 22EA0002 		bic	r2, r2, r0
 1382 0020 9A60     		str	r2, [r3, #8]
1245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       alarmstatus = RTC->ISR & (RTC_Alarm >> 8);
 1383              		.loc 1 1245 0
 1384 0022 000A     		lsrs	r0, r0, #8
 1385              	.LVL128:
 1386              	.L127:
1245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       alarmstatus = RTC->ISR & (RTC_Alarm >> 8);
 1387              		.loc 1 1245 0 is_stmt 0 discriminator 1
 1388 0024 0B4B     		ldr	r3, .L133
 1389 0026 DA68     		ldr	r2, [r3, #12]
1246:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       alarmcounter++;  
 1390              		.loc 1 1246 0 is_stmt 1 discriminator 1
 1391 0028 0199     		ldr	r1, [sp, #4]
1245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       alarmstatus = RTC->ISR & (RTC_Alarm >> 8);
 1392              		.loc 1 1245 0 discriminator 1
 1393 002a 0240     		ands	r2, r2, r0
 1394              	.LVL129:
1246:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       alarmcounter++;  
 1395              		.loc 1 1246 0 discriminator 1
 1396 002c 0131     		adds	r1, r1, #1
 1397              	.LVL130:
 1398 002e 0191     		str	r1, [sp, #4]
 1399              	.LVL131:
1247:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
 1400              		.loc 1 1247 0 discriminator 1
 1401 0030 0199     		ldr	r1, [sp, #4]
 1402              	.LVL132:
 1403 0032 B1F5803F 		cmp	r1, #65536
 1404 0036 05D1     		bne	.L126
 1405              	.L128:
1249:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->ISR & (RTC_Alarm >> 8)) == RESET)
 1406              		.loc 1 1249 0
 1407 0038 DB68     		ldr	r3, [r3, #12]
 1408 003a 1842     		tst	r0, r3
1235:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;    
 1409              		.loc 1 1235 0
 1410 003c 0CBF     		ite	eq
 1411 003e 0020     		moveq	r0, #0
 1412 0040 0120     		movne	r0, #1
 1413 0042 02E0     		b	.L125
 1414              	.L126:
1247:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } while((alarmcounter != INITMODE_TIMEOUT) && (alarmstatus == 0x00));
 1415              		.loc 1 1247 0 discriminator 1
 1416 0044 002A     		cmp	r2, #0
 1417 0046 EDD0     		beq	.L127
 1418 0048 F6E7     		b	.L128
 1419              	.LVL133:
 1420              	.L125:
1260:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1421              		.loc 1 1260 0
 1422 004a 0249     		ldr	r1, .L133
 1423 004c FF22     		movs	r2, #255
 1424 004e 4A62     		str	r2, [r1, #36]
1263:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 1425              		.loc 1 1263 0
 1426 0050 02B0     		add	sp, sp, #8
 1427 0052 7047     		bx	lr
 1428              	.L134:
 1429              		.align	2
 1430              	.L133:
 1431 0054 00280040 		.word	1073752064
 1432              		.cfi_endproc
 1433              	.LFE73:
 1435              		.section	.text.RTC_WakeUpClockConfig,"ax",%progbits
 1436              		.align	1
 1437              		.global	RTC_WakeUpClockConfig
 1438              		.thumb
 1439              		.thumb_func
 1441              	RTC_WakeUpClockConfig:
 1442              	.LFB74:
1298:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1443              		.loc 1 1298 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 1447              		@ link register save eliminated.
 1448              	.LVL134:
1303:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1449              		.loc 1 1303 0
 1450 0000 074B     		ldr	r3, .L136
 1451 0002 CA22     		movs	r2, #202
1304:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1452              		.loc 1 1304 0
 1453 0004 5321     		movs	r1, #83
1303:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1454              		.loc 1 1303 0
 1455 0006 5A62     		str	r2, [r3, #36]
1304:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1456              		.loc 1 1304 0
 1457 0008 5962     		str	r1, [r3, #36]
1307:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 1458              		.loc 1 1307 0
 1459 000a 9A68     		ldr	r2, [r3, #8]
 1460 000c 22F00701 		bic	r1, r2, #7
 1461 0010 9960     		str	r1, [r3, #8]
1310:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR |= (uint32_t)RTC_WakeUpClock;
 1462              		.loc 1 1310 0
 1463 0012 9A68     		ldr	r2, [r3, #8]
 1464 0014 1043     		orrs	r0, r0, r2
 1465              	.LVL135:
 1466 0016 9860     		str	r0, [r3, #8]
1313:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1467              		.loc 1 1313 0
 1468 0018 FF20     		movs	r0, #255
 1469 001a 5862     		str	r0, [r3, #36]
 1470 001c 7047     		bx	lr
 1471              	.L137:
 1472 001e 00BF     		.align	2
 1473              	.L136:
 1474 0020 00280040 		.word	1073752064
 1475              		.cfi_endproc
 1476              	.LFE74:
 1478              		.section	.text.RTC_SetWakeUpCounter,"ax",%progbits
 1479              		.align	1
 1480              		.global	RTC_SetWakeUpCounter
 1481              		.thumb
 1482              		.thumb_func
 1484              	RTC_SetWakeUpCounter:
 1485              	.LFB75:
1325:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1486              		.loc 1 1325 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490              		@ link register save eliminated.
 1491              	.LVL136:
1330:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1492              		.loc 1 1330 0
 1493 0000 044B     		ldr	r3, .L139
 1494 0002 CA22     		movs	r2, #202
1331:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1495              		.loc 1 1331 0
 1496 0004 5321     		movs	r1, #83
1330:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1497              		.loc 1 1330 0
 1498 0006 5A62     		str	r2, [r3, #36]
1331:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1499              		.loc 1 1331 0
 1500 0008 5962     		str	r1, [r3, #36]
1334:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WUTR = (uint32_t)RTC_WakeUpCounter;
 1501              		.loc 1 1334 0
 1502 000a 5861     		str	r0, [r3, #20]
1337:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1503              		.loc 1 1337 0
 1504 000c FF20     		movs	r0, #255
 1505              	.LVL137:
 1506 000e 5862     		str	r0, [r3, #36]
 1507 0010 7047     		bx	lr
 1508              	.L140:
 1509 0012 00BF     		.align	2
 1510              	.L139:
 1511 0014 00280040 		.word	1073752064
 1512              		.cfi_endproc
 1513              	.LFE75:
 1515              		.section	.text.RTC_GetWakeUpCounter,"ax",%progbits
 1516              		.align	1
 1517              		.global	RTC_GetWakeUpCounter
 1518              		.thumb
 1519              		.thumb_func
 1521              	RTC_GetWakeUpCounter:
 1522              	.LFB76:
1346:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1523              		.loc 1 1346 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 0
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
 1527              		@ link register save eliminated.
1348:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return ((uint32_t)(RTC->WUTR & RTC_WUTR_WUT));
 1528              		.loc 1 1348 0
 1529 0000 014B     		ldr	r3, .L142
 1530 0002 5869     		ldr	r0, [r3, #20]
1349:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 1531              		.loc 1 1349 0
 1532 0004 80B2     		uxth	r0, r0
 1533 0006 7047     		bx	lr
 1534              	.L143:
 1535              		.align	2
 1536              	.L142:
 1537 0008 00280040 		.word	1073752064
 1538              		.cfi_endproc
 1539              	.LFE76:
 1541              		.section	.text.RTC_WakeUpCmd,"ax",%progbits
 1542              		.align	1
 1543              		.global	RTC_WakeUpCmd
 1544              		.thumb
 1545              		.thumb_func
 1547              	RTC_WakeUpCmd:
 1548              	.LFB77:
1358:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1549              		.loc 1 1358 0
 1550              		.cfi_startproc
 1551              		@ args = 0, pretend = 0, frame = 8
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
 1553              		@ link register save eliminated.
 1554              	.LVL138:
1367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1555              		.loc 1 1367 0
 1556 0000 1349     		ldr	r1, .L156
1359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 1557              		.loc 1 1359 0
 1558 0002 0023     		movs	r3, #0
1358:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1559              		.loc 1 1358 0
 1560 0004 82B0     		sub	sp, sp, #8
 1561              	.LCFI12:
 1562              		.cfi_def_cfa_offset 8
1359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t wutcounter = 0x00;
 1563              		.loc 1 1359 0
 1564 0006 0193     		str	r3, [sp, #4]
 1565              	.LVL139:
1367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1566              		.loc 1 1367 0
 1567 0008 CA22     		movs	r2, #202
1368:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1568              		.loc 1 1368 0
 1569 000a 5323     		movs	r3, #83
1367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1570              		.loc 1 1367 0
 1571 000c 4A62     		str	r2, [r1, #36]
1368:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1572              		.loc 1 1368 0
 1573 000e 4B62     		str	r3, [r1, #36]
1373:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_WUTE;
 1574              		.loc 1 1373 0
 1575 0010 8A68     		ldr	r2, [r1, #8]
1370:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
 1576              		.loc 1 1370 0
 1577 0012 20B1     		cbz	r0, .L145
1373:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_WUTE;
 1578              		.loc 1 1373 0
 1579 0014 42F48062 		orr	r2, r2, #1024
 1580 0018 8A60     		str	r2, [r1, #8]
 1581              	.LVL140:
1374:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;    
 1582              		.loc 1 1374 0
 1583 001a 0120     		movs	r0, #1
 1584              	.LVL141:
 1585 001c 12E0     		b	.L146
 1586              	.LVL142:
 1587              	.L145:
1379:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_WUTE;
 1588              		.loc 1 1379 0
 1589 001e 22F48060 		bic	r0, r2, #1024
 1590              	.LVL143:
 1591 0022 8860     		str	r0, [r1, #8]
 1592              	.LVL144:
 1593              	.L148:
1383:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
 1594              		.loc 1 1383 0 discriminator 1
 1595 0024 0A4B     		ldr	r3, .L156
 1596 0026 D968     		ldr	r1, [r3, #12]
1384:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutcounter++;  
 1597              		.loc 1 1384 0 discriminator 1
 1598 0028 0198     		ldr	r0, [sp, #4]
1383:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutwfstatus = RTC->ISR & RTC_ISR_WUTWF;
 1599              		.loc 1 1383 0 discriminator 1
 1600 002a 01F00402 		and	r2, r1, #4
 1601              	.LVL145:
1384:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       wutcounter++;  
 1602              		.loc 1 1384 0 discriminator 1
 1603 002e 411C     		adds	r1, r0, #1
 1604              	.LVL146:
 1605 0030 0191     		str	r1, [sp, #4]
 1606              	.LVL147:
1385:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     } while((wutcounter != INITMODE_TIMEOUT) && (wutwfstatus == 0x00));
 1607              		.loc 1 1385 0 discriminator 1
 1608 0032 0198     		ldr	r0, [sp, #4]
 1609 0034 B0F5803F 		cmp	r0, #65536
 1610 0038 01D0     		beq	.L147
 1611 003a 002A     		cmp	r2, #0
 1612 003c F2D0     		beq	.L148
 1613              	.L147:
1387:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if ((RTC->ISR & RTC_ISR_WUTWF) == RESET)
 1614              		.loc 1 1387 0
 1615 003e DB68     		ldr	r3, [r3, #12]
1374:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;    
 1616              		.loc 1 1374 0
 1617 0040 C3F38000 		ubfx	r0, r3, #2, #1
 1618              	.LVL148:
 1619              	.L146:
1398:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1620              		.loc 1 1398 0
 1621 0044 024B     		ldr	r3, .L156
 1622 0046 FF21     		movs	r1, #255
 1623 0048 5962     		str	r1, [r3, #36]
1401:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 1624              		.loc 1 1401 0
 1625 004a 02B0     		add	sp, sp, #8
 1626 004c 7047     		bx	lr
 1627              	.L157:
 1628 004e 00BF     		.align	2
 1629              	.L156:
 1630 0050 00280040 		.word	1073752064
 1631              		.cfi_endproc
 1632              	.LFE77:
 1634              		.section	.text.RTC_DayLightSavingConfig,"ax",%progbits
 1635              		.align	1
 1636              		.global	RTC_DayLightSavingConfig
 1637              		.thumb
 1638              		.thumb_func
 1640              	RTC_DayLightSavingConfig:
 1641              	.LFB78:
1435:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1642              		.loc 1 1435 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646              		@ link register save eliminated.
 1647              	.LVL149:
1441:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1648              		.loc 1 1441 0
 1649 0000 074B     		ldr	r3, .L159
 1650 0002 CA22     		movs	r2, #202
 1651 0004 5A62     		str	r2, [r3, #36]
1442:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1652              		.loc 1 1442 0
 1653 0006 5322     		movs	r2, #83
 1654 0008 5A62     		str	r2, [r3, #36]
1445:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_BCK);
 1655              		.loc 1 1445 0
 1656 000a 9A68     		ldr	r2, [r3, #8]
 1657 000c 22F48022 		bic	r2, r2, #262144
 1658 0010 9A60     		str	r2, [r3, #8]
1448:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_DayLightSaving | RTC_StoreOperation);
 1659              		.loc 1 1448 0
 1660 0012 9A68     		ldr	r2, [r3, #8]
 1661 0014 1043     		orrs	r0, r0, r2
 1662              	.LVL150:
 1663 0016 0143     		orrs	r1, r1, r0
 1664              	.LVL151:
1451:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1665              		.loc 1 1451 0
 1666 0018 FF20     		movs	r0, #255
1448:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_DayLightSaving | RTC_StoreOperation);
 1667              		.loc 1 1448 0
 1668 001a 9960     		str	r1, [r3, #8]
1451:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1669              		.loc 1 1451 0
 1670 001c 5862     		str	r0, [r3, #36]
 1671 001e 7047     		bx	lr
 1672              	.L160:
 1673              		.align	2
 1674              	.L159:
 1675 0020 00280040 		.word	1073752064
 1676              		.cfi_endproc
 1677              	.LFE78:
 1679              		.section	.text.RTC_GetStoreOperation,"ax",%progbits
 1680              		.align	1
 1681              		.global	RTC_GetStoreOperation
 1682              		.thumb
 1683              		.thumb_func
 1685              	RTC_GetStoreOperation:
 1686              	.LFB79:
1462:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1687              		.loc 1 1462 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691              		@ link register save eliminated.
1463:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return (RTC->CR & RTC_CR_BCK);
 1692              		.loc 1 1463 0
 1693 0000 024B     		ldr	r3, .L162
 1694 0002 9868     		ldr	r0, [r3, #8]
1464:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 1695              		.loc 1 1464 0
 1696 0004 00F48020 		and	r0, r0, #262144
 1697 0008 7047     		bx	lr
 1698              	.L163:
 1699 000a 00BF     		.align	2
 1700              	.L162:
 1701 000c 00280040 		.word	1073752064
 1702              		.cfi_endproc
 1703              	.LFE79:
 1705              		.section	.text.RTC_OutputConfig,"ax",%progbits
 1706              		.align	1
 1707              		.global	RTC_OutputConfig
 1708              		.thumb
 1709              		.thumb_func
 1711              	RTC_OutputConfig:
 1712              	.LFB80:
1501:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1713              		.loc 1 1501 0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 1717              		@ link register save eliminated.
 1718              	.LVL152:
1507:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1719              		.loc 1 1507 0
 1720 0000 074B     		ldr	r3, .L165
 1721 0002 CA22     		movs	r2, #202
 1722 0004 5A62     		str	r2, [r3, #36]
1508:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1723              		.loc 1 1508 0
 1724 0006 5322     		movs	r2, #83
 1725 0008 5A62     		str	r2, [r3, #36]
1511:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR &= (uint32_t)~(RTC_CR_OSEL | RTC_CR_POL);
 1726              		.loc 1 1511 0
 1727 000a 9A68     		ldr	r2, [r3, #8]
 1728 000c 22F4E002 		bic	r2, r2, #7340032
 1729 0010 9A60     		str	r2, [r3, #8]
1514:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_Output | RTC_OutputPolarity);
 1730              		.loc 1 1514 0
 1731 0012 9A68     		ldr	r2, [r3, #8]
 1732 0014 1043     		orrs	r0, r0, r2
 1733              	.LVL153:
 1734 0016 0143     		orrs	r1, r1, r0
 1735              	.LVL154:
1517:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1736              		.loc 1 1517 0
 1737 0018 FF20     		movs	r0, #255
1514:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR |= (uint32_t)(RTC_Output | RTC_OutputPolarity);
 1738              		.loc 1 1514 0
 1739 001a 9960     		str	r1, [r3, #8]
1517:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1740              		.loc 1 1517 0
 1741 001c 5862     		str	r0, [r3, #36]
 1742 001e 7047     		bx	lr
 1743              	.L166:
 1744              		.align	2
 1745              	.L165:
 1746 0020 00280040 		.word	1073752064
 1747              		.cfi_endproc
 1748              	.LFE80:
 1750              		.section	.text.RTC_CoarseCalibConfig,"ax",%progbits
 1751              		.align	1
 1752              		.global	RTC_CoarseCalibConfig
 1753              		.thumb
 1754              		.thumb_func
 1756              	RTC_CoarseCalibConfig:
 1757              	.LFB81:
1555:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1758              		.loc 1 1555 0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 0
 1761              		@ frame_needed = 0, uses_anonymous_args = 0
 1762              	.LVL155:
 1763 0000 70B5     		push	{r4, r5, r6, lr}
 1764              	.LCFI13:
 1765              		.cfi_def_cfa_offset 16
 1766              		.cfi_offset 4, -16
 1767              		.cfi_offset 5, -12
 1768              		.cfi_offset 6, -8
 1769              		.cfi_offset 14, -4
1563:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1770              		.loc 1 1563 0
 1771 0002 094C     		ldr	r4, .L170
1555:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1772              		.loc 1 1555 0
 1773 0004 0546     		mov	r5, r0
1563:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1774              		.loc 1 1563 0
 1775 0006 CA23     		movs	r3, #202
1564:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1776              		.loc 1 1564 0
 1777 0008 5320     		movs	r0, #83
 1778              	.LVL156:
1563:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1779              		.loc 1 1563 0
 1780 000a 6362     		str	r3, [r4, #36]
1564:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1781              		.loc 1 1564 0
 1782 000c 6062     		str	r0, [r4, #36]
1555:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1783              		.loc 1 1555 0
 1784 000e 0E46     		mov	r6, r1
1567:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 1785              		.loc 1 1567 0
 1786 0010 FFF7FEFF 		bl	RTC_EnterInitMode
 1787              	.LVL157:
 1788 0014 20B1     		cbz	r0, .L168
1574:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CALIBR = (uint32_t)(RTC_CalibSign | Value);
 1789              		.loc 1 1574 0
 1790 0016 3543     		orrs	r5, r5, r6
 1791              	.LVL158:
 1792 0018 A561     		str	r5, [r4, #24]
1576:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode();
 1793              		.loc 1 1576 0
 1794 001a FFF7FEFF 		bl	RTC_ExitInitMode
 1795              	.LVL159:
1578:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;
 1796              		.loc 1 1578 0
 1797 001e 0120     		movs	r0, #1
 1798              	.LVL160:
 1799              	.L168:
1582:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1800              		.loc 1 1582 0
 1801 0020 FF21     		movs	r1, #255
 1802 0022 6162     		str	r1, [r4, #36]
1585:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 1803              		.loc 1 1585 0
 1804 0024 70BD     		pop	{r4, r5, r6, pc}
 1805              	.L171:
 1806 0026 00BF     		.align	2
 1807              	.L170:
 1808 0028 00280040 		.word	1073752064
 1809              		.cfi_endproc
 1810              	.LFE81:
 1812              		.section	.text.RTC_CoarseCalibCmd,"ax",%progbits
 1813              		.align	1
 1814              		.global	RTC_CoarseCalibCmd
 1815              		.thumb
 1816              		.thumb_func
 1818              	RTC_CoarseCalibCmd:
 1819              	.LFB82:
1596:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1820              		.loc 1 1596 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              	.LVL161:
 1825 0000 38B5     		push	{r3, r4, r5, lr}
 1826              	.LCFI14:
 1827              		.cfi_def_cfa_offset 16
 1828              		.cfi_offset 3, -16
 1829              		.cfi_offset 4, -12
 1830              		.cfi_offset 5, -8
 1831              		.cfi_offset 14, -4
1603:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1832              		.loc 1 1603 0
 1833 0002 0B4C     		ldr	r4, .L178
1596:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1834              		.loc 1 1596 0
 1835 0004 0546     		mov	r5, r0
1603:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1836              		.loc 1 1603 0
 1837 0006 CA23     		movs	r3, #202
1604:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1838              		.loc 1 1604 0
 1839 0008 5320     		movs	r0, #83
 1840              	.LVL162:
1603:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1841              		.loc 1 1603 0
 1842 000a 6362     		str	r3, [r4, #36]
1604:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1843              		.loc 1 1604 0
 1844 000c 6062     		str	r0, [r4, #36]
1607:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_EnterInitMode() == ERROR)
 1845              		.loc 1 1607 0
 1846 000e FFF7FEFF 		bl	RTC_EnterInitMode
 1847              	.LVL163:
 1848 0012 50B1     		cbz	r0, .L173
1616:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR |= (uint32_t)RTC_CR_DCE;
 1849              		.loc 1 1616 0
 1850 0014 A168     		ldr	r1, [r4, #8]
1613:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     if (NewState != DISABLE)
 1851              		.loc 1 1613 0
 1852 0016 15B1     		cbz	r5, .L174
1616:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR |= (uint32_t)RTC_CR_DCE;
 1853              		.loc 1 1616 0
 1854 0018 41F08002 		orr	r2, r1, #128
 1855 001c 01E0     		b	.L177
 1856              	.L174:
1621:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****       RTC->CR &= (uint32_t)~RTC_CR_DCE;
 1857              		.loc 1 1621 0
 1858 001e 21F08002 		bic	r2, r1, #128
 1859              	.L177:
 1860 0022 A260     		str	r2, [r4, #8]
1624:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_ExitInitMode();
 1861              		.loc 1 1624 0
 1862 0024 FFF7FEFF 		bl	RTC_ExitInitMode
 1863              	.LVL164:
1626:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     status = SUCCESS;
 1864              		.loc 1 1626 0
 1865 0028 0120     		movs	r0, #1
 1866              	.LVL165:
 1867              	.L173:
1630:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1868              		.loc 1 1630 0
 1869 002a FF23     		movs	r3, #255
 1870 002c 6362     		str	r3, [r4, #36]
1633:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 1871              		.loc 1 1633 0
 1872 002e 38BD     		pop	{r3, r4, r5, pc}
 1873              	.L179:
 1874              		.align	2
 1875              	.L178:
 1876 0030 00280040 		.word	1073752064
 1877              		.cfi_endproc
 1878              	.LFE82:
 1880              		.section	.text.RTC_CalibOutputCmd,"ax",%progbits
 1881              		.align	1
 1882              		.global	RTC_CalibOutputCmd
 1883              		.thumb
 1884              		.thumb_func
 1886              	RTC_CalibOutputCmd:
 1887              	.LFB83:
1642:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1888              		.loc 1 1642 0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 1892              		@ link register save eliminated.
 1893              	.LVL166:
1647:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1894              		.loc 1 1647 0
 1895 0000 074B     		ldr	r3, .L184
 1896 0002 CA22     		movs	r2, #202
1648:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1897              		.loc 1 1648 0
 1898 0004 5321     		movs	r1, #83
1647:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1899              		.loc 1 1647 0
 1900 0006 5A62     		str	r2, [r3, #36]
1648:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1901              		.loc 1 1648 0
 1902 0008 5962     		str	r1, [r3, #36]
1653:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_COE;
 1903              		.loc 1 1653 0
 1904 000a 9A68     		ldr	r2, [r3, #8]
1650:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
 1905              		.loc 1 1650 0
 1906 000c 10B1     		cbz	r0, .L181
1653:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)RTC_CR_COE;
 1907              		.loc 1 1653 0
 1908 000e 42F40000 		orr	r0, r2, #8388608
 1909              	.LVL167:
 1910 0012 01E0     		b	.L183
 1911              	.LVL168:
 1912              	.L181:
1658:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_COE;
 1913              		.loc 1 1658 0
 1914 0014 22F40000 		bic	r0, r2, #8388608
 1915              	.LVL169:
 1916              	.L183:
1662:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1917              		.loc 1 1662 0
 1918 0018 FF21     		movs	r1, #255
1658:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~RTC_CR_COE;
 1919              		.loc 1 1658 0
 1920 001a 9860     		str	r0, [r3, #8]
1662:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1921              		.loc 1 1662 0
 1922 001c 5962     		str	r1, [r3, #36]
 1923 001e 7047     		bx	lr
 1924              	.L185:
 1925              		.align	2
 1926              	.L184:
 1927 0020 00280040 		.word	1073752064
 1928              		.cfi_endproc
 1929              	.LFE83:
 1931              		.section	.text.RTC_TimeStampCmd,"ax",%progbits
 1932              		.align	1
 1933              		.global	RTC_TimeStampCmd
 1934              		.thumb
 1935              		.thumb_func
 1937              	RTC_TimeStampCmd:
 1938              	.LFB84:
1697:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1939              		.loc 1 1697 0
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
 1943              		@ link register save eliminated.
 1944              	.LVL170:
1705:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 1945              		.loc 1 1705 0
 1946 0000 084B     		ldr	r3, .L189
 1947 0002 9A68     		ldr	r2, [r3, #8]
 1948 0004 22F40062 		bic	r2, r2, #2048
 1949 0008 22F00802 		bic	r2, r2, #8
 1950              	.LVL171:
1708:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
 1951              		.loc 1 1708 0
 1952 000c 09B1     		cbz	r1, .L187
1710:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge | RTC_CR_TSE);
 1953              		.loc 1 1710 0
 1954 000e 42F40062 		orr	r2, r2, #2048
 1955              	.LVL172:
 1956              	.L187:
1714:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     tmpreg |= (uint32_t)(RTC_TimeStampEdge);
 1957              		.loc 1 1714 0
 1958 0012 1043     		orrs	r0, r0, r2
 1959              	.LVL173:
1718:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1960              		.loc 1 1718 0
 1961 0014 CA21     		movs	r1, #202
 1962              	.LVL174:
1719:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1963              		.loc 1 1719 0
 1964 0016 5322     		movs	r2, #83
1718:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 1965              		.loc 1 1718 0
 1966 0018 5962     		str	r1, [r3, #36]
1719:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 1967              		.loc 1 1719 0
 1968 001a 5A62     		str	r2, [r3, #36]
1722:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->CR = (uint32_t)tmpreg;
 1969              		.loc 1 1722 0
 1970 001c 9860     		str	r0, [r3, #8]
1725:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 1971              		.loc 1 1725 0
 1972 001e FF20     		movs	r0, #255
 1973              	.LVL175:
 1974 0020 5862     		str	r0, [r3, #36]
 1975 0022 7047     		bx	lr
 1976              	.L190:
 1977              		.align	2
 1978              	.L189:
 1979 0024 00280040 		.word	1073752064
 1980              		.cfi_endproc
 1981              	.LFE84:
 1983              		.section	.text.RTC_GetTimeStamp,"ax",%progbits
 1984              		.align	1
 1985              		.global	RTC_GetTimeStamp
 1986              		.thumb
 1987              		.thumb_func
 1989              	RTC_GetTimeStamp:
 1990              	.LFB85:
1742:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 1991              		.loc 1 1742 0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 0
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
 1995              	.LVL176:
 1996 0000 38B5     		push	{r3, r4, r5, lr}
 1997              	.LCFI15:
 1998              		.cfi_def_cfa_offset 16
 1999              		.cfi_offset 3, -16
 2000              		.cfi_offset 4, -12
 2001              		.cfi_offset 5, -8
 2002              		.cfi_offset 14, -4
1742:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2003              		.loc 1 1742 0
 2004 0002 1546     		mov	r5, r2
1749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmptime = (uint32_t)(RTC->TSTR & RTC_TR_RESERVED_MASK);
 2005              		.loc 1 1749 0
 2006 0004 1A4A     		ldr	r2, .L193
 2007              	.LVL177:
1742:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2008              		.loc 1 1742 0
 2009 0006 0C46     		mov	r4, r1
1749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmptime = (uint32_t)(RTC->TSTR & RTC_TR_RESERVED_MASK);
 2010              		.loc 1 1749 0
 2011 0008 136B     		ldr	r3, [r2, #48]
 2012              	.LVL178:
1750:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpdate = (uint32_t)(RTC->TSDR & RTC_DR_RESERVED_MASK);
 2013              		.loc 1 1750 0
 2014 000a 526B     		ldr	r2, [r2, #52]
 2015              	.LVL179:
1753:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16);
 2016              		.loc 1 1753 0
 2017 000c C3F30541 		ubfx	r1, r3, #16, #6
 2018              	.LVL180:
 2019 0010 2170     		strb	r1, [r4, #0]
1754:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8);
 2020              		.loc 1 1754 0
 2021 0012 C3F30621 		ubfx	r1, r3, #8, #7
 2022 0016 6170     		strb	r1, [r4, #1]
1755:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 2023              		.loc 1 1755 0
 2024 0018 03F07F01 		and	r1, r3, #127
1756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 2025              		.loc 1 1756 0
 2026 001c 03F48003 		and	r3, r3, #4194304
 2027              	.LVL181:
1755:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 2028              		.loc 1 1755 0
 2029 0020 A170     		strb	r1, [r4, #2]
1756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 2030              		.loc 1 1756 0
 2031 0022 190C     		lsrs	r1, r3, #16
1759:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_Year = 0;
 2032              		.loc 1 1759 0
 2033 0024 0023     		movs	r3, #0
1756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampTimeStruct->RTC_H12 = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16);  
 2034              		.loc 1 1756 0
 2035 0026 E170     		strb	r1, [r4, #3]
1760:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 2036              		.loc 1 1760 0
 2037 0028 C2F30421 		ubfx	r1, r2, #8, #5
1759:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_Year = 0;
 2038              		.loc 1 1759 0
 2039 002c EB70     		strb	r3, [r5, #3]
1761:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 2040              		.loc 1 1761 0
 2041 002e 02F03F03 		and	r3, r2, #63
1762:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
 2042              		.loc 1 1762 0
 2043 0032 C2F34232 		ubfx	r2, r2, #13, #3
 2044              	.LVL182:
1760:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8);
 2045              		.loc 1 1760 0
 2046 0036 6970     		strb	r1, [r5, #1]
1761:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 2047              		.loc 1 1761 0
 2048 0038 AB70     		strb	r3, [r5, #2]
1762:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC_StampDateStruct->RTC_WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13);
 2049              		.loc 1 1762 0
 2050 003a 2A70     		strb	r2, [r5, #0]
1765:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_Format == RTC_Format_BIN)
 2051              		.loc 1 1765 0
 2052 003c B8B9     		cbnz	r0, .L191
1768:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampTimeStruct->RTC_Hours = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Hours);
 2053              		.loc 1 1768 0
 2054 003e 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2055              	.LVL183:
 2056 0040 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2057              	.LVL184:
 2058 0044 2070     		strb	r0, [r4, #0]
1769:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampTimeStruct->RTC_Minutes = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Minutes);
 2059              		.loc 1 1769 0
 2060 0046 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2061 0048 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2062              	.LVL185:
 2063 004c 6070     		strb	r0, [r4, #1]
1770:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampTimeStruct->RTC_Seconds = (uint8_t)RTC_Bcd2ToByte(RTC_StampTimeStruct->RTC_Seconds);
 2064              		.loc 1 1770 0
 2065 004e A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 2066 0050 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2067              	.LVL186:
 2068 0054 A070     		strb	r0, [r4, #2]
1773:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampDateStruct->RTC_Month = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Month);
 2069              		.loc 1 1773 0
 2070 0056 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 2071 0058 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2072              	.LVL187:
 2073 005c 6870     		strb	r0, [r5, #1]
1774:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampDateStruct->RTC_Date = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_Date);
 2074              		.loc 1 1774 0
 2075 005e A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 2076 0060 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2077              	.LVL188:
 2078 0064 A870     		strb	r0, [r5, #2]
1775:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC_StampDateStruct->RTC_WeekDay = (uint8_t)RTC_Bcd2ToByte(RTC_StampDateStruct->RTC_WeekDay);
 2079              		.loc 1 1775 0
 2080 0066 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 2081 0068 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2082              	.LVL189:
 2083 006c 2870     		strb	r0, [r5, #0]
 2084              	.L191:
 2085 006e 38BD     		pop	{r3, r4, r5, pc}
 2086              	.L194:
 2087              		.align	2
 2088              	.L193:
 2089 0070 00280040 		.word	1073752064
 2090              		.cfi_endproc
 2091              	.LFE85:
 2093              		.section	.text.RTC_TamperTriggerConfig,"ax",%progbits
 2094              		.align	1
 2095              		.global	RTC_TamperTriggerConfig
 2096              		.thumb
 2097              		.thumb_func
 2099              	RTC_TamperTriggerConfig:
 2100              	.LFB86:
1807:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2101              		.loc 1 1807 0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 0, uses_anonymous_args = 0
 2105              		@ link register save eliminated.
 2106              	.LVL190:
 2107 0000 044B     		ldr	r3, .L199
 2108 0002 4000     		lsls	r0, r0, #1
 2109              	.LVL191:
1815:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR &= (uint32_t)((uint32_t)~(RTC_Tamper << 1));	
 2110              		.loc 1 1815 0
 2111 0004 1A6C     		ldr	r2, [r3, #64]
1812:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (RTC_TamperTrigger == RTC_TamperTrigger_RisingEdge)
 2112              		.loc 1 1812 0
 2113 0006 11B9     		cbnz	r1, .L196
1815:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR &= (uint32_t)((uint32_t)~(RTC_Tamper << 1));	
 2114              		.loc 1 1815 0
 2115 0008 22EA0000 		bic	r0, r2, r0
 2116 000c 00E0     		b	.L198
 2117              	.L196:
1820:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_Tamper << 1);  
 2118              		.loc 1 1820 0
 2119 000e 1043     		orrs	r0, r0, r2
 2120              	.L198:
 2121 0010 1864     		str	r0, [r3, #64]
 2122 0012 7047     		bx	lr
 2123              	.L200:
 2124              		.align	2
 2125              	.L199:
 2126 0014 00280040 		.word	1073752064
 2127              		.cfi_endproc
 2128              	.LFE86:
 2130              		.section	.text.RTC_TamperCmd,"ax",%progbits
 2131              		.align	1
 2132              		.global	RTC_TamperCmd
 2133              		.thumb
 2134              		.thumb_func
 2136              	RTC_TamperCmd:
 2137              	.LFB87:
1833:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2138              		.loc 1 1833 0
 2139              		.cfi_startproc
 2140              		@ args = 0, pretend = 0, frame = 0
 2141              		@ frame_needed = 0, uses_anonymous_args = 0
 2142              		@ link register save eliminated.
 2143              	.LVL192:
 2144 0000 044B     		ldr	r3, .L205
1841:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_Tamper;
 2145              		.loc 1 1841 0
 2146 0002 1A6C     		ldr	r2, [r3, #64]
1838:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
 2147              		.loc 1 1838 0
 2148 0004 09B1     		cbz	r1, .L202
1841:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR |= (uint32_t)RTC_Tamper;
 2149              		.loc 1 1841 0
 2150 0006 1043     		orrs	r0, r0, r2
 2151              	.LVL193:
 2152 0008 01E0     		b	.L204
 2153              	.LVL194:
 2154              	.L202:
1846:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~RTC_Tamper;    
 2155              		.loc 1 1846 0
 2156 000a 22EA0000 		bic	r0, r2, r0
 2157              	.LVL195:
 2158              	.L204:
 2159 000e 1864     		str	r0, [r3, #64]
 2160 0010 7047     		bx	lr
 2161              	.L206:
 2162 0012 00BF     		.align	2
 2163              	.L205:
 2164 0014 00280040 		.word	1073752064
 2165              		.cfi_endproc
 2166              	.LFE87:
 2168              		.section	.text.RTC_WriteBackupRegister,"ax",%progbits
 2169              		.align	1
 2170              		.global	RTC_WriteBackupRegister
 2171              		.thumb
 2172              		.thumb_func
 2174              	RTC_WriteBackupRegister:
 2175              	.LFB88:
1875:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2176              		.loc 1 1875 0
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 8
 2179              		@ frame_needed = 0, uses_anonymous_args = 0
 2180              		@ link register save eliminated.
 2181              	.LVL196:
1881:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp = RTC_BASE + 0x50;
 2182              		.loc 1 1881 0
 2183 0000 064A     		ldr	r2, .L208
1875:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2184              		.loc 1 1875 0
 2185 0002 82B0     		sub	sp, sp, #8
 2186              	.LCFI16:
 2187              		.cfi_def_cfa_offset 8
1876:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t tmp = 0;
 2188              		.loc 1 1876 0
 2189 0004 0023     		movs	r3, #0
 2190 0006 0193     		str	r3, [sp, #4]
 2191              	.LVL197:
1881:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp = RTC_BASE + 0x50;
 2192              		.loc 1 1881 0
 2193 0008 0192     		str	r2, [sp, #4]
1882:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 2194              		.loc 1 1882 0
 2195 000a 019B     		ldr	r3, [sp, #4]
 2196 000c 03EB8000 		add	r0, r3, r0, lsl #2
 2197              	.LVL198:
 2198 0010 0190     		str	r0, [sp, #4]
 2199              	.LVL199:
1885:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 2200              		.loc 1 1885 0
 2201 0012 019A     		ldr	r2, [sp, #4]
 2202 0014 1160     		str	r1, [r2, #0]
1886:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 2203              		.loc 1 1886 0
 2204 0016 02B0     		add	sp, sp, #8
 2205 0018 7047     		bx	lr
 2206              	.L209:
 2207 001a 00BF     		.align	2
 2208              	.L208:
 2209 001c 50280040 		.word	1073752144
 2210              		.cfi_endproc
 2211              	.LFE88:
 2213              		.section	.text.RTC_ReadBackupRegister,"ax",%progbits
 2214              		.align	1
 2215              		.global	RTC_ReadBackupRegister
 2216              		.thumb
 2217              		.thumb_func
 2219              	RTC_ReadBackupRegister:
 2220              	.LFB89:
1896:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2221              		.loc 1 1896 0
 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 8
 2224              		@ frame_needed = 0, uses_anonymous_args = 0
 2225              		@ link register save eliminated.
 2226              	.LVL200:
1902:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp = RTC_BASE + 0x50;
 2227              		.loc 1 1902 0
 2228 0000 0649     		ldr	r1, .L211
1896:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2229              		.loc 1 1896 0
 2230 0002 82B0     		sub	sp, sp, #8
 2231              	.LCFI17:
 2232              		.cfi_def_cfa_offset 8
1897:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   __IO uint32_t tmp = 0;
 2233              		.loc 1 1897 0
 2234 0004 0023     		movs	r3, #0
 2235 0006 0193     		str	r3, [sp, #4]
 2236              	.LVL201:
1902:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp = RTC_BASE + 0x50;
 2237              		.loc 1 1902 0
 2238 0008 0191     		str	r1, [sp, #4]
1903:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmp += (RTC_BKP_DR * 4);
 2239              		.loc 1 1903 0
 2240 000a 019A     		ldr	r2, [sp, #4]
 2241 000c 02EB8000 		add	r0, r2, r0, lsl #2
 2242              	.LVL202:
 2243 0010 0190     		str	r0, [sp, #4]
 2244              	.LVL203:
1906:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   return (*(__IO uint32_t *)tmp);
 2245              		.loc 1 1906 0
 2246 0012 019B     		ldr	r3, [sp, #4]
 2247 0014 1868     		ldr	r0, [r3, #0]
 2248              	.LVL204:
1907:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 2249              		.loc 1 1907 0
 2250 0016 02B0     		add	sp, sp, #8
 2251 0018 7047     		bx	lr
 2252              	.L212:
 2253 001a 00BF     		.align	2
 2254              	.L211:
 2255 001c 50280040 		.word	1073752144
 2256              		.cfi_endproc
 2257              	.LFE89:
 2259              		.section	.text.RTC_TamperPinSelection,"ax",%progbits
 2260              		.align	1
 2261              		.global	RTC_TamperPinSelection
 2262              		.thumb
 2263              		.thumb_func
 2265              	RTC_TamperPinSelection:
 2266              	.LFB90:
1936:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2267              		.loc 1 1936 0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 0, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
 2272              	.LVL205:
1940:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TAMPINSEL);
 2273              		.loc 1 1940 0
 2274 0000 044B     		ldr	r3, .L214
 2275 0002 1A6C     		ldr	r2, [r3, #64]
 2276 0004 22F48031 		bic	r1, r2, #65536
 2277 0008 1964     		str	r1, [r3, #64]
1941:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TamperPin);  
 2278              		.loc 1 1941 0
 2279 000a 1A6C     		ldr	r2, [r3, #64]
 2280 000c 1043     		orrs	r0, r0, r2
 2281              	.LVL206:
 2282 000e 1864     		str	r0, [r3, #64]
 2283 0010 7047     		bx	lr
 2284              	.L215:
 2285 0012 00BF     		.align	2
 2286              	.L214:
 2287 0014 00280040 		.word	1073752064
 2288              		.cfi_endproc
 2289              	.LFE90:
 2291              		.section	.text.RTC_TimeStampPinSelection,"ax",%progbits
 2292              		.align	1
 2293              		.global	RTC_TimeStampPinSelection
 2294              		.thumb
 2295              		.thumb_func
 2297              	RTC_TimeStampPinSelection:
 2298              	.LFB91:
1953:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2299              		.loc 1 1953 0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 0
 2302              		@ frame_needed = 0, uses_anonymous_args = 0
 2303              		@ link register save eliminated.
 2304              	.LVL207:
1957:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_TSINSEL);
 2305              		.loc 1 1957 0
 2306 0000 044B     		ldr	r3, .L217
 2307 0002 1A6C     		ldr	r2, [r3, #64]
 2308 0004 22F40031 		bic	r1, r2, #131072
 2309 0008 1964     		str	r1, [r3, #64]
1958:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_TimeStampPin);  
 2310              		.loc 1 1958 0
 2311 000a 1A6C     		ldr	r2, [r3, #64]
 2312 000c 1043     		orrs	r0, r0, r2
 2313              	.LVL208:
 2314 000e 1864     		str	r0, [r3, #64]
 2315 0010 7047     		bx	lr
 2316              	.L218:
 2317 0012 00BF     		.align	2
 2318              	.L217:
 2319 0014 00280040 		.word	1073752064
 2320              		.cfi_endproc
 2321              	.LFE91:
 2323              		.section	.text.RTC_OutputTypeConfig,"ax",%progbits
 2324              		.align	1
 2325              		.global	RTC_OutputTypeConfig
 2326              		.thumb
 2327              		.thumb_func
 2329              	RTC_OutputTypeConfig:
 2330              	.LFB92:
1972:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2331              		.loc 1 1972 0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 0
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 2335              		@ link register save eliminated.
 2336              	.LVL209:
1976:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR &= (uint32_t)~(RTC_TAFCR_ALARMOUTTYPE);
 2337              		.loc 1 1976 0
 2338 0000 044B     		ldr	r3, .L220
 2339 0002 1A6C     		ldr	r2, [r3, #64]
 2340 0004 22F48021 		bic	r1, r2, #262144
 2341 0008 1964     		str	r1, [r3, #64]
1977:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->TAFCR |= (uint32_t)(RTC_OutputType);  
 2342              		.loc 1 1977 0
 2343 000a 1A6C     		ldr	r2, [r3, #64]
 2344 000c 1043     		orrs	r0, r0, r2
 2345              	.LVL210:
 2346 000e 1864     		str	r0, [r3, #64]
 2347 0010 7047     		bx	lr
 2348              	.L221:
 2349 0012 00BF     		.align	2
 2350              	.L220:
 2351 0014 00280040 		.word	1073752064
 2352              		.cfi_endproc
 2353              	.LFE92:
 2355              		.section	.text.RTC_ITConfig,"ax",%progbits
 2356              		.align	1
 2357              		.global	RTC_ITConfig
 2358              		.thumb
 2359              		.thumb_func
 2361              	RTC_ITConfig:
 2362              	.LFB93:
2043:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2363              		.loc 1 2043 0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367              		@ link register save eliminated.
 2368              	.LVL211:
2049:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xCA;
 2369              		.loc 1 2049 0
 2370 0000 0E4B     		ldr	r3, .L226
 2371 0002 CA22     		movs	r2, #202
 2372 0004 5A62     		str	r2, [r3, #36]
2050:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0x53;
 2373              		.loc 1 2050 0
 2374 0006 5322     		movs	r2, #83
 2375 0008 5A62     		str	r2, [r3, #36]
 2376 000a 20F00402 		bic	r2, r0, #4
2052:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if (NewState != DISABLE)
 2377              		.loc 1 2052 0
 2378 000e 39B1     		cbz	r1, .L223
2055:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR |= (uint32_t)(RTC_IT & ~RTC_TAFCR_TAMPIE);
 2379              		.loc 1 2055 0
 2380 0010 9968     		ldr	r1, [r3, #8]
 2381              	.LVL212:
 2382 0012 0A43     		orrs	r2, r2, r1
 2383 0014 9A60     		str	r2, [r3, #8]
2057:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR |= (uint32_t)(RTC_IT & RTC_TAFCR_TAMPIE);
 2384              		.loc 1 2057 0
 2385 0016 1A6C     		ldr	r2, [r3, #64]
 2386 0018 00F00401 		and	r1, r0, #4
 2387 001c 1143     		orrs	r1, r1, r2
 2388 001e 08E0     		b	.L225
 2389              	.LVL213:
 2390              	.L223:
2062:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~(RTC_IT & (uint32_t)~RTC_TAFCR_TAMPIE);
 2391              		.loc 1 2062 0
 2392 0020 9968     		ldr	r1, [r3, #8]
 2393              	.LVL214:
2064:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~(RTC_IT & RTC_TAFCR_TAMPIE);
 2394              		.loc 1 2064 0
 2395 0022 00F00400 		and	r0, r0, #4
 2396              	.LVL215:
2062:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->CR &= (uint32_t)~(RTC_IT & (uint32_t)~RTC_TAFCR_TAMPIE);
 2397              		.loc 1 2062 0
 2398 0026 21EA0202 		bic	r2, r1, r2
 2399 002a 9A60     		str	r2, [r3, #8]
2064:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     RTC->TAFCR &= (uint32_t)~(RTC_IT & RTC_TAFCR_TAMPIE);
 2400              		.loc 1 2064 0
 2401 002c 196C     		ldr	r1, [r3, #64]
 2402 002e 21EA0001 		bic	r1, r1, r0
 2403              	.L225:
 2404 0032 1964     		str	r1, [r3, #64]
2067:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->WPR = 0xFF; 
 2405              		.loc 1 2067 0
 2406 0034 014B     		ldr	r3, .L226
 2407 0036 FF20     		movs	r0, #255
 2408 0038 5862     		str	r0, [r3, #36]
 2409 003a 7047     		bx	lr
 2410              	.L227:
 2411              		.align	2
 2412              	.L226:
 2413 003c 00280040 		.word	1073752064
 2414              		.cfi_endproc
 2415              	.LFE93:
 2417              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 2418              		.align	1
 2419              		.global	RTC_GetFlagStatus
 2420              		.thumb
 2421              		.thumb_func
 2423              	RTC_GetFlagStatus:
 2424              	.LFB94:
2089:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2425              		.loc 1 2089 0
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 0
 2428              		@ frame_needed = 0, uses_anonymous_args = 0
 2429              		@ link register save eliminated.
 2430              	.LVL216:
2097:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->ISR & RTC_FLAGS_MASK);
 2431              		.loc 1 2097 0
 2432 0000 044B     		ldr	r3, .L229
 2433 0002 43F67771 		movw	r1, #16247
 2434 0006 DA68     		ldr	r2, [r3, #12]
 2435              	.LVL217:
 2436 0008 1140     		ands	r1, r1, r2
 2437              	.LVL218:
2100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((tmpreg & RTC_FLAG) != (uint32_t)RESET)
 2438              		.loc 1 2100 0
 2439 000a 0142     		tst	r1, r0
2109:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 2440              		.loc 1 2109 0
 2441 000c 0CBF     		ite	eq
 2442 000e 0020     		moveq	r0, #0
 2443 0010 0120     		movne	r0, #1
 2444              	.LVL219:
 2445 0012 7047     		bx	lr
 2446              	.L230:
 2447              		.align	2
 2448              	.L229:
 2449 0014 00280040 		.word	1073752064
 2450              		.cfi_endproc
 2451              	.LFE94:
 2453              		.section	.text.RTC_ClearFlag,"ax",%progbits
 2454              		.align	1
 2455              		.global	RTC_ClearFlag
 2456              		.thumb
 2457              		.thumb_func
 2459              	RTC_ClearFlag:
 2460              	.LFB95:
2125:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2461              		.loc 1 2125 0
 2462              		.cfi_startproc
 2463              		@ args = 0, pretend = 0, frame = 0
 2464              		@ frame_needed = 0, uses_anonymous_args = 0
 2465              		@ link register save eliminated.
 2466              	.LVL220:
2130:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((RTC_FLAG | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR &
 2467              		.loc 1 2130 0
 2468 0000 054B     		ldr	r3, .L232
 2469 0002 80B2     		uxth	r0, r0
 2470              	.LVL221:
 2471 0004 DA68     		ldr	r2, [r3, #12]
 2472 0006 40F08001 		orr	r1, r0, #128
 2473 000a 02F08002 		and	r2, r2, #128
 2474 000e 62EA0100 		orn	r0, r2, r1
 2475 0012 D860     		str	r0, [r3, #12]
 2476 0014 7047     		bx	lr
 2477              	.L233:
 2478 0016 00BF     		.align	2
 2479              	.L232:
 2480 0018 00280040 		.word	1073752064
 2481              		.cfi_endproc
 2482              	.LFE95:
 2484              		.section	.text.RTC_GetITStatus,"ax",%progbits
 2485              		.align	1
 2486              		.global	RTC_GetITStatus
 2487              		.thumb
 2488              		.thumb_func
 2490              	RTC_GetITStatus:
 2491              	.LFB96:
2145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2492              		.loc 1 2145 0
 2493              		.cfi_startproc
 2494              		@ args = 0, pretend = 0, frame = 0
 2495              		@ frame_needed = 0, uses_anonymous_args = 0
 2496              	.LVL222:
2153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TAFCR & (RTC_TAFCR_TAMPIE));
 2497              		.loc 1 2153 0
 2498 0000 0A4B     		ldr	r3, .L237
2145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2499              		.loc 1 2145 0
 2500 0002 10B5     		push	{r4, lr}
 2501              	.LCFI18:
 2502              		.cfi_def_cfa_offset 8
 2503              		.cfi_offset 4, -8
 2504              		.cfi_offset 14, -4
2153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TAFCR & (RTC_TAFCR_TAMPIE));
 2505              		.loc 1 2153 0
 2506 0004 1A6C     		ldr	r2, [r3, #64]
 2507              	.LVL223:
2156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   enablestatus = (uint32_t)((RTC->CR & RTC_IT) | (tmpreg & (RTC_IT >> 15)));
 2508              		.loc 1 2156 0
 2509 0006 9C68     		ldr	r4, [r3, #8]
 2510              	.LVL224:
2159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)((RTC->ISR & (uint32_t)(RTC_IT >> 4)));
 2511              		.loc 1 2159 0
 2512 0008 D968     		ldr	r1, [r3, #12]
 2513              	.LVL225:
2153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)(RTC->TAFCR & (RTC_TAFCR_TAMPIE));
 2514              		.loc 1 2153 0
 2515 000a 02F00403 		and	r3, r2, #4
2156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   enablestatus = (uint32_t)((RTC->CR & RTC_IT) | (tmpreg & (RTC_IT >> 15)));
 2516              		.loc 1 2156 0
 2517 000e 03EAD032 		and	r2, r3, r0, lsr #15
 2518              	.LVL226:
 2519 0012 00EA0403 		and	r3, r0, r4
2162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((enablestatus != (uint32_t)RESET) && ((tmpreg & 0x0000FFFF) != (uint32_t)RESET))
 2520              		.loc 1 2162 0
 2521 0016 1A43     		orrs	r2, r2, r3
 2522 0018 06D0     		beq	.L236
2159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   tmpreg = (uint32_t)((RTC->ISR & (uint32_t)(RTC_IT >> 4)));
 2523              		.loc 1 2159 0 discriminator 1
 2524 001a 89B2     		uxth	r1, r1
 2525              	.LVL227:
2162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   if ((enablestatus != (uint32_t)RESET) && ((tmpreg & 0x0000FFFF) != (uint32_t)RESET))
 2526              		.loc 1 2162 0 discriminator 1
 2527 001c 11EA1013 		ands	r3, r1, r0, lsr #4
2164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     bitstatus = SET;
 2528              		.loc 1 2164 0 discriminator 1
 2529 0020 0CBF     		ite	eq
 2530 0022 0020     		moveq	r0, #0
 2531 0024 0120     		movne	r0, #1
 2532              	.LVL228:
 2533 0026 10BD     		pop	{r4, pc}
 2534              	.LVL229:
 2535              	.L236:
2168:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****     bitstatus = RESET;
 2536              		.loc 1 2168 0
 2537 0028 1046     		mov	r0, r2
 2538              	.LVL230:
2171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** }
 2539              		.loc 1 2171 0
 2540 002a 10BD     		pop	{r4, pc}
 2541              	.L238:
 2542              		.align	2
 2543              	.L237:
 2544 002c 00280040 		.word	1073752064
 2545              		.cfi_endproc
 2546              	.LFE96:
 2548              		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 2549              		.align	1
 2550              		.global	RTC_ClearITPendingBit
 2551              		.thumb
 2552              		.thumb_func
 2554              	RTC_ClearITPendingBit:
 2555              	.LFB97:
2185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c **** {
 2556              		.loc 1 2185 0
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 0
 2559              		@ frame_needed = 0, uses_anonymous_args = 0
 2560              		@ link register save eliminated.
 2561              	.LVL231:
2195:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rtc.c ****   RTC->ISR = (uint32_t)((uint32_t)(~((tmpreg | RTC_ISR_INIT)& 0x0000FFFF) | (uint32_t)(RTC->ISR & R
 2562              		.loc 1 2195 0
 2563 0000 054B     		ldr	r3, .L240
 2564 0002 C0F30F10 		ubfx	r0, r0, #4, #16
 2565              	.LVL232:
 2566 0006 DA68     		ldr	r2, [r3, #12]
 2567 0008 40F08001 		orr	r1, r0, #128
 2568 000c 02F08002 		and	r2, r2, #128
 2569 0010 62EA0100 		orn	r0, r2, r1
 2570 0014 D860     		str	r0, [r3, #12]
 2571 0016 7047     		bx	lr
 2572              	.L241:
 2573              		.align	2
 2574              	.L240:
 2575 0018 00280040 		.word	1073752064
 2576              		.cfi_endproc
 2577              	.LFE97:
 2579              		.text
 2580              	.Letext0:
 2581              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q1\\bin\\../lib/gcc/arm-none-eab
 2582              		.file 3 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx.h"
 2583              		.file 4 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx_rtc.h"
 2584              		.file 5 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_rtc.c
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:19     .text.RTC_ByteToBcd2:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:23     .text.RTC_ByteToBcd2:00000000 RTC_ByteToBcd2
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:64     .text.RTC_Bcd2ToByte:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:68     .text.RTC_Bcd2ToByte:00000000 RTC_Bcd2ToByte
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:90     .text.RTC_StructInit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:95     .text.RTC_StructInit:00000000 RTC_StructInit
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:113    .text.RTC_WriteProtectionCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:118    .text.RTC_WriteProtectionCmd:00000000 RTC_WriteProtectionCmd
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:147    .text.RTC_WriteProtectionCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:152    .text.RTC_EnterInitMode:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:157    .text.RTC_EnterInitMode:00000000 RTC_EnterInitMode
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:226    .text.RTC_EnterInitMode:0000003c $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:231    .text.RTC_ExitInitMode:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:236    .text.RTC_ExitInitMode:00000000 RTC_ExitInitMode
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:252    .text.RTC_ExitInitMode:0000000c $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:257    .text.RTC_Init:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:262    .text.RTC_Init:00000000 RTC_Init
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:326    .text.RTC_Init:00000044 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:331    .text.RTC_WaitForSynchro:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:336    .text.RTC_WaitForSynchro:00000000 RTC_WaitForSynchro
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:403    .text.RTC_WaitForSynchro:00000040 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:408    .text.RTC_DeInit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:413    .text.RTC_DeInit:00000000 RTC_DeInit
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:533    .text.RTC_DeInit:00000078 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:539    .text.RTC_RefClockCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:544    .text.RTC_RefClockCmd:00000000 RTC_RefClockCmd
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:602    .text.RTC_RefClockCmd:00000030 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:607    .text.RTC_SetTime:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:612    .text.RTC_SetTime:00000000 RTC_SetTime
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:734    .text.RTC_SetTime:00000088 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:739    .text.RTC_TimeStructInit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:744    .text.RTC_TimeStructInit:00000000 RTC_TimeStructInit
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:766    .text.RTC_GetTime:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:771    .text.RTC_GetTime:00000000 RTC_GetTime
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:835    .text.RTC_GetTime:00000040 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:840    .text.RTC_SetDate:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:845    .text.RTC_SetDate:00000000 RTC_SetDate
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:960    .text.RTC_SetDate:00000084 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:965    .text.RTC_DateStructInit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:970    .text.RTC_DateStructInit:00000000 RTC_DateStructInit
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:995    .text.RTC_GetDate:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1000   .text.RTC_GetDate:00000000 RTC_GetDate
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1061   .text.RTC_GetDate:0000003c $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1066   .text.RTC_SetAlarm:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1071   .text.RTC_SetAlarm:00000000 RTC_SetAlarm
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1198   .text.RTC_SetAlarm:0000009c $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1203   .text.RTC_AlarmStructInit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1208   .text.RTC_AlarmStructInit:00000000 RTC_AlarmStructInit
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1239   .text.RTC_GetAlarm:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1244   .text.RTC_GetAlarm:00000000 RTC_GetAlarm
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1332   .text.RTC_GetAlarm:00000060 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1337   .text.RTC_AlarmCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1342   .text.RTC_AlarmCmd:00000000 RTC_AlarmCmd
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1431   .text.RTC_AlarmCmd:00000054 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1436   .text.RTC_WakeUpClockConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1441   .text.RTC_WakeUpClockConfig:00000000 RTC_WakeUpClockConfig
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1474   .text.RTC_WakeUpClockConfig:00000020 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1479   .text.RTC_SetWakeUpCounter:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1484   .text.RTC_SetWakeUpCounter:00000000 RTC_SetWakeUpCounter
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1511   .text.RTC_SetWakeUpCounter:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1516   .text.RTC_GetWakeUpCounter:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1521   .text.RTC_GetWakeUpCounter:00000000 RTC_GetWakeUpCounter
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1537   .text.RTC_GetWakeUpCounter:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1542   .text.RTC_WakeUpCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1547   .text.RTC_WakeUpCmd:00000000 RTC_WakeUpCmd
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1630   .text.RTC_WakeUpCmd:00000050 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1635   .text.RTC_DayLightSavingConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1640   .text.RTC_DayLightSavingConfig:00000000 RTC_DayLightSavingConfig
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1675   .text.RTC_DayLightSavingConfig:00000020 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1680   .text.RTC_GetStoreOperation:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1685   .text.RTC_GetStoreOperation:00000000 RTC_GetStoreOperation
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1701   .text.RTC_GetStoreOperation:0000000c $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1706   .text.RTC_OutputConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1711   .text.RTC_OutputConfig:00000000 RTC_OutputConfig
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1746   .text.RTC_OutputConfig:00000020 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1751   .text.RTC_CoarseCalibConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1756   .text.RTC_CoarseCalibConfig:00000000 RTC_CoarseCalibConfig
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1808   .text.RTC_CoarseCalibConfig:00000028 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1813   .text.RTC_CoarseCalibCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1818   .text.RTC_CoarseCalibCmd:00000000 RTC_CoarseCalibCmd
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1876   .text.RTC_CoarseCalibCmd:00000030 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1881   .text.RTC_CalibOutputCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1886   .text.RTC_CalibOutputCmd:00000000 RTC_CalibOutputCmd
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1927   .text.RTC_CalibOutputCmd:00000020 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1932   .text.RTC_TimeStampCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1937   .text.RTC_TimeStampCmd:00000000 RTC_TimeStampCmd
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1979   .text.RTC_TimeStampCmd:00000024 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1984   .text.RTC_GetTimeStamp:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:1989   .text.RTC_GetTimeStamp:00000000 RTC_GetTimeStamp
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2089   .text.RTC_GetTimeStamp:00000070 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2094   .text.RTC_TamperTriggerConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2099   .text.RTC_TamperTriggerConfig:00000000 RTC_TamperTriggerConfig
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2126   .text.RTC_TamperTriggerConfig:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2131   .text.RTC_TamperCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2136   .text.RTC_TamperCmd:00000000 RTC_TamperCmd
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2164   .text.RTC_TamperCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2169   .text.RTC_WriteBackupRegister:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2174   .text.RTC_WriteBackupRegister:00000000 RTC_WriteBackupRegister
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2209   .text.RTC_WriteBackupRegister:0000001c $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2214   .text.RTC_ReadBackupRegister:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2219   .text.RTC_ReadBackupRegister:00000000 RTC_ReadBackupRegister
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2255   .text.RTC_ReadBackupRegister:0000001c $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2260   .text.RTC_TamperPinSelection:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2265   .text.RTC_TamperPinSelection:00000000 RTC_TamperPinSelection
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2287   .text.RTC_TamperPinSelection:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2292   .text.RTC_TimeStampPinSelection:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2297   .text.RTC_TimeStampPinSelection:00000000 RTC_TimeStampPinSelection
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2319   .text.RTC_TimeStampPinSelection:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2324   .text.RTC_OutputTypeConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2329   .text.RTC_OutputTypeConfig:00000000 RTC_OutputTypeConfig
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2351   .text.RTC_OutputTypeConfig:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2356   .text.RTC_ITConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2361   .text.RTC_ITConfig:00000000 RTC_ITConfig
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2413   .text.RTC_ITConfig:0000003c $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2418   .text.RTC_GetFlagStatus:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2423   .text.RTC_GetFlagStatus:00000000 RTC_GetFlagStatus
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2449   .text.RTC_GetFlagStatus:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2454   .text.RTC_ClearFlag:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2459   .text.RTC_ClearFlag:00000000 RTC_ClearFlag
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2480   .text.RTC_ClearFlag:00000018 $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2485   .text.RTC_GetITStatus:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2490   .text.RTC_GetITStatus:00000000 RTC_GetITStatus
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2544   .text.RTC_GetITStatus:0000002c $d
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2549   .text.RTC_ClearITPendingBit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2554   .text.RTC_ClearITPendingBit:00000000 RTC_ClearITPendingBit
C:\Users\STINA\AppData\Local\Temp\ccSXAc40.s:2575   .text.RTC_ClearITPendingBit:00000018 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
