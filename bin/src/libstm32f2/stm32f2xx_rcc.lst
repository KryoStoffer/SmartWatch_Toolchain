   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f2xx_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RCC_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	RCC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	RCC_DeInit:
  25              	.LFB56:
  26              		.file 1 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx_rcc.c"
   1:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
   2:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   ******************************************************************************
   3:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @file    stm32f2xx_rcc.c
   4:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @author  MCD Application Team
   5:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @version V1.1.2
   6:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @date    05-March-2012 
   7:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          functionalities of the Reset and clock control (RCC) peripheral:           
   9:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - Internal/external clocks, PLL, CSS and MCO configuration
  10:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - System, AHB and APB busses clocks configuration
  11:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - Peripheral clocks configuration
  12:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - Interrupts and flags management
  13:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *
  14:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *  @verbatim
  15:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *               
  16:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          ===================================================================
  17:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                               RCC specific features
  18:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          ===================================================================
  19:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *    
  20:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          After reset the device is running from Internal High Speed oscillator 
  21:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache 
  22:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          and I-Cache are disabled, and all peripherals are off except internal
  23:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          SRAM, Flash and JTAG.
  24:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  25:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *             all peripherals mapped on these busses are running at HSI speed.
  26:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *       	  - The clock for all peripherals is switched off, except the SRAM and FLASH.
  27:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - All GPIOs are in input floating state, except the JTAG pins which
  28:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *             are assigned to be used for debug purpose.
  29:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *        
  30:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          Once the device started from reset, the user application has to:        
  31:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - Configure the clock source to be used to drive the System clock
  32:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *             (if the application needs higher frequency/performance)
  33:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - Configure the System clock frequency and Flash settings  
  34:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - Configure the AHB and APB busses prescalers
  35:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - Enable the clock for the peripheral(s) to be used
  36:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           - Configure the clock source(s) for peripherals which clocks are not
  37:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *             derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)      
  38:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                        
  39:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *  @endverbatim
  40:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *    
  41:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   ******************************************************************************
  42:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @attention
  43:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *
  44:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  45:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *
  46:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  47:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * You may not use this file except in compliance with the License.
  48:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * You may obtain a copy of the License at:
  49:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *
  50:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  51:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *
  52:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  53:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  54:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  55:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * See the License for the specific language governing permissions and
  56:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * limitations under the License.
  57:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *
  58:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   ******************************************************************************
  59:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
  60:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
  61:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Includes ------------------------------------------------------------------*/
  62:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #include "stm32f2xx_rcc.h"
  63:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
  64:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /** @addtogroup STM32F2xx_StdPeriph_Driver
  65:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @{
  66:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
  67:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
  68:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /** @defgroup RCC 
  69:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief RCC driver modules
  70:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @{
  71:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */ 
  72:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
  73:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  74:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Private define ------------------------------------------------------------*/
  75:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  76:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  77:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* --- CR Register ---*/
  78:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Alias word address of HSION bit */
  79:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  80:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define HSION_BitNumber           0x00
  81:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  82:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Alias word address of CSSON bit */
  83:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CSSON_BitNumber           0x13
  84:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  85:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Alias word address of PLLON bit */
  86:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define PLLON_BitNumber           0x18
  87:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  88:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Alias word address of PLLI2SON bit */
  89:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define PLLI2SON_BitNumber        0x1A
  90:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CR_PLLI2SON_BB            (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLI2SON_BitNumber * 4))
  91:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
  92:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* --- CFGR Register ---*/
  93:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Alias word address of I2SSRC bit */
  94:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x08)
  95:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define I2SSRC_BitNumber          0x17
  96:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CFGR_I2SSRC_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (I2SSRC_BitNumber * 4))
  97:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
  98:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* --- BDCR Register ---*/
  99:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Alias word address of RTCEN bit */
 100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x70)
 101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define RTCEN_BitNumber           0x0F
 102:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
 103:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Alias word address of BDRST bit */
 104:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define BDRST_BitNumber           0x10
 105:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 106:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* --- CSR Register ---*/
 107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Alias word address of LSION bit */
 108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x74)
 109:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define LSION_BitNumber           0x00
 110:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 111:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 112:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* CFGR register bit mask */
 113:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CFGR_MCO2_RESET_MASK      ((uint32_t)0x07FFFFFF)
 114:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CFGR_MCO1_RESET_MASK      ((uint32_t)0xF89FFFFF)
 115:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 116:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* RCC Flag Mask */
 117:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define FLAG_MASK                 ((uint8_t)0x1F)
 118:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 119:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* CR register byte 3 (Bits[23:16]) base address */
 120:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CR_BYTE3_ADDRESS          ((uint32_t)0x40023802)
 121:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 122:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 123:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x01))
 124:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 125:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 126:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x02))
 127:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 128:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* BDCR register base address */
 129:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 130:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 131:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Private macro -------------------------------------------------------------*/
 132:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Private variables ---------------------------------------------------------*/
 133:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 134:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 136:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /* Private functions ---------------------------------------------------------*/
 137:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 138:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /** @defgroup RCC_Private_Functions
 139:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @{
 140:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */ 
 141:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /** @defgroup RCC_Group1 Internal and external clocks, PLL, CSS and MCO configuration functions
 143:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  *  @brief   Internal and external clocks, PLL, CSS and MCO configuration functions 
 144:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  *
 145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** @verbatim   
 146:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  ===============================================================================
 147:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       Internal/external clocks, PLL, CSS and MCO configuration functions
 148:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  ===============================================================================  
 149:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 150:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   This section provide functions allowing to configure the internal/external clocks,
 151:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   PLLs, CSS and MCO pins.
 152:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   
 153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   1. HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 154:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      the PLL as System clock source.
 155:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   2. LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 157:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      clock source.
 158:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   3. HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 160:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      through the PLL as System clock source. Can be used also as RTC clock source.
 161:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   4. LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   5. PLL (clocked by HSI or HSE), featuring two different output clocks:
 165:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       - The first output is used to generate the high speed system clock (up to 120 MHz)
 166:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       - The second output is used to generate the clock for the USB OTG FS (48 MHz),
 167:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****         the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 168:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 169:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   6. PLLI2S (clocked by HSI or HSE), used to generate an accurate clock to achieve 
 170:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      high-quality audio performance on the I2S interface.
 171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   
 172:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   7. CSS (Clock security system), once enable and if a HSE clock failure occurs 
 173:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      (HSE used directly or through PLL as System clock source), the System clock
 174:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      is automatically switched to HSI and an interrupt is generated if enabled. 
 175:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      The interrupt is linked to the Cortex-M3 NMI (Non-Maskable Interrupt) 
 176:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      exception vector.   
 177:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 178:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   8. MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 179:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      clock (through a configurable prescaler) on PA8 pin.
 180:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   9. MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      clock (through a configurable prescaler) on PC9 pin.
 183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 184:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** @endverbatim
 185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @{
 186:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 191:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            - HSI ON and used as system clock source
 192:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            - HSE, PLL and PLLI2S OFF
 193:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 194:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 195:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            - All interrupts disabled
 196:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This function doesn't modify the configuration of the
 197:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            - Peripheral clocks
 198:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            - LSI, LSE and RTC clocks 
 199:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  None
 200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 201:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 202:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_DeInit(void)
 203:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
  27              		.loc 1 203 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 204:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Set HSION bit */
 205:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  32              		.loc 1 205 0
  33 0000 0A4B     		ldr	r3, .L2
  34 0002 1A68     		ldr	r2, [r3, #0]
  35 0004 42F00100 		orr	r0, r2, #1
 206:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 207:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Reset CFGR register */
 208:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CFGR = 0x00000000;
  36              		.loc 1 208 0
  37 0008 0022     		movs	r2, #0
 205:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  38              		.loc 1 205 0
  39 000a 1860     		str	r0, [r3, #0]
  40              		.loc 1 208 0
  41 000c 9A60     		str	r2, [r3, #8]
 209:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 210:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 211:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  42              		.loc 1 211 0
  43 000e 1968     		ldr	r1, [r3, #0]
  44 0010 21F08470 		bic	r0, r1, #17301504
  45 0014 20F48031 		bic	r1, r0, #65536
 212:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 213:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Reset PLLCFGR register */
 214:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->PLLCFGR = 0x24003010;
  46              		.loc 1 214 0
  47 0018 0548     		ldr	r0, .L2+4
 211:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  48              		.loc 1 211 0
  49 001a 1960     		str	r1, [r3, #0]
  50              		.loc 1 214 0
  51 001c 5860     		str	r0, [r3, #4]
 215:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 216:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Reset HSEBYP bit */
 217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  52              		.loc 1 217 0
  53 001e 1968     		ldr	r1, [r3, #0]
  54 0020 21F48020 		bic	r0, r1, #262144
  55 0024 1860     		str	r0, [r3, #0]
 218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 219:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Disable all interrupts */
 220:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CIR = 0x00000000;
  56              		.loc 1 220 0
  57 0026 DA60     		str	r2, [r3, #12]
  58 0028 7047     		bx	lr
  59              	.L3:
  60 002a 00BF     		.align	2
  61              	.L2:
  62 002c 00380240 		.word	1073887232
  63 0030 10300024 		.word	603992080
  64              		.cfi_endproc
  65              	.LFE56:
  67              		.section	.text.RCC_HSEConfig,"ax",%progbits
  68              		.align	1
  69              		.global	RCC_HSEConfig
  70              		.thumb
  71              		.thumb_func
  73              	RCC_HSEConfig:
  74              	.LFB57:
 221:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 222:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 223:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 224:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 225:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application
 226:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         software should wait on HSERDY flag to be set indicating that HSE clock
 227:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         is stable and can be used to clock the PLL and/or system clock.
 228:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   HSE state can not be changed if it is used directly or through the
 229:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         PLL as system clock. In this case, you have to select another source
 230:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         of the system clock then change the HSE state (ex. disable it).
 231:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The HSE is stopped by hardware when entering STOP and STANDBY modes.  
 232:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This function reset the CSSON bit, so if the Clock security system(CSS)
 233:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         was previously enabled you have to enable it again after calling this
 234:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         function.    
 235:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 236:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 237:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HSE_OFF: turn OFF the HSE oscillator, HSERDY flag goes low after
 238:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                              6 HSE oscillator clock cycles.
 239:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HSE_ON: turn ON the HSE oscillator
 240:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 241:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 242:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 243:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_HSEConfig(uint8_t RCC_HSE)
 244:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
  75              		.loc 1 244 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.LVL0:
 245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 246:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 247:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 248:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 249:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE_OFF;
  81              		.loc 1 249 0
  82 0000 024B     		ldr	r3, .L5
  83 0002 0022     		movs	r2, #0
  84 0004 1A70     		strb	r2, [r3, #0]
 250:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 251:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Set the new HSE configuration -------------------------------------------*/
 252:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE;
  85              		.loc 1 252 0
  86 0006 1870     		strb	r0, [r3, #0]
  87 0008 7047     		bx	lr
  88              	.L6:
  89 000a 00BF     		.align	2
  90              	.L5:
  91 000c 02380240 		.word	1073887234
  92              		.cfi_endproc
  93              	.LFE57:
  95              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
  96              		.align	1
  97              		.global	RCC_AdjustHSICalibrationValue
  98              		.thumb
  99              		.thumb_func
 101              	RCC_AdjustHSICalibrationValue:
 102              	.LFB59:
 253:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 254:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 255:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 256:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Waits for HSE start-up.
 257:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This functions waits on HSERDY flag to be set and return SUCCESS if 
 258:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         this flag is set, otherwise returns ERROR if the timeout is reached 
 259:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         and this flag is not set. The timeout value is defined by the constant
 260:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         HSE_STARTUP_TIMEOUT in stm32f2xx.h file. You can tailor it depending
 261:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         on the HSE crystal used in your application. 
 262:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  None
 263:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval An ErrorStatus enumeration value:
 264:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          - SUCCESS: HSE oscillator is stable and ready to use
 265:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          - ERROR: HSE oscillator not yet ready
 266:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 267:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 268:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 269:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   __IO uint32_t startupcounter = 0;
 270:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   ErrorStatus status = ERROR;
 271:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   FlagStatus hsestatus = RESET;
 272:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 273:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   do
 274:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
 275:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     hsestatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 276:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     startupcounter++;
 277:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 278:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 279:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 280:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
 281:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     status = SUCCESS;
 282:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
 283:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
 284:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
 285:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     status = ERROR;
 286:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
 287:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   return (status);
 288:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 289:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 290:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 291:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 292:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The calibration is used to compensate for the variations in voltage
 293:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         and temperature that influence the frequency of the internal HSI RC.
 294:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 295:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         This parameter must be a number between 0 and 0x1F.
 296:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 297:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 298:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 299:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 103              		.loc 1 299 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LVL1:
 300:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmpreg = 0;
 301:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 302:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 303:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 304:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg = RCC->CR;
 109              		.loc 1 304 0
 110 0000 034B     		ldr	r3, .L8
 111 0002 1A68     		ldr	r2, [r3, #0]
 112              	.LVL2:
 305:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 306:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 307:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg &= ~RCC_CR_HSITRIM;
 113              		.loc 1 307 0
 114 0004 22F0F801 		bic	r1, r2, #248
 115              	.LVL3:
 308:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 309:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 310:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 116              		.loc 1 310 0
 117 0008 41EAC000 		orr	r0, r1, r0, lsl #3
 118              	.LVL4:
 311:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 312:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Store the new value */
 313:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CR = tmpreg;
 119              		.loc 1 313 0
 120 000c 1860     		str	r0, [r3, #0]
 121 000e 7047     		bx	lr
 122              	.L9:
 123              		.align	2
 124              	.L8:
 125 0010 00380240 		.word	1073887232
 126              		.cfi_endproc
 127              	.LFE59:
 129              		.section	.text.RCC_HSICmd,"ax",%progbits
 130              		.align	1
 131              		.global	RCC_HSICmd
 132              		.thumb
 133              		.thumb_func
 135              	RCC_HSICmd:
 136              	.LFB60:
 314:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 315:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 316:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 317:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 318:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The HSI is stopped by hardware when entering STOP and STANDBY modes.
 319:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         It is used (enabled by hardware) as system clock source after startup
 320:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         from Reset, wakeup from STOP and STANDBY mode, or in case of failure
 321:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         of the HSE used directly or indirectly as system clock (if the Clock
 322:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         Security System CSS is enabled).             
 323:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   HSI can not be stopped if it is used as system clock source. In this case,
 324:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         you have to select another source of the system clock then stop the HSI.  
 325:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After enabling the HSI, the application software should wait on HSIRDY
 326:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         flag to be set indicating that HSI clock is stable and can be used as
 327:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         system clock source.  
 328:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the HSI.
 329:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 330:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   When the HSI is stopped, HSIRDY flag goes low after 6 HSI oscillator
 331:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         clock cycles.  
 332:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 333:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 334:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 335:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 137              		.loc 1 335 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142              	.LVL5:
 336:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 337:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 338:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 339:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 143              		.loc 1 339 0
 144 0000 014B     		ldr	r3, .L11
 145 0002 1860     		str	r0, [r3, #0]
 146 0004 7047     		bx	lr
 147              	.L12:
 148 0006 00BF     		.align	2
 149              	.L11:
 150 0008 00004742 		.word	1111949312
 151              		.cfi_endproc
 152              	.LFE60:
 154              		.section	.text.RCC_LSEConfig,"ax",%progbits
 155              		.align	1
 156              		.global	RCC_LSEConfig
 157              		.thumb
 158              		.thumb_func
 160              	RCC_LSEConfig:
 161              	.LFB61:
 340:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 341:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 342:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 343:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 344:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   As the LSE is in the Backup domain and write access is denied to
 345:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         this domain after reset, you have to enable write access using 
 346:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         PWR_BackupAccessCmd(ENABLE) function before to configure the LSE
 347:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         (to be done once after reset).  
 348:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After enabling the LSE (RCC_LSE_ON or RCC_LSE_Bypass), the application
 349:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         software should wait on LSERDY flag to be set indicating that LSE clock
 350:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         is stable and can be used to clock the RTC.
 351:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 352:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 353:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_LSE_OFF: turn OFF the LSE oscillator, LSERDY flag goes low after
 354:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                              6 LSE oscillator clock cycles.
 355:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_LSE_ON: turn ON the LSE oscillator
 356:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 357:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 358:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 360:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 162              		.loc 1 360 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL6:
 361:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 362:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 363:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 364:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 365:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Reset LSEON bit */
 366:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 168              		.loc 1 366 0
 169 0000 064B     		ldr	r3, .L18
 170 0002 0022     		movs	r2, #0
 367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 368:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Reset LSEBYP bit */
 369:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 370:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 371:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 372:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   switch (RCC_LSE)
 171              		.loc 1 372 0
 172 0004 0128     		cmp	r0, #1
 366:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 173              		.loc 1 366 0
 174 0006 1A70     		strb	r2, [r3, #0]
 369:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 175              		.loc 1 369 0
 176 0008 1A70     		strb	r2, [r3, #0]
 177              		.loc 1 372 0
 178 000a 04D0     		beq	.L15
 179 000c 0428     		cmp	r0, #4
 180 000e 04D1     		bne	.L13
 373:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
 374:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     case RCC_LSE_ON:
 375:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       /* Set LSEON bit */
 376:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 377:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       break;
 378:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     case RCC_LSE_Bypass:
 379:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       /* Set LSEBYP and LSEON bits */
 380:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 181              		.loc 1 380 0
 182 0010 0520     		movs	r0, #5
 183              	.LVL7:
 184 0012 1870     		strb	r0, [r3, #0]
 381:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       break;
 185              		.loc 1 381 0
 186 0014 01E0     		b	.L13
 187              	.LVL8:
 188              	.L15:
 376:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 189              		.loc 1 376 0
 190 0016 1870     		strb	r0, [r3, #0]
 377:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       break;
 191              		.loc 1 377 0
 192 0018 7047     		bx	lr
 193              	.LVL9:
 194              	.L13:
 195 001a 7047     		bx	lr
 196              	.L19:
 197              		.align	2
 198              	.L18:
 199 001c 70380240 		.word	1073887344
 200              		.cfi_endproc
 201              	.LFE61:
 203              		.section	.text.RCC_LSICmd,"ax",%progbits
 204              		.align	1
 205              		.global	RCC_LSICmd
 206              		.thumb
 207              		.thumb_func
 209              	RCC_LSICmd:
 210              	.LFB62:
 382:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     default:
 383:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       break;
 384:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
 385:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 386:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 387:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 388:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 389:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After enabling the LSI, the application software should wait on 
 390:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         LSIRDY flag to be set indicating that LSI clock is stable and can
 391:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         be used to clock the IWDG and/or the RTC.
 392:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.  
 393:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the LSI.
 394:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 395:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   When the LSI is stopped, LSIRDY flag goes low after 6 LSI oscillator
 396:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         clock cycles. 
 397:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 398:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 399:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 400:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 211              		.loc 1 400 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL10:
 401:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 402:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 403:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 404:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 217              		.loc 1 404 0
 218 0000 014B     		ldr	r3, .L21
 219 0002 1860     		str	r0, [r3, #0]
 220 0004 7047     		bx	lr
 221              	.L22:
 222 0006 00BF     		.align	2
 223              	.L21:
 224 0008 800E4742 		.word	1111953024
 225              		.cfi_endproc
 226              	.LFE62:
 228              		.section	.text.RCC_PLLConfig,"ax",%progbits
 229              		.align	1
 230              		.global	RCC_PLLConfig
 231              		.thumb
 232              		.thumb_func
 234              	RCC_PLLConfig:
 235              	.LFB63:
 405:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 406:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 407:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 408:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the main PLL clock source, multiplication and division factors.
 409:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This function must be used only when the main PLL is disabled.
 410:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *  
 411:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 412:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 413:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_PLLSource_HSI: HSI oscillator clock selected as PLL clock entry
 414:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_PLLSource_HSE: HSE oscillator clock selected as PLL clock entry
 415:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This clock source (RCC_PLLSource) is common for the main PLL and PLLI2S.  
 416:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *  
 417:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  PLLM: specifies the division factor for PLL VCO input clock
 418:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter must be a number between 0 and 63.
 419:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   You have to set the PLLM parameter correctly to ensure that the VCO input
 420:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 421:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         of 2 MHz to limit PLL jitter.
 422:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *  
 423:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  PLLN: specifies the multiplication factor for PLL VCO output clock
 424:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter must be a number between 192 and 432.
 425:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   You have to set the PLLN parameter correctly to ensure that the VCO
 426:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         output frequency is between 192 and 432 MHz.
 427:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *   
 428:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  PLLP: specifies the division factor for main system clock (SYSCLK)
 429:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 430:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   You have to set the PLLP parameter correctly to not exceed 120 MHz on
 431:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         the System clock frequency.
 432:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *  
 433:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  PLLQ: specifies the division factor for OTG FS, SDIO and RNG clocks
 434:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter must be a number between 4 and 15.
 435:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   If the USB OTG FS is used in your application, you have to set the
 436:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         PLLQ parameter correctly to have 48 MHz clock for the USB. However,
 437:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         the SDIO and RNG need a frequency lower than or equal to 48 MHz to work
 438:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         correctly.
 439:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *   
 440:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 441:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 442:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PL
 443:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 236              		.loc 1 443 0
 237              		.cfi_startproc
 238              		@ args = 4, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              	.LVL11:
 241 0000 10B5     		push	{r4, lr}
 242              	.LCFI0:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 4, -8
 245              		.cfi_offset 14, -4
 444:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 445:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 446:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_PLLM_VALUE(PLLM));
 447:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_PLLN_VALUE(PLLN));
 448:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_PLLP_VALUE(PLLP));
 449:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_PLLQ_VALUE(PLLQ));
 450:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 451:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->PLLCFGR = PLLM | (PLLN << 6) | (((PLLP >> 1) -1) << 16) | (RCC_PLLSource) |
 246              		.loc 1 451 0
 247 0002 0143     		orrs	r1, r1, r0
 248              	.LVL12:
 249 0004 029C     		ldr	r4, [sp, #8]
 250 0006 41EA8212 		orr	r2, r1, r2, lsl #6
 251              	.LVL13:
 252 000a 5B08     		lsrs	r3, r3, #1
 253              	.LVL14:
 254 000c 42EA0460 		orr	r0, r2, r4, lsl #24
 255              	.LVL15:
 256 0010 591E     		subs	r1, r3, #1
 257 0012 024A     		ldr	r2, .L24
 258 0014 40EA0144 		orr	r4, r0, r1, lsl #16
 259 0018 5460     		str	r4, [r2, #4]
 260 001a 10BD     		pop	{r4, pc}
 261              	.L25:
 262              		.align	2
 263              	.L24:
 264 001c 00380240 		.word	1073887232
 265              		.cfi_endproc
 266              	.LFE63:
 268              		.section	.text.RCC_PLLCmd,"ax",%progbits
 269              		.align	1
 270              		.global	RCC_PLLCmd
 271              		.thumb
 272              		.thumb_func
 274              	RCC_PLLCmd:
 275              	.LFB64:
 452:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****                  (PLLQ << 24);
 453:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 454:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 455:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 456:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the main PLL.
 457:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After enabling the main PLL, the application software should wait on 
 458:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         PLLRDY flag to be set indicating that PLL clock is stable and can
 459:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         be used as system clock source.
 460:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The main PLL can not be disabled if it is used as system clock source
 461:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The main PLL is disabled by hardware when entering STOP and STANDBY modes.
 462:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the main PLL. This parameter can be: ENABLE or DISABLE.
 463:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 464:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 465:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 466:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 276              		.loc 1 466 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281              	.LVL16:
 467:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 468:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 469:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 282              		.loc 1 469 0
 283 0000 014B     		ldr	r3, .L27
 284 0002 1860     		str	r0, [r3, #0]
 285 0004 7047     		bx	lr
 286              	.L28:
 287 0006 00BF     		.align	2
 288              	.L27:
 289 0008 60004742 		.word	1111949408
 290              		.cfi_endproc
 291              	.LFE64:
 293              		.section	.text.RCC_PLLI2SConfig,"ax",%progbits
 294              		.align	1
 295              		.global	RCC_PLLI2SConfig
 296              		.thumb
 297              		.thumb_func
 299              	RCC_PLLI2SConfig:
 300              	.LFB65:
 470:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 471:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 472:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 473:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 474:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *   
 475:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   PLLI2S is available only in Silicon RevisionB and RevisionY.    
 476:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 477:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 478:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         RCC_PLLConfig function )  
 479:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *             
 480:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 481:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter must be a number between 192 and 432.
 482:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 483:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         output frequency is between 192 and 432 MHz.
 484:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *    
 485:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 486:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 487:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 488:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         on the I2S clock frequency.
 489:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *   
 490:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 491:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 492:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR)
 493:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 301              		.loc 1 493 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306              	.LVL17:
 494:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 495:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 496:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 497:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 498:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SR << 28);
 307              		.loc 1 498 0
 308 0000 8001     		lsls	r0, r0, #6
 309              	.LVL18:
 310 0002 034B     		ldr	r3, .L30
 311 0004 40EA0171 		orr	r1, r0, r1, lsl #28
 312              	.LVL19:
 313 0008 C3F88410 		str	r1, [r3, #132]
 314 000c 7047     		bx	lr
 315              	.L31:
 316 000e 00BF     		.align	2
 317              	.L30:
 318 0010 00380240 		.word	1073887232
 319              		.cfi_endproc
 320              	.LFE65:
 322              		.section	.text.RCC_PLLI2SCmd,"ax",%progbits
 323              		.align	1
 324              		.global	RCC_PLLI2SCmd
 325              		.thumb
 326              		.thumb_func
 328              	RCC_PLLI2SCmd:
 329              	.LFB66:
 499:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 500:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 501:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 502:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the PLLI2S.
 503:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   PLLI2S is available only in RevisionB and RevisionY 
 504:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The PLLI2S is disabled by hardware when entering STOP and STANDBY modes.  
 505:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the PLLI2S. This parameter can be: ENABLE or DISABLE.
 506:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 507:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 508:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_PLLI2SCmd(FunctionalState NewState)
 509:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 330              		.loc 1 509 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335              	.LVL20:
 510:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 511:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 512:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint32_t *) CR_PLLI2SON_BB = (uint32_t)NewState;
 336              		.loc 1 512 0
 337 0000 014B     		ldr	r3, .L33
 338 0002 1860     		str	r0, [r3, #0]
 339 0004 7047     		bx	lr
 340              	.L34:
 341 0006 00BF     		.align	2
 342              	.L33:
 343 0008 68004742 		.word	1111949416
 344              		.cfi_endproc
 345              	.LFE66:
 347              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 348              		.align	1
 349              		.global	RCC_ClockSecuritySystemCmd
 350              		.thumb
 351              		.thumb_func
 353              	RCC_ClockSecuritySystemCmd:
 354              	.LFB67:
 513:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 514:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 515:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 516:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the Clock Security System.
 517:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 518:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 519:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 520:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 521:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.  
 522:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the Clock Security System.
 523:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 524:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 525:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 526:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
 527:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 355              		.loc 1 527 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360              	.LVL21:
 528:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 529:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 530:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 361              		.loc 1 530 0
 362 0000 014B     		ldr	r3, .L36
 363 0002 1860     		str	r0, [r3, #0]
 364 0004 7047     		bx	lr
 365              	.L37:
 366 0006 00BF     		.align	2
 367              	.L36:
 368 0008 4C004742 		.word	1111949388
 369              		.cfi_endproc
 370              	.LFE67:
 372              		.section	.text.RCC_MCO1Config,"ax",%progbits
 373              		.align	1
 374              		.global	RCC_MCO1Config
 375              		.thumb
 376              		.thumb_func
 378              	RCC_MCO1Config:
 379              	.LFB68:
 531:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 532:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 533:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 534:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8).
 535:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
 536:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_MCO1Source: specifies the clock source to output.
 537:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 538:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO1Source_HSI: HSI clock selected as MCO1 source
 539:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO1Source_LSE: LSE clock selected as MCO1 source
 540:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO1Source_HSE: HSE clock selected as MCO1 source
 541:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO1Source_PLLCLK: main PLL clock selected as MCO1 source
 542:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_MCO1Div: specifies the MCO1 prescaler.
 543:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 544:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO1Div_1: no division applied to MCO1 clock
 545:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO1Div_2: division by 2 applied to MCO1 clock
 546:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO1Div_3: division by 3 applied to MCO1 clock
 547:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO1Div_4: division by 4 applied to MCO1 clock
 548:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO1Div_5: division by 5 applied to MCO1 clock
 549:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 550:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 551:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_MCO1Config(uint32_t RCC_MCO1Source, uint32_t RCC_MCO1Div)
 552:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 380              		.loc 1 552 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385              	.LVL22:
 553:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmpreg = 0;
 554:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   
 555:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 556:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCO1Source));
 557:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_MCO1DIV(RCC_MCO1Div));  
 558:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 559:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg = RCC->CFGR;
 386              		.loc 1 559 0
 387 0000 034B     		ldr	r3, .L39
 388 0002 9A68     		ldr	r2, [r3, #8]
 389              	.LVL23:
 560:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 561:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Clear MCO1[1:0] and MCO1PRE[2:0] bits */
 562:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg &= CFGR_MCO1_RESET_MASK;
 390              		.loc 1 562 0
 391 0004 22F0EC62 		bic	r2, r2, #123731968
 392              	.LVL24:
 563:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 564:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Select MCO1 clock source and prescaler */
 565:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg |= RCC_MCO1Source | RCC_MCO1Div;
 393              		.loc 1 565 0
 394 0008 1043     		orrs	r0, r0, r2
 395              	.LVL25:
 396 000a 0143     		orrs	r1, r1, r0
 397              	.LVL26:
 566:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 567:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Store the new value */
 568:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CFGR = tmpreg;  
 398              		.loc 1 568 0
 399 000c 9960     		str	r1, [r3, #8]
 400 000e 7047     		bx	lr
 401              	.L40:
 402              		.align	2
 403              	.L39:
 404 0010 00380240 		.word	1073887232
 405              		.cfi_endproc
 406              	.LFE68:
 408              		.section	.text.RCC_MCO2Config,"ax",%progbits
 409              		.align	1
 410              		.global	RCC_MCO2Config
 411              		.thumb
 412              		.thumb_func
 414              	RCC_MCO2Config:
 415              	.LFB69:
 569:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 570:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 571:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 572:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Selects the clock source to output on MCO2 pin(PC9).
 573:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   PC9 should be configured in alternate function mode.
 574:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_MCO2Source: specifies the clock source to output.
 575:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 576:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO2Source_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 577:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO2Source_PLLI2SCLK: PLLI2S clock selected as MCO2 source
 578:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO2Source_HSE: HSE clock selected as MCO2 source
 579:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO2Source_PLLCLK: main PLL clock selected as MCO2 source
 580:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_MCO2Div: specifies the MCO2 prescaler.
 581:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 582:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO2Div_1: no division applied to MCO2 clock
 583:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO2Div_2: division by 2 applied to MCO2 clock
 584:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO2Div_3: division by 3 applied to MCO2 clock
 585:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO2Div_4: division by 4 applied to MCO2 clock
 586:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_MCO2Div_5: division by 5 applied to MCO2 clock
 587:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 588:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 589:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_MCO2Config(uint32_t RCC_MCO2Source, uint32_t RCC_MCO2Div)
 590:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 416              		.loc 1 590 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421              	.LVL27:
 591:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmpreg = 0;
 592:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   
 593:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 594:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_MCO2SOURCE(RCC_MCO2Source));
 595:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_MCO2DIV(RCC_MCO2Div));
 596:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   
 597:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg = RCC->CFGR;
 422              		.loc 1 597 0
 423 0000 034B     		ldr	r3, .L42
 424 0002 9A68     		ldr	r2, [r3, #8]
 425              	.LVL28:
 598:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   
 599:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Clear MCO2 and MCO2PRE[2:0] bits */
 600:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg &= CFGR_MCO2_RESET_MASK;
 426              		.loc 1 600 0
 427 0004 22F07842 		bic	r2, r2, #-134217728
 428              	.LVL29:
 601:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 602:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Select MCO2 clock source and prescaler */
 603:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg |= RCC_MCO2Source | RCC_MCO2Div;
 429              		.loc 1 603 0
 430 0008 1043     		orrs	r0, r0, r2
 431              	.LVL30:
 432 000a 0143     		orrs	r1, r1, r0
 433              	.LVL31:
 604:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 605:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Store the new value */
 606:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CFGR = tmpreg;  
 434              		.loc 1 606 0
 435 000c 9960     		str	r1, [r3, #8]
 436 000e 7047     		bx	lr
 437              	.L43:
 438              		.align	2
 439              	.L42:
 440 0010 00380240 		.word	1073887232
 441              		.cfi_endproc
 442              	.LFE69:
 444              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 445              		.align	1
 446              		.global	RCC_SYSCLKConfig
 447              		.thumb
 448              		.thumb_func
 450              	RCC_SYSCLKConfig:
 451              	.LFB70:
 607:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 608:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 609:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 610:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @}
 611:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 612:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 613:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /** @defgroup RCC_Group2 System AHB and APB busses clocks configuration functions
 614:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  *  @brief   System, AHB and APB busses clocks configuration functions
 615:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  *
 616:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** @verbatim   
 617:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  ===============================================================================
 618:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****              System, AHB and APB busses clocks configuration functions
 619:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  ===============================================================================  
 620:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 621:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   This section provide functions allowing to configure the System, AHB, APB1 and 
 622:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   APB2 busses clocks.
 623:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   
 624:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   1. Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 625:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      HSE and PLL.
 626:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      The AHB clock (HCLK) is derived from System clock through configurable prescaler
 627:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      and used to clock the CPU, memory and peripherals mapped on AHB bus (DMA, GPIO...).
 628:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      APB1 (PCLK1) and APB2 (PCLK2) clocks are derived from AHB clock through 
 629:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      configurable prescalers and used to clock the peripherals mapped on these busses.
 630:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      You can use "RCC_GetClocksFreq()" function to retrieve the frequencies of these clocks.  
 631:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 632:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** @note All the peripheral clocks are derived from the System clock (SYSCLK) except:
 633:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****        - I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 634:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****           from an external clock mapped on the I2S_CKIN pin. 
 635:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****           You have to use RCC_I2SCLKConfig() function to configure this clock. 
 636:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****        - RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 637:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****           divided by 2 to 31. You have to use RCC_RTCCLKConfig() and RCC_RTCCLKCmd()
 638:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****           functions to configure this clock. 
 639:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****        - USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
 640:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****           to work correctly, while the SDIO require a frequency equal or lower than
 641:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****           to 48. This clock is derived of the main PLL through PLLQ divider.
 642:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****        - IWDG clock which is always the LSI clock.
 643:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****        
 644:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   2. The maximum frequency of the SYSCLK and HCLK is 120 MHz, PCLK2 60 MHz and PCLK1 30 MHz.
 645:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      Depending on the device voltage range, the maximum frequency should be 
 646:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      adapted accordingly:
 647:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  +-------------------------------------------------------------------------------------+     
 648:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 649:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |               |---------------------------------------------------------------------|     
 650:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 651:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 652:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|           
 653:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
 654:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|   
 655:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  | 
 656:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|   
 657:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
 658:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 659:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
 660:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 661:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 120|72 < HCLK <= 90  |64 < HCLK <= 80  |
 662:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 663:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |5WS(6CPU cycle)|      NA        |      NA        |90 < HCLK <= 108 |80 < HCLK <= 96  | 
 664:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 665:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |      NA        |108 < HCLK <= 120|96 < HCLK <= 112 | 
 666:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 667:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  |7WS(8CPU cycle)|      NA        |     NA         |     NA          |112 < HCLK <= 120| 
 668:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  +-------------------------------------------------------------------------------------+    
 669:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 670:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 671:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** @endverbatim
 672:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @{
 673:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 674:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 675:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 676:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 677:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 678:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 679:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 680:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 681:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 682:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked). 
 683:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 684:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         occur when the clock source will be ready. 
 685:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         You can use RCC_GetSYSCLKSource() function to know which clock is
 686:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         currently used as system clock source. 
 687:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 688:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 689:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSI:    HSI selected as system clock source
 690:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSE:    HSE selected as system clock source
 691:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock source
 692:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 693:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 694:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 695:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 452              		.loc 1 695 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL32:
 696:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmpreg = 0;
 697:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 698:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 699:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 700:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 701:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg = RCC->CFGR;
 458              		.loc 1 701 0
 459 0000 034B     		ldr	r3, .L45
 460 0002 9A68     		ldr	r2, [r3, #8]
 461              	.LVL33:
 702:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 703:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Clear SW[1:0] bits */
 704:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg &= ~RCC_CFGR_SW;
 462              		.loc 1 704 0
 463 0004 22F00301 		bic	r1, r2, #3
 464              	.LVL34:
 705:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 706:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 707:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 465              		.loc 1 707 0
 466 0008 0843     		orrs	r0, r0, r1
 467              	.LVL35:
 708:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 709:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Store the new value */
 710:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CFGR = tmpreg;
 468              		.loc 1 710 0
 469 000a 9860     		str	r0, [r3, #8]
 470 000c 7047     		bx	lr
 471              	.L46:
 472 000e 00BF     		.align	2
 473              	.L45:
 474 0010 00380240 		.word	1073887232
 475              		.cfi_endproc
 476              	.LFE70:
 478              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 479              		.align	1
 480              		.global	RCC_GetSYSCLKSource
 481              		.thumb
 482              		.thumb_func
 484              	RCC_GetSYSCLKSource:
 485              	.LFB71:
 711:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 712:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 713:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 714:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Returns the clock source used as system clock.
 715:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  None
 716:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval The clock source used as system clock. The returned value can be one
 717:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         of the following:
 718:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *              - 0x00: HSI used as system clock
 719:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *              - 0x04: HSE used as system clock
 720:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *              - 0x08: PLL used as system clock
 721:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 722:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 723:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 486              		.loc 1 723 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 724:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   return ((uint8_t)(RCC->CFGR & RCC_CFGR_SWS));
 491              		.loc 1 724 0
 492 0000 024B     		ldr	r3, .L48
 493 0002 9868     		ldr	r0, [r3, #8]
 725:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 494              		.loc 1 725 0
 495 0004 00F00C00 		and	r0, r0, #12
 496 0008 7047     		bx	lr
 497              	.L49:
 498 000a 00BF     		.align	2
 499              	.L48:
 500 000c 00380240 		.word	1073887232
 501              		.cfi_endproc
 502              	.LFE71:
 504              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 505              		.align	1
 506              		.global	RCC_HCLKConfig
 507              		.thumb
 508              		.thumb_func
 510              	RCC_HCLKConfig:
 511              	.LFB72:
 726:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 727:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 728:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 729:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 730:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         these bits to ensure that HCLK not exceed the maximum allowed frequency
 731:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         (for more details refer to section above
 732:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           "CPU, AHB and APB busses clocks configuration functions")
 733:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 734:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         the system clock (SYSCLK).
 735:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 736:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 737:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 738:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 739:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 740:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 741:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 742:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 743:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 744:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 745:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 746:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 747:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 748:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 512              		.loc 1 748 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517              	.LVL36:
 749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmpreg = 0;
 750:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   
 751:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 752:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 753:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 754:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg = RCC->CFGR;
 518              		.loc 1 754 0
 519 0000 034B     		ldr	r3, .L51
 520 0002 9A68     		ldr	r2, [r3, #8]
 521              	.LVL37:
 755:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Clear HPRE[3:0] bits */
 757:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg &= ~RCC_CFGR_HPRE;
 522              		.loc 1 757 0
 523 0004 22F0F001 		bic	r1, r2, #240
 524              	.LVL38:
 758:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 759:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 760:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg |= RCC_SYSCLK;
 525              		.loc 1 760 0
 526 0008 0843     		orrs	r0, r0, r1
 527              	.LVL39:
 761:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 762:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Store the new value */
 763:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CFGR = tmpreg;
 528              		.loc 1 763 0
 529 000a 9860     		str	r0, [r3, #8]
 530 000c 7047     		bx	lr
 531              	.L52:
 532 000e 00BF     		.align	2
 533              	.L51:
 534 0010 00380240 		.word	1073887232
 535              		.cfi_endproc
 536              	.LFE72:
 538              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 539              		.align	1
 540              		.global	RCC_PCLK1Config
 541              		.thumb
 542              		.thumb_func
 544              	RCC_PCLK1Config:
 545              	.LFB73:
 764:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 765:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 766:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 767:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 768:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 769:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 770:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         the AHB clock (HCLK).
 771:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 772:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB1 clock = HCLK
 773:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB1 clock = HCLK/2
 774:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB1 clock = HCLK/4
 775:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB1 clock = HCLK/8
 776:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 777:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 778:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 779:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 780:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 546              		.loc 1 780 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551              	.LVL40:
 781:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmpreg = 0;
 782:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 783:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 784:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 785:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 786:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg = RCC->CFGR;
 552              		.loc 1 786 0
 553 0000 034B     		ldr	r3, .L54
 554 0002 9A68     		ldr	r2, [r3, #8]
 555              	.LVL41:
 787:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 788:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Clear PPRE1[2:0] bits */
 789:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE1;
 556              		.loc 1 789 0
 557 0004 22F4E051 		bic	r1, r2, #7168
 558              	.LVL42:
 790:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 791:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 792:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg |= RCC_HCLK;
 559              		.loc 1 792 0
 560 0008 0843     		orrs	r0, r0, r1
 561              	.LVL43:
 793:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 794:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Store the new value */
 795:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CFGR = tmpreg;
 562              		.loc 1 795 0
 563 000a 9860     		str	r0, [r3, #8]
 564 000c 7047     		bx	lr
 565              	.L55:
 566 000e 00BF     		.align	2
 567              	.L54:
 568 0010 00380240 		.word	1073887232
 569              		.cfi_endproc
 570              	.LFE73:
 572              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 573              		.align	1
 574              		.global	RCC_PCLK2Config
 575              		.thumb
 576              		.thumb_func
 578              	RCC_PCLK2Config:
 579              	.LFB74:
 796:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 797:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 798:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 799:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 800:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 801:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         the AHB clock (HCLK).
 802:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 803:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB2 clock = HCLK
 804:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB2 clock = HCLK/2
 805:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB2 clock = HCLK/4
 806:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB2 clock = HCLK/8
 807:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 808:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 809:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 810:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 811:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 580              		.loc 1 811 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 585              	.LVL44:
 812:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmpreg = 0;
 813:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 814:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 815:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 816:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 817:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg = RCC->CFGR;
 586              		.loc 1 817 0
 587 0000 034B     		ldr	r3, .L57
 588 0002 9A68     		ldr	r2, [r3, #8]
 589              	.LVL45:
 818:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 819:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Clear PPRE2[2:0] bits */
 820:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE2;
 590              		.loc 1 820 0
 591 0004 22F46041 		bic	r1, r2, #57344
 592              	.LVL46:
 821:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 822:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 823:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 593              		.loc 1 823 0
 594 0008 41EAC000 		orr	r0, r1, r0, lsl #3
 595              	.LVL47:
 824:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 825:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Store the new value */
 826:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CFGR = tmpreg;
 596              		.loc 1 826 0
 597 000c 9860     		str	r0, [r3, #8]
 598 000e 7047     		bx	lr
 599              	.L58:
 600              		.align	2
 601              	.L57:
 602 0010 00380240 		.word	1073887232
 603              		.cfi_endproc
 604              	.LFE74:
 606              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 607              		.align	1
 608              		.global	RCC_GetClocksFreq
 609              		.thumb
 610              		.thumb_func
 612              	RCC_GetClocksFreq:
 613              	.LFB75:
 827:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 828:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 829:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 830:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks; SYSCLK, HCLK, 
 831:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         PCLK1 and PCLK2.       
 832:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * 
 833:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 834:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 835:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         constant and the selected clock source:
 836:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 837:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 838:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**) 
 839:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.         
 840:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f2xx.h file (default value
 841:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 842:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *               in voltage and temperature.
 843:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f2xx.h file (default value
 844:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 845:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 846:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                have wrong result.
 847:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                
 848:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 849:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         value for HSE crystal.
 850:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *   
 851:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 852:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          the clocks frequencies.
 853:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *     
 854:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This function can be used by the user application to compute the 
 855:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 856:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   Each time SYSCLK, HCLK, PCLK1 and/or PCLK2 clock changes, this function
 857:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         must be called to update the structure's field. Otherwise, any
 858:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         configuration based on this function will be incorrect.
 859:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *    
 860:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 861:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 862:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 863:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 614              		.loc 1 863 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              	.LVL48:
 864:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmp = 0, presc = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 865:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 866:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 867:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 619              		.loc 1 867 0
 620 0000 1E4B     		ldr	r3, .L69
 863:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 621              		.loc 1 863 0
 622 0002 10B5     		push	{r4, lr}
 623              	.LCFI1:
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
 627              		.loc 1 867 0
 628 0004 9A68     		ldr	r2, [r3, #8]
 629              	.LVL49:
 630 0006 02F00C01 		and	r1, r2, #12
 631              	.LVL50:
 868:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 869:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   switch (tmp)
 632              		.loc 1 869 0
 633 000a 0429     		cmp	r1, #4
 634 000c 03D0     		beq	.L62
 635 000e 0829     		cmp	r1, #8
 636 0010 03D0     		beq	.L63
 637 0012 1B4B     		ldr	r3, .L69+4
 638 0014 18E0     		b	.L68
 639              	.L62:
 870:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
 871:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     case 0x00:  /* HSI used as system clock source */
 872:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 873:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       break;
 874:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     case 0x04:  /* HSE used as system clock  source */
 875:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 640              		.loc 1 875 0
 641 0016 1B4B     		ldr	r3, .L69+8
 642 0018 16E0     		b	.L68
 643              	.L63:
 876:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       break;
 877:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     case 0x08:  /* PLL used as system clock  source */
 878:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 879:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 880:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****          SYSCLK = PLL_VCO / PLLP
 881:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****          */    
 882:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 644              		.loc 1 882 0
 645 001a 5C68     		ldr	r4, [r3, #4]
 646              	.LVL51:
 883:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 647              		.loc 1 883 0
 648 001c 5A68     		ldr	r2, [r3, #4]
 884:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       
 885:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       if (pllsource != 0)
 649              		.loc 1 885 0
 650 001e 14F4800F 		tst	r4, #4194304
 886:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       {
 887:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****         /* HSE used as PLL clock source */
 888:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 651              		.loc 1 888 0
 652 0022 5968     		ldr	r1, [r3, #4]
 653              	.LVL52:
 654 0024 14BF     		ite	ne
 655 0026 174B     		ldrne	r3, .L69+8
 889:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       }
 890:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       else
 891:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       {
 892:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****         /* HSI used as PLL clock source */
 893:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 656              		.loc 1 893 0
 657 0028 154B     		ldreq	r3, .L69+4
 883:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 658              		.loc 1 883 0
 659 002a 02F03F02 		and	r2, r2, #63
 660              	.LVL53:
 661              		.loc 1 893 0
 662 002e B3FBF2F3 		udiv	r3, r3, r2
 894:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       }
 895:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 896:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 663              		.loc 1 896 0
 664 0032 124A     		ldr	r2, .L69
 665              	.LVL54:
 888:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 666              		.loc 1 888 0
 667 0034 C1F38814 		ubfx	r4, r1, #6, #9
 668              	.LVL55:
 669              		.loc 1 896 0
 670 0038 5168     		ldr	r1, [r2, #4]
 893:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 671              		.loc 1 893 0
 672 003a 6343     		muls	r3, r4, r3
 673              	.LVL56:
 674              		.loc 1 896 0
 675 003c C1F30144 		ubfx	r4, r1, #16, #2
 676 0040 621C     		adds	r2, r4, #1
 677 0042 5100     		lsls	r1, r2, #1
 678              	.LVL57:
 897:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 679              		.loc 1 897 0
 680 0044 B3FBF1F3 		udiv	r3, r3, r1
 681              	.LVL58:
 682              	.L68:
 898:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       break;
 899:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     default:
 900:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 901:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       break;
 902:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
 903:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Compute HCLK, PCLK1 and PCLK2 clocks frequencies ------------------------*/
 904:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 905:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Get HCLK prescaler */
 906:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_HPRE;
 683              		.loc 1 906 0
 684 0048 0C49     		ldr	r1, .L69
 897:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 685              		.loc 1 897 0
 686 004a 0360     		str	r3, [r0, #0]
 687              		.loc 1 906 0
 688 004c 8C68     		ldr	r4, [r1, #8]
 689              	.LVL59:
 907:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = tmp >> 4;
 908:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 690              		.loc 1 908 0
 691 004e 0E4A     		ldr	r2, .L69+12
 907:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = tmp >> 4;
 692              		.loc 1 907 0
 693 0050 C4F30313 		ubfx	r3, r4, #4, #4
 694              	.LVL60:
 695              		.loc 1 908 0
 696 0054 D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
 697              	.LVL61:
 909:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* HCLK clock frequency */
 910:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 698              		.loc 1 910 0
 699 0056 0368     		ldr	r3, [r0, #0]
 700              	.LVL62:
 701 0058 23FA04F3 		lsr	r3, r3, r4
 702 005c 4360     		str	r3, [r0, #4]
 911:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 912:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Get PCLK1 prescaler */
 913:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 703              		.loc 1 913 0
 704 005e 8C68     		ldr	r4, [r1, #8]
 705              	.LVL63:
 914:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = tmp >> 10;
 706              		.loc 1 914 0
 707 0060 C4F38224 		ubfx	r4, r4, #10, #3
 708              	.LVL64:
 915:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 709              		.loc 1 915 0
 710 0064 145D     		ldrb	r4, [r2, r4]	@ zero_extendqisi2
 711              	.LVL65:
 916:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* PCLK1 clock frequency */
 917:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 712              		.loc 1 917 0
 713 0066 23FA04F4 		lsr	r4, r3, r4
 714              	.LVL66:
 715 006a 8460     		str	r4, [r0, #8]
 918:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 919:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Get PCLK2 prescaler */
 920:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 716              		.loc 1 920 0
 717 006c 8968     		ldr	r1, [r1, #8]
 718              	.LVL67:
 921:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = tmp >> 13;
 719              		.loc 1 921 0
 720 006e C1F34231 		ubfx	r1, r1, #13, #3
 721              	.LVL68:
 922:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 722              		.loc 1 922 0
 723 0072 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 724              	.LVL69:
 923:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* PCLK2 clock frequency */
 924:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 725              		.loc 1 924 0
 726 0074 23FA02F3 		lsr	r3, r3, r2
 727 0078 C360     		str	r3, [r0, #12]
 728 007a 10BD     		pop	{r4, pc}
 729              	.L70:
 730              		.align	2
 731              	.L69:
 732 007c 00380240 		.word	1073887232
 733 0080 0024F400 		.word	16000000
 734 0084 80BA8C01 		.word	26000000
 735 0088 00000000 		.word	.LANCHOR0
 736              		.cfi_endproc
 737              	.LFE75:
 739              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 740              		.align	1
 741              		.global	RCC_RTCCLKConfig
 742              		.thumb
 743              		.thumb_func
 745              	RCC_RTCCLKConfig:
 746              	.LFB76:
 925:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 926:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 927:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 928:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @}
 929:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 930:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 931:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /** @defgroup RCC_Group3 Peripheral clocks configuration functions
 932:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  *  @brief   Peripheral clocks configuration functions 
 933:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  *
 934:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** @verbatim   
 935:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  ===============================================================================
 936:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****                    Peripheral clocks configuration functions
 937:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  ===============================================================================  
 938:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 939:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   This section provide functions allowing to configure the Peripheral clocks. 
 940:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   
 941:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   1. The RTC clock which is derived from the LSI, LSE or HSE clock divided by 2 to 31.
 942:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      
 943:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   2. After restart from Reset or wakeup from STANDBY, all peripherals are off
 944:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      except internal SRAM, Flash and JTAG. Before to start using a peripheral you
 945:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      have to enable its interface clock. You can do this using RCC_AHBPeriphClockCmd()
 946:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      , RCC_APB2PeriphClockCmd() and RCC_APB1PeriphClockCmd() functions.
 947:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 948:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   3. To reset the peripherals configuration (to the default state after device reset)
 949:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      you can use RCC_AHBPeriphResetCmd(), RCC_APB2PeriphResetCmd() and 
 950:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      RCC_APB1PeriphResetCmd() functions.
 951:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      
 952:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   4. To further reduce power consumption in SLEEP mode the peripheral clocks can
 953:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      be disabled prior to executing the WFI or WFE instructions. You can do this
 954:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      using RCC_AHBPeriphClockLPModeCmd(), RCC_APB2PeriphClockLPModeCmd() and
 955:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      RCC_APB1PeriphClockLPModeCmd() functions.  
 956:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 957:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** @endverbatim
 958:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @{
 959:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 960:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 961:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
 962:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 963:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   As the RTC clock configuration bits are in the Backup domain and write
 964:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         access is denied to this domain after reset, you have to enable write
 965:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         access using PWR_BackupAccessCmd(ENABLE) function before to configure
 966:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         the RTC clock source (to be done once after reset).    
 967:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   Once the RTC clock is configured it can't be changed unless the  
 968:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         Backup domain is reset using RCC_BackupResetCmd() function, or by
 969:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         a Power On Reset (POR).
 970:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *    
 971:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 972:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
 973:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 974:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 975:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_RTCCLKSource_HSE_Divx: HSE clock divided by x selected
 976:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                                            as RTC clock, where x:[2,31]
 977:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *  
 978:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   If the LSE or LSI is used as RTC clock source, the RTC continues to
 979:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         work in STOP and STANDBY modes, and can be used as wakeup source.
 980:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         However, when the HSE clock is used as RTC clock source, the RTC
 981:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         cannot be used in STOP and STANDBY modes.    
 982:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The maximum input clock frequency for RTC is 1MHz (when using HSE as
 983:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         RTC clock source).
 984:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *  
 985:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
 986:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
 987:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 988:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 747              		.loc 1 988 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 752              	.LVL70:
 989:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmpreg = 0;
 990:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 991:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
 992:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 993:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 994:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if ((RCC_RTCCLKSource & 0x00000300) == 0x00000300)
 753              		.loc 1 994 0
 754 0000 00F44073 		and	r3, r0, #768
 755 0004 B3F5407F 		cmp	r3, #768
 756 0008 084B     		ldr	r3, .L73
 757 000a 08D1     		bne	.L72
 995:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   { /* If HSE is selected as RTC clock source, configure HSE division factor for RTC clock */
 996:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     tmpreg = RCC->CFGR;
 758              		.loc 1 996 0
 759 000c 9968     		ldr	r1, [r3, #8]
 760              	.LVL71:
 997:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
 998:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     /* Clear RTCPRE[4:0] bits */
 999:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     tmpreg &= ~RCC_CFGR_RTCPRE;
1000:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1001:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     /* Configure HSE division factor for RTC clock */
1002:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     tmpreg |= (RCC_RTCCLKSource & 0xFFFFCFF);
 761              		.loc 1 1002 0
 762 000e 20F07042 		bic	r2, r0, #-268435456
 999:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     tmpreg &= ~RCC_CFGR_RTCPRE;
 763              		.loc 1 999 0
 764 0012 21F4F811 		bic	r1, r1, #2031616
 765              	.LVL72:
 766              		.loc 1 1002 0
 767 0016 22F44072 		bic	r2, r2, #768
 768 001a 0A43     		orrs	r2, r2, r1
 769              	.LVL73:
1003:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1004:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     /* Store the new value */
1005:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->CFGR = tmpreg;
 770              		.loc 1 1005 0
 771 001c 9A60     		str	r2, [r3, #8]
 772              	.LVL74:
 773              	.L72:
1006:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1007:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     
1008:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Select the RTC clock source */
1009:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->BDCR |= (RCC_RTCCLKSource & 0x00000FFF);
 774              		.loc 1 1009 0
 775 001e 196F     		ldr	r1, [r3, #112]
 776 0020 0005     		lsls	r0, r0, #20
 777              	.LVL75:
 778 0022 41EA1052 		orr	r2, r1, r0, lsr #20
 779 0026 1A67     		str	r2, [r3, #112]
 780 0028 7047     		bx	lr
 781              	.L74:
 782 002a 00BF     		.align	2
 783              	.L73:
 784 002c 00380240 		.word	1073887232
 785              		.cfi_endproc
 786              	.LFE76:
 788              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 789              		.align	1
 790              		.global	RCC_RTCCLKCmd
 791              		.thumb
 792              		.thumb_func
 794              	RCC_RTCCLKCmd:
 795              	.LFB77:
1010:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1011:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1012:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1013:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the RTC clock.
1014:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This function must be used only after the RTC clock source was selected
1015:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         using the RCC_RTCCLKConfig function.
1016:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
1017:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1018:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1019:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
1020:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 796              		.loc 1 1020 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801              	.LVL76:
1021:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1022:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1023:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1024:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 802              		.loc 1 1024 0
 803 0000 014B     		ldr	r3, .L76
 804 0002 1860     		str	r0, [r3, #0]
 805 0004 7047     		bx	lr
 806              	.L77:
 807 0006 00BF     		.align	2
 808              	.L76:
 809 0008 3C0E4742 		.word	1111952956
 810              		.cfi_endproc
 811              	.LFE77:
 813              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 814              		.align	1
 815              		.global	RCC_BackupResetCmd
 816              		.thumb
 817              		.thumb_func
 819              	RCC_BackupResetCmd:
 820              	.LFB78:
1025:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1026:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1027:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1028:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1029:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This function resets the RTC peripheral (including the backup registers)
1030:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         and the RTC clock source selection in RCC_CSR register.
1031:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   The BKPSRAM is not affected by this reset.    
1032:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1033:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1034:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1035:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1036:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1037:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 821              		.loc 1 1037 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 826              	.LVL77:
1038:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1039:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1040:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 827              		.loc 1 1040 0
 828 0000 014B     		ldr	r3, .L79
 829 0002 1860     		str	r0, [r3, #0]
 830 0004 7047     		bx	lr
 831              	.L80:
 832 0006 00BF     		.align	2
 833              	.L79:
 834 0008 400E4742 		.word	1111952960
 835              		.cfi_endproc
 836              	.LFE78:
 838              		.section	.text.RCC_I2SCLKConfig,"ax",%progbits
 839              		.align	1
 840              		.global	RCC_I2SCLKConfig
 841              		.thumb
 842              		.thumb_func
 844              	RCC_I2SCLKConfig:
 845              	.LFB79:
1041:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1042:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1043:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1044:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1045:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *
1046:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This function must be called before enabling the I2S APB clock.
1047:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   This function applies only to Silicon RevisionB and RevisionY.
1048:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *
1049:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1050:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
1051:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_PLLI2S: PLLI2S clock used as I2S clock source
1052:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_Ext: External clock mapped on the I2S_CKIN pin
1053:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                                        used as I2S clock source
1054:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1055:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1056:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1057:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 846              		.loc 1 1057 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851              	.LVL78:
1058:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1059:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1060:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1061:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint32_t *) CFGR_I2SSRC_BB = RCC_I2SCLKSource;
 852              		.loc 1 1061 0
 853 0000 014B     		ldr	r3, .L82
 854 0002 1860     		str	r0, [r3, #0]
 855 0004 7047     		bx	lr
 856              	.L83:
 857 0006 00BF     		.align	2
 858              	.L82:
 859 0008 5C014742 		.word	1111949660
 860              		.cfi_endproc
 861              	.LFE79:
 863              		.section	.text.RCC_AHB1PeriphClockCmd,"ax",%progbits
 864              		.align	1
 865              		.global	RCC_AHB1PeriphClockCmd
 866              		.thumb
 867              		.thumb_func
 869              	RCC_AHB1PeriphClockCmd:
 870              	.LFB80:
1062:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1063:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1064:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1065:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock.
1066:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1067:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1068:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         using it.   
1069:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
1070:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1071:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
1072:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
1073:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
1074:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
1075:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
1076:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
1077:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
1078:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
1079:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
1080:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
1081:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
1082:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
1083:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
1084:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
1085:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
1086:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
1087:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
1088:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
1089:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
1090:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1091:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1092:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1093:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1094:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
1095:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 871              		.loc 1 1095 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 876              	.LVL79:
 877 0000 044B     		ldr	r3, .L88
1096:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1097:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));
1098:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1099:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1101:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1102:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB1ENR |= RCC_AHB1Periph;
 878              		.loc 1 1102 0
 879 0002 1A6B     		ldr	r2, [r3, #48]
1100:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 880              		.loc 1 1100 0
 881 0004 09B1     		cbz	r1, .L85
 882              		.loc 1 1102 0
 883 0006 1043     		orrs	r0, r0, r2
 884              	.LVL80:
 885 0008 01E0     		b	.L87
 886              	.LVL81:
 887              	.L85:
1103:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1104:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1105:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1106:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB1ENR &= ~RCC_AHB1Periph;
 888              		.loc 1 1106 0
 889 000a 22EA0000 		bic	r0, r2, r0
 890              	.LVL82:
 891              	.L87:
 892 000e 1863     		str	r0, [r3, #48]
 893 0010 7047     		bx	lr
 894              	.L89:
 895 0012 00BF     		.align	2
 896              	.L88:
 897 0014 00380240 		.word	1073887232
 898              		.cfi_endproc
 899              	.LFE80:
 901              		.section	.text.RCC_AHB2PeriphClockCmd,"ax",%progbits
 902              		.align	1
 903              		.global	RCC_AHB2PeriphClockCmd
 904              		.thumb
 905              		.thumb_func
 907              	RCC_AHB2PeriphClockCmd:
 908              	.LFB81:
1107:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1108:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1109:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1110:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1111:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock.
1112:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1113:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1114:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         using it. 
1115:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
1116:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1117:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
1118:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
1119:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
1120:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
1121:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
1122:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1123:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1124:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1125:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1126:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AHB2PeriphClockCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
1127:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 909              		.loc 1 1127 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              		@ link register save eliminated.
 914              	.LVL83:
 915 0000 044B     		ldr	r3, .L94
1128:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1129:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
1130:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1131:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1132:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1133:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1134:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB2ENR |= RCC_AHB2Periph;
 916              		.loc 1 1134 0
 917 0002 5A6B     		ldr	r2, [r3, #52]
1132:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 918              		.loc 1 1132 0
 919 0004 09B1     		cbz	r1, .L91
 920              		.loc 1 1134 0
 921 0006 1043     		orrs	r0, r0, r2
 922              	.LVL84:
 923 0008 01E0     		b	.L93
 924              	.LVL85:
 925              	.L91:
1135:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1136:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1137:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1138:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB2ENR &= ~RCC_AHB2Periph;
 926              		.loc 1 1138 0
 927 000a 22EA0000 		bic	r0, r2, r0
 928              	.LVL86:
 929              	.L93:
 930 000e 5863     		str	r0, [r3, #52]
 931 0010 7047     		bx	lr
 932              	.L95:
 933 0012 00BF     		.align	2
 934              	.L94:
 935 0014 00380240 		.word	1073887232
 936              		.cfi_endproc
 937              	.LFE81:
 939              		.section	.text.RCC_AHB3PeriphClockCmd,"ax",%progbits
 940              		.align	1
 941              		.global	RCC_AHB3PeriphClockCmd
 942              		.thumb
 943              		.thumb_func
 945              	RCC_AHB3PeriphClockCmd:
 946              	.LFB82:
1139:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1140:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1141:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1142:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1143:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock.
1144:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1145:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1146:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         using it. 
1147:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
1148:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter must be: RCC_AHB3Periph_FSMC
1149:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1150:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1151:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1152:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1153:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AHB3PeriphClockCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
1154:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 947              		.loc 1 1154 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              		@ link register save eliminated.
 952              	.LVL87:
 953 0000 044B     		ldr	r3, .L100
1155:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1156:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));  
1157:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1158:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1160:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1161:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB3ENR |= RCC_AHB3Periph;
 954              		.loc 1 1161 0
 955 0002 9A6B     		ldr	r2, [r3, #56]
1159:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 956              		.loc 1 1159 0
 957 0004 09B1     		cbz	r1, .L97
 958              		.loc 1 1161 0
 959 0006 1043     		orrs	r0, r0, r2
 960              	.LVL88:
 961 0008 01E0     		b	.L99
 962              	.LVL89:
 963              	.L97:
1162:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1163:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1164:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1165:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB3ENR &= ~RCC_AHB3Periph;
 964              		.loc 1 1165 0
 965 000a 22EA0000 		bic	r0, r2, r0
 966              	.LVL90:
 967              	.L99:
 968 000e 9863     		str	r0, [r3, #56]
 969 0010 7047     		bx	lr
 970              	.L101:
 971 0012 00BF     		.align	2
 972              	.L100:
 973 0014 00380240 		.word	1073887232
 974              		.cfi_endproc
 975              	.LFE82:
 977              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 978              		.align	1
 979              		.global	RCC_APB1PeriphClockCmd
 980              		.thumb
 981              		.thumb_func
 983              	RCC_APB1PeriphClockCmd:
 984              	.LFB83:
1166:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1167:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1168:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1169:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1170:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1171:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1172:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1173:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         using it. 
1174:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1175:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1176:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
1177:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
1178:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
1179:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
1180:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
1181:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
1182:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
1183:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
1184:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
1185:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
1186:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
1187:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
1188:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
1189:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
1190:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
1191:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
1192:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
1193:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
1194:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
1195:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
1196:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
1197:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
1198:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
1199:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1200:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1201:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1202:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1203:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1204:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 985              		.loc 1 1204 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990              	.LVL91:
 991 0000 044B     		ldr	r3, .L106
1205:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1206:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));  
1207:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1208:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1209:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1210:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1211:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 992              		.loc 1 1211 0
 993 0002 1A6C     		ldr	r2, [r3, #64]
1209:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 994              		.loc 1 1209 0
 995 0004 09B1     		cbz	r1, .L103
 996              		.loc 1 1211 0
 997 0006 1043     		orrs	r0, r0, r2
 998              	.LVL92:
 999 0008 01E0     		b	.L105
 1000              	.LVL93:
 1001              	.L103:
1212:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1213:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1214:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1215:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 1002              		.loc 1 1215 0
 1003 000a 22EA0000 		bic	r0, r2, r0
 1004              	.LVL94:
 1005              	.L105:
 1006 000e 1864     		str	r0, [r3, #64]
 1007 0010 7047     		bx	lr
 1008              	.L107:
 1009 0012 00BF     		.align	2
 1010              	.L106:
 1011 0014 00380240 		.word	1073887232
 1012              		.cfi_endproc
 1013              	.LFE83:
 1015              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 1016              		.align	1
 1017              		.global	RCC_APB2PeriphClockCmd
 1018              		.thumb
 1019              		.thumb_func
 1021              	RCC_APB2PeriphClockCmd:
 1022              	.LFB84:
1216:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1217:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1218:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1219:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1220:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1221:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1222:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1223:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         using it.
1224:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1225:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1226:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
1227:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
1228:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
1229:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
1230:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
1231:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
1232:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
1233:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
1234:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
1235:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
1236:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
1237:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
1238:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
1239:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1240:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1241:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1242:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1243:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1244:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1023              		.loc 1 1244 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
 1028              	.LVL95:
 1029 0000 044B     		ldr	r3, .L112
1245:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1246:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1247:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1248:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1249:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1250:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1251:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1030              		.loc 1 1251 0
 1031 0002 5A6C     		ldr	r2, [r3, #68]
1249:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1032              		.loc 1 1249 0
 1033 0004 09B1     		cbz	r1, .L109
 1034              		.loc 1 1251 0
 1035 0006 1043     		orrs	r0, r0, r2
 1036              	.LVL96:
 1037 0008 01E0     		b	.L111
 1038              	.LVL97:
 1039              	.L109:
1252:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1253:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1254:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1255:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1040              		.loc 1 1255 0
 1041 000a 22EA0000 		bic	r0, r2, r0
 1042              	.LVL98:
 1043              	.L111:
 1044 000e 5864     		str	r0, [r3, #68]
 1045 0010 7047     		bx	lr
 1046              	.L113:
 1047 0012 00BF     		.align	2
 1048              	.L112:
 1049 0014 00380240 		.word	1073887232
 1050              		.cfi_endproc
 1051              	.LFE84:
 1053              		.section	.text.RCC_AHB1PeriphResetCmd,"ax",%progbits
 1054              		.align	1
 1055              		.global	RCC_AHB1PeriphResetCmd
 1056              		.thumb
 1057              		.thumb_func
 1059              	RCC_AHB1PeriphResetCmd:
 1060              	.LFB85:
1256:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1257:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1258:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1259:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1260:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Forces or releases AHB1 peripheral reset.
1261:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_AHB1Periph: specifies the AHB1 peripheral to reset.
1262:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1263:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:   GPIOA clock
1264:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:   GPIOB clock 
1265:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:   GPIOC clock
1266:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:   GPIOD clock
1267:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:   GPIOE clock
1268:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:   GPIOF clock
1269:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
1270:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
1271:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:   GPIOI clock
1272:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:     CRC clock
1273:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:    DMA1 clock
1274:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:    DMA2 clock
1275:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC: Ethernet MAC clock
1276:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:  USB OTG HS clock
1277:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *                  
1278:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1279:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1280:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1281:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1282:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AHB1PeriphResetCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
1283:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1061              		.loc 1 1283 0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065              		@ link register save eliminated.
 1066              	.LVL99:
 1067 0000 044B     		ldr	r3, .L118
1284:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1285:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_AHB1_RESET_PERIPH(RCC_AHB1Periph));
1286:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1287:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1288:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1289:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1290:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB1RSTR |= RCC_AHB1Periph;
 1068              		.loc 1 1290 0
 1069 0002 1A69     		ldr	r2, [r3, #16]
1288:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1070              		.loc 1 1288 0
 1071 0004 09B1     		cbz	r1, .L115
 1072              		.loc 1 1290 0
 1073 0006 1043     		orrs	r0, r0, r2
 1074              	.LVL100:
 1075 0008 01E0     		b	.L117
 1076              	.LVL101:
 1077              	.L115:
1291:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1292:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1293:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1294:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB1RSTR &= ~RCC_AHB1Periph;
 1078              		.loc 1 1294 0
 1079 000a 22EA0000 		bic	r0, r2, r0
 1080              	.LVL102:
 1081              	.L117:
 1082 000e 1861     		str	r0, [r3, #16]
 1083 0010 7047     		bx	lr
 1084              	.L119:
 1085 0012 00BF     		.align	2
 1086              	.L118:
 1087 0014 00380240 		.word	1073887232
 1088              		.cfi_endproc
 1089              	.LFE85:
 1091              		.section	.text.RCC_AHB2PeriphResetCmd,"ax",%progbits
 1092              		.align	1
 1093              		.global	RCC_AHB2PeriphResetCmd
 1094              		.thumb
 1095              		.thumb_func
 1097              	RCC_AHB2PeriphResetCmd:
 1098              	.LFB86:
1295:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1296:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1297:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1298:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1299:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Forces or releases AHB2 peripheral reset.
1300:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_AHB2Periph: specifies the AHB2 peripheral to reset.
1301:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1302:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
1303:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
1304:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
1305:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
1306:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
1307:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1308:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1309:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1310:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1311:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AHB2PeriphResetCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
1312:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1099              		.loc 1 1312 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104              	.LVL103:
 1105 0000 044B     		ldr	r3, .L124
1313:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1314:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
1315:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1316:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1317:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1318:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1319:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB2RSTR |= RCC_AHB2Periph;
 1106              		.loc 1 1319 0
 1107 0002 5A69     		ldr	r2, [r3, #20]
1317:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1108              		.loc 1 1317 0
 1109 0004 09B1     		cbz	r1, .L121
 1110              		.loc 1 1319 0
 1111 0006 1043     		orrs	r0, r0, r2
 1112              	.LVL104:
 1113 0008 01E0     		b	.L123
 1114              	.LVL105:
 1115              	.L121:
1320:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1321:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1322:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1323:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB2RSTR &= ~RCC_AHB2Periph;
 1116              		.loc 1 1323 0
 1117 000a 22EA0000 		bic	r0, r2, r0
 1118              	.LVL106:
 1119              	.L123:
 1120 000e 5861     		str	r0, [r3, #20]
 1121 0010 7047     		bx	lr
 1122              	.L125:
 1123 0012 00BF     		.align	2
 1124              	.L124:
 1125 0014 00380240 		.word	1073887232
 1126              		.cfi_endproc
 1127              	.LFE86:
 1129              		.section	.text.RCC_AHB3PeriphResetCmd,"ax",%progbits
 1130              		.align	1
 1131              		.global	RCC_AHB3PeriphResetCmd
 1132              		.thumb
 1133              		.thumb_func
 1135              	RCC_AHB3PeriphResetCmd:
 1136              	.LFB87:
1324:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1325:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1326:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1327:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1328:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Forces or releases AHB3 peripheral reset.
1329:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_AHB3Periph: specifies the AHB3 peripheral to reset.
1330:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter must be: RCC_AHB3Periph_FSMC
1331:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1332:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1333:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1334:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1335:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AHB3PeriphResetCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
1336:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1137              		.loc 1 1336 0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141              		@ link register save eliminated.
 1142              	.LVL107:
 1143 0000 044B     		ldr	r3, .L130
1337:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1338:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
1339:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1340:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1341:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1342:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1343:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB3RSTR |= RCC_AHB3Periph;
 1144              		.loc 1 1343 0
 1145 0002 9A69     		ldr	r2, [r3, #24]
1341:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1146              		.loc 1 1341 0
 1147 0004 09B1     		cbz	r1, .L127
 1148              		.loc 1 1343 0
 1149 0006 1043     		orrs	r0, r0, r2
 1150              	.LVL108:
 1151 0008 01E0     		b	.L129
 1152              	.LVL109:
 1153              	.L127:
1344:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1345:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1346:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1347:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB3RSTR &= ~RCC_AHB3Periph;
 1154              		.loc 1 1347 0
 1155 000a 22EA0000 		bic	r0, r2, r0
 1156              	.LVL110:
 1157              	.L129:
 1158 000e 9861     		str	r0, [r3, #24]
 1159 0010 7047     		bx	lr
 1160              	.L131:
 1161 0012 00BF     		.align	2
 1162              	.L130:
 1163 0014 00380240 		.word	1073887232
 1164              		.cfi_endproc
 1165              	.LFE87:
 1167              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 1168              		.align	1
 1169              		.global	RCC_APB1PeriphResetCmd
 1170              		.thumb
 1171              		.thumb_func
 1173              	RCC_APB1PeriphResetCmd:
 1174              	.LFB88:
1348:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1349:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1350:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1351:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1352:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1353:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1354:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1355:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
1356:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
1357:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
1358:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
1359:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
1360:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
1361:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
1362:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
1363:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
1364:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
1365:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
1366:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
1367:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
1368:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
1369:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
1370:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
1371:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
1372:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
1373:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
1374:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
1375:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
1376:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
1377:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
1378:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1379:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1380:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1381:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1382:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1383:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1175              		.loc 1 1383 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              		@ link register save eliminated.
 1180              	.LVL111:
 1181 0000 044B     		ldr	r3, .L136
1384:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1385:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1386:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1387:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1388:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1389:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1182              		.loc 1 1389 0
 1183 0002 1A6A     		ldr	r2, [r3, #32]
1387:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1184              		.loc 1 1387 0
 1185 0004 09B1     		cbz	r1, .L133
 1186              		.loc 1 1389 0
 1187 0006 1043     		orrs	r0, r0, r2
 1188              	.LVL112:
 1189 0008 01E0     		b	.L135
 1190              	.LVL113:
 1191              	.L133:
1390:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1391:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1392:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1393:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 1192              		.loc 1 1393 0
 1193 000a 22EA0000 		bic	r0, r2, r0
 1194              	.LVL114:
 1195              	.L135:
 1196 000e 1862     		str	r0, [r3, #32]
 1197 0010 7047     		bx	lr
 1198              	.L137:
 1199 0012 00BF     		.align	2
 1200              	.L136:
 1201 0014 00380240 		.word	1073887232
 1202              		.cfi_endproc
 1203              	.LFE88:
 1205              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 1206              		.align	1
 1207              		.global	RCC_APB2PeriphResetCmd
 1208              		.thumb
 1209              		.thumb_func
 1211              	RCC_APB2PeriphResetCmd:
 1212              	.LFB89:
1394:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1395:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1396:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1397:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1398:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1399:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1400:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1401:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
1402:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
1403:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
1404:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
1405:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
1406:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
1407:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
1408:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
1409:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
1410:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
1411:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
1412:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
1413:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
1414:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1415:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1416:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1417:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1418:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1419:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1213              		.loc 1 1419 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 1218              	.LVL115:
 1219 0000 044B     		ldr	r3, .L142
1420:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1421:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_APB2_RESET_PERIPH(RCC_APB2Periph));
1422:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1423:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1424:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1425:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1220              		.loc 1 1425 0
 1221 0002 5A6A     		ldr	r2, [r3, #36]
1423:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1222              		.loc 1 1423 0
 1223 0004 09B1     		cbz	r1, .L139
 1224              		.loc 1 1425 0
 1225 0006 1043     		orrs	r0, r0, r2
 1226              	.LVL116:
 1227 0008 01E0     		b	.L141
 1228              	.LVL117:
 1229              	.L139:
1426:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1427:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1428:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1429:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 1230              		.loc 1 1429 0
 1231 000a 22EA0000 		bic	r0, r2, r0
 1232              	.LVL118:
 1233              	.L141:
 1234 000e 5862     		str	r0, [r3, #36]
 1235 0010 7047     		bx	lr
 1236              	.L143:
 1237 0012 00BF     		.align	2
 1238              	.L142:
 1239 0014 00380240 		.word	1073887232
 1240              		.cfi_endproc
 1241              	.LFE89:
 1243              		.section	.text.RCC_AHB1PeriphClockLPModeCmd,"ax",%progbits
 1244              		.align	1
 1245              		.global	RCC_AHB1PeriphClockLPModeCmd
 1246              		.thumb
 1247              		.thumb_func
 1249              	RCC_AHB1PeriphClockLPModeCmd:
 1250              	.LFB90:
1430:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1431:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1432:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1433:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1434:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock during Low Power (Sleep) mode.
1435:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
1436:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         power consumption.
1437:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
1438:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
1439:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
1440:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1441:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
1442:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
1443:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
1444:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
1445:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
1446:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
1447:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
1448:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
1449:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
1450:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
1451:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
1452:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
1453:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
1454:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
1455:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
1456:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
1457:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
1458:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
1459:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
1460:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1461:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1462:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1463:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1464:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AHB1PeriphClockLPModeCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
1465:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1251              		.loc 1 1465 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 0
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 1255              		@ link register save eliminated.
 1256              	.LVL119:
 1257 0000 044B     		ldr	r3, .L148
1466:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1467:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_AHB1_LPMODE_PERIPH(RCC_AHB1Periph));
1468:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1469:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1470:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1471:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB1LPENR |= RCC_AHB1Periph;
 1258              		.loc 1 1471 0
 1259 0002 1A6D     		ldr	r2, [r3, #80]
1469:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1260              		.loc 1 1469 0
 1261 0004 09B1     		cbz	r1, .L145
 1262              		.loc 1 1471 0
 1263 0006 1043     		orrs	r0, r0, r2
 1264              	.LVL120:
 1265 0008 01E0     		b	.L147
 1266              	.LVL121:
 1267              	.L145:
1472:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1473:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1474:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1475:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB1LPENR &= ~RCC_AHB1Periph;
 1268              		.loc 1 1475 0
 1269 000a 22EA0000 		bic	r0, r2, r0
 1270              	.LVL122:
 1271              	.L147:
 1272 000e 1865     		str	r0, [r3, #80]
 1273 0010 7047     		bx	lr
 1274              	.L149:
 1275 0012 00BF     		.align	2
 1276              	.L148:
 1277 0014 00380240 		.word	1073887232
 1278              		.cfi_endproc
 1279              	.LFE90:
 1281              		.section	.text.RCC_AHB2PeriphClockLPModeCmd,"ax",%progbits
 1282              		.align	1
 1283              		.global	RCC_AHB2PeriphClockLPModeCmd
 1284              		.thumb
 1285              		.thumb_func
 1287              	RCC_AHB2PeriphClockLPModeCmd:
 1288              	.LFB91:
1476:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1477:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1478:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1479:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1480:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock during Low Power (Sleep) mode.
1481:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
1482:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *           power consumption.
1483:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
1484:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
1485:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
1486:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1487:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
1488:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
1489:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
1490:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
1491:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock  
1492:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1493:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1494:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1495:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1496:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AHB2PeriphClockLPModeCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
1497:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1289              		.loc 1 1497 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              		@ link register save eliminated.
 1294              	.LVL123:
 1295 0000 044B     		ldr	r3, .L154
1498:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1499:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
1500:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1501:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1502:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1503:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB2LPENR |= RCC_AHB2Periph;
 1296              		.loc 1 1503 0
 1297 0002 5A6D     		ldr	r2, [r3, #84]
1501:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1298              		.loc 1 1501 0
 1299 0004 09B1     		cbz	r1, .L151
 1300              		.loc 1 1503 0
 1301 0006 1043     		orrs	r0, r0, r2
 1302              	.LVL124:
 1303 0008 01E0     		b	.L153
 1304              	.LVL125:
 1305              	.L151:
1504:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1505:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1506:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1507:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB2LPENR &= ~RCC_AHB2Periph;
 1306              		.loc 1 1507 0
 1307 000a 22EA0000 		bic	r0, r2, r0
 1308              	.LVL126:
 1309              	.L153:
 1310 000e 5865     		str	r0, [r3, #84]
 1311 0010 7047     		bx	lr
 1312              	.L155:
 1313 0012 00BF     		.align	2
 1314              	.L154:
 1315 0014 00380240 		.word	1073887232
 1316              		.cfi_endproc
 1317              	.LFE91:
 1319              		.section	.text.RCC_AHB3PeriphClockLPModeCmd,"ax",%progbits
 1320              		.align	1
 1321              		.global	RCC_AHB3PeriphClockLPModeCmd
 1322              		.thumb
 1323              		.thumb_func
 1325              	RCC_AHB3PeriphClockLPModeCmd:
 1326              	.LFB92:
1508:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1509:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1510:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1511:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1512:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock during Low Power (Sleep) mode.
1513:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
1514:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         power consumption.
1515:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
1516:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
1517:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
1518:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter must be: RCC_AHB3Periph_FSMC
1519:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1520:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1521:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1522:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1523:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_AHB3PeriphClockLPModeCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
1524:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1327              		.loc 1 1524 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331              		@ link register save eliminated.
 1332              	.LVL127:
 1333 0000 044B     		ldr	r3, .L160
1525:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1526:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
1527:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1528:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1529:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1530:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB3LPENR |= RCC_AHB3Periph;
 1334              		.loc 1 1530 0
 1335 0002 9A6D     		ldr	r2, [r3, #88]
1528:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1336              		.loc 1 1528 0
 1337 0004 09B1     		cbz	r1, .L157
 1338              		.loc 1 1530 0
 1339 0006 1043     		orrs	r0, r0, r2
 1340              	.LVL128:
 1341 0008 01E0     		b	.L159
 1342              	.LVL129:
 1343              	.L157:
1531:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1532:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1533:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1534:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->AHB3LPENR &= ~RCC_AHB3Periph;
 1344              		.loc 1 1534 0
 1345 000a 22EA0000 		bic	r0, r2, r0
 1346              	.LVL130:
 1347              	.L159:
 1348 000e 9865     		str	r0, [r3, #88]
 1349 0010 7047     		bx	lr
 1350              	.L161:
 1351 0012 00BF     		.align	2
 1352              	.L160:
 1353 0014 00380240 		.word	1073887232
 1354              		.cfi_endproc
 1355              	.LFE92:
 1357              		.section	.text.RCC_APB1PeriphClockLPModeCmd,"ax",%progbits
 1358              		.align	1
 1359              		.global	RCC_APB1PeriphClockLPModeCmd
 1360              		.thumb
 1361              		.thumb_func
 1363              	RCC_APB1PeriphClockLPModeCmd:
 1364              	.LFB93:
1535:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1536:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1537:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1538:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1539:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the APB1 peripheral clock during Low Power (Sleep) mode.
1540:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
1541:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         power consumption.
1542:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
1543:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
1544:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1545:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1546:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
1547:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
1548:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
1549:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
1550:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
1551:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
1552:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
1553:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
1554:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
1555:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
1556:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
1557:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
1558:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
1559:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
1560:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
1561:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
1562:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
1563:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
1564:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
1565:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
1566:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
1567:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
1568:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
1569:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1570:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1571:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1572:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1573:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_APB1PeriphClockLPModeCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1574:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1365              		.loc 1 1574 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 1369              		@ link register save eliminated.
 1370              	.LVL131:
 1371 0000 044B     		ldr	r3, .L166
1575:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1576:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1577:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1578:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1579:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1580:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB1LPENR |= RCC_APB1Periph;
 1372              		.loc 1 1580 0
 1373 0002 1A6E     		ldr	r2, [r3, #96]
1578:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1374              		.loc 1 1578 0
 1375 0004 09B1     		cbz	r1, .L163
 1376              		.loc 1 1580 0
 1377 0006 1043     		orrs	r0, r0, r2
 1378              	.LVL132:
 1379 0008 01E0     		b	.L165
 1380              	.LVL133:
 1381              	.L163:
1581:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1582:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1583:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1584:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB1LPENR &= ~RCC_APB1Periph;
 1382              		.loc 1 1584 0
 1383 000a 22EA0000 		bic	r0, r2, r0
 1384              	.LVL134:
 1385              	.L165:
 1386 000e 1866     		str	r0, [r3, #96]
 1387 0010 7047     		bx	lr
 1388              	.L167:
 1389 0012 00BF     		.align	2
 1390              	.L166:
 1391 0014 00380240 		.word	1073887232
 1392              		.cfi_endproc
 1393              	.LFE93:
 1395              		.section	.text.RCC_APB2PeriphClockLPModeCmd,"ax",%progbits
 1396              		.align	1
 1397              		.global	RCC_APB2PeriphClockLPModeCmd
 1398              		.thumb
 1399              		.thumb_func
 1401              	RCC_APB2PeriphClockLPModeCmd:
 1402              	.LFB94:
1585:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1586:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1587:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1588:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1589:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the APB2 peripheral clock during Low Power (Sleep) mode.
1590:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
1591:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         power consumption.
1592:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
1593:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
1594:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1595:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1596:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
1597:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
1598:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
1599:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
1600:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
1601:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
1602:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
1603:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
1604:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
1605:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
1606:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
1607:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
1608:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
1609:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1610:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1611:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1612:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1613:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_APB2PeriphClockLPModeCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1614:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1403              		.loc 1 1614 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              		@ link register save eliminated.
 1408              	.LVL135:
 1409 0000 044B     		ldr	r3, .L172
1615:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1616:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1617:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1618:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1619:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1620:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB2LPENR |= RCC_APB2Periph;
 1410              		.loc 1 1620 0
 1411 0002 5A6E     		ldr	r2, [r3, #100]
1618:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1412              		.loc 1 1618 0
 1413 0004 09B1     		cbz	r1, .L169
 1414              		.loc 1 1620 0
 1415 0006 1043     		orrs	r0, r0, r2
 1416              	.LVL136:
 1417 0008 01E0     		b	.L171
 1418              	.LVL137:
 1419              	.L169:
1621:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1622:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1623:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1624:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     RCC->APB2LPENR &= ~RCC_APB2Periph;
 1420              		.loc 1 1624 0
 1421 000a 22EA0000 		bic	r0, r2, r0
 1422              	.LVL138:
 1423              	.L171:
 1424 000e 5866     		str	r0, [r3, #100]
 1425 0010 7047     		bx	lr
 1426              	.L173:
 1427 0012 00BF     		.align	2
 1428              	.L172:
 1429 0014 00380240 		.word	1073887232
 1430              		.cfi_endproc
 1431              	.LFE94:
 1433              		.section	.text.RCC_ITConfig,"ax",%progbits
 1434              		.align	1
 1435              		.global	RCC_ITConfig
 1436              		.thumb
 1437              		.thumb_func
 1439              	RCC_ITConfig:
 1440              	.LFB95:
1625:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1626:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1627:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1628:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1629:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @}
1630:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1631:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1632:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /** @defgroup RCC_Group4 Interrupts and flags management functions
1633:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  *  @brief   Interrupts and flags management functions 
1634:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  *
1635:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** @verbatim   
1636:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  ===============================================================================
1637:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****                    Interrupts and flags management functions
1638:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****  ===============================================================================  
1639:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1640:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** @endverbatim
1641:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @{
1642:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1643:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1644:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1645:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
1646:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
1647:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1648:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
1649:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
1650:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
1651:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
1652:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
1653:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt  
1654:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
1655:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1656:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1657:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1658:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
1659:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1441              		.loc 1 1659 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445              		@ link register save eliminated.
 1446              	.LVL139:
 1447 0000 044B     		ldr	r3, .L178
1660:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1661:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
1662:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1663:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
1664:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1665:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to enable the selected interrupts */
1666:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 1448              		.loc 1 1666 0
 1449 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
1663:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (NewState != DISABLE)
 1450              		.loc 1 1663 0
 1451 0004 09B1     		cbz	r1, .L175
 1452              		.loc 1 1666 0
 1453 0006 1043     		orrs	r0, r0, r2
 1454              	.LVL140:
 1455 0008 01E0     		b	.L177
 1456              	.LVL141:
 1457              	.L175:
1667:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1668:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1669:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1670:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to disable the selected interrupts */
1671:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 1458              		.loc 1 1671 0
 1459 000a 22EA0000 		bic	r0, r2, r0
 1460              	.LVL142:
 1461              	.L177:
 1462 000e 1870     		strb	r0, [r3, #0]
 1463 0010 7047     		bx	lr
 1464              	.L179:
 1465 0012 00BF     		.align	2
 1466              	.L178:
 1467 0014 0D380240 		.word	1073887245
 1468              		.cfi_endproc
 1469              	.LFE95:
 1471              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 1472              		.align	1
 1473              		.global	RCC_GetFlagStatus
 1474              		.thumb
 1475              		.thumb_func
 1477              	RCC_GetFlagStatus:
 1478              	.LFB96:
1672:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1673:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1674:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1675:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1676:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1677:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1678:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
1679:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1680:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1681:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_PLLRDY: main PLL clock ready
1682:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_PLLI2SRDY: PLLI2S clock ready
1683:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1684:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1685:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_BORRST: POR/PDR or BOR reset
1686:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_PINRST: Pin reset
1687:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_PORRST: POR/PDR reset
1688:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_SFTRST: Software reset
1689:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1690:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1691:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_FLAG_LPWRRST: Low Power reset
1692:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1693:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1694:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1695:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1479              		.loc 1 1695 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 1483              		@ link register save eliminated.
 1484              	.LVL143:
1696:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t tmp = 0;
1697:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   uint32_t statusreg = 0;
1698:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   FlagStatus bitstatus = RESET;
1699:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1700:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1701:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1702:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1703:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Get the RCC register index */
1704:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = RCC_FLAG >> 5;
 1485              		.loc 1 1704 0
 1486 0000 4309     		lsrs	r3, r0, #5
 1487              	.LVL144:
1705:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1488              		.loc 1 1705 0
 1489 0002 012B     		cmp	r3, #1
 1490 0004 074A     		ldr	r2, .L184
 1491 0006 01D1     		bne	.L181
1706:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1707:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     statusreg = RCC->CR;
 1492              		.loc 1 1707 0
 1493 0008 1368     		ldr	r3, [r2, #0]
 1494              	.LVL145:
 1495 000a 03E0     		b	.L182
 1496              	.LVL146:
 1497              	.L181:
1708:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1709:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1498              		.loc 1 1709 0
 1499 000c 022B     		cmp	r3, #2
1710:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1711:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     statusreg = RCC->BDCR;
 1500              		.loc 1 1711 0
 1501 000e 0CBF     		ite	eq
 1502 0010 136F     		ldreq	r3, [r2, #112]
 1503              	.LVL147:
1712:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1713:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else                       /* The flag to check is in CSR register */
1714:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1715:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     statusreg = RCC->CSR;
 1504              		.loc 1 1715 0
 1505 0012 536F     		ldrne	r3, [r2, #116]
 1506              	.LVL148:
 1507              	.L182:
1716:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1717:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1718:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Get the flag position */
1719:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   tmp = RCC_FLAG & FLAG_MASK;
1720:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1508              		.loc 1 1720 0
 1509 0014 00F01F00 		and	r0, r0, #31
 1510              	.LVL149:
 1511 0018 23FA00F1 		lsr	r1, r3, r0
1721:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1722:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     bitstatus = SET;
1723:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1724:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1725:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1726:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     bitstatus = RESET;
1727:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1728:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Return the flag status */
1729:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   return bitstatus;
1730:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 1512              		.loc 1 1730 0
 1513 001c 01F00100 		and	r0, r1, #1
 1514 0020 7047     		bx	lr
 1515              	.L185:
 1516 0022 00BF     		.align	2
 1517              	.L184:
 1518 0024 00380240 		.word	1073887232
 1519              		.cfi_endproc
 1520              	.LFE96:
 1522              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 1523              		.align	1
 1524              		.global	RCC_WaitForHSEStartUp
 1525              		.thumb
 1526              		.thumb_func
 1528              	RCC_WaitForHSEStartUp:
 1529              	.LFB58:
 268:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1530              		.loc 1 268 0
 1531              		.cfi_startproc
 1532              		@ args = 0, pretend = 0, frame = 8
 1533              		@ frame_needed = 0, uses_anonymous_args = 0
 1534 0000 07B5     		push	{r0, r1, r2, lr}
 1535              	.LCFI2:
 1536              		.cfi_def_cfa_offset 16
 1537              		.cfi_offset 0, -16
 1538              		.cfi_offset 1, -12
 1539              		.cfi_offset 2, -8
 1540              		.cfi_offset 14, -4
 269:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   __IO uint32_t startupcounter = 0;
 1541              		.loc 1 269 0
 1542 0002 0023     		movs	r3, #0
 1543 0004 0193     		str	r3, [sp, #4]
 1544              	.LVL150:
 1545              	.L188:
 275:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     hsestatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 1546              		.loc 1 275 0 discriminator 1
 1547 0006 3120     		movs	r0, #49
 1548 0008 FFF7FEFF 		bl	RCC_GetFlagStatus
 1549              	.LVL151:
 276:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     startupcounter++;
 1550              		.loc 1 276 0 discriminator 1
 1551 000c 0199     		ldr	r1, [sp, #4]
 1552 000e 4A1C     		adds	r2, r1, #1
 1553              	.LVL152:
 1554 0010 0192     		str	r2, [sp, #4]
 1555              	.LVL153:
 277:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 1556              		.loc 1 277 0 discriminator 1
 1557 0012 019B     		ldr	r3, [sp, #4]
 1558 0014 B3F5A06F 		cmp	r3, #1280
 1559 0018 01D0     		beq	.L187
 1560 001a 0028     		cmp	r0, #0
 1561 001c F3D0     		beq	.L188
 1562              	.L187:
 279:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 1563              		.loc 1 279 0
 1564 001e 3120     		movs	r0, #49
 1565              	.LVL154:
 1566 0020 FFF7FEFF 		bl	RCC_GetFlagStatus
 1567              	.LVL155:
 288:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 1568              		.loc 1 288 0
 1569 0024 0030     		adds	r0, r0, #0
 1570              	.LVL156:
 1571 0026 18BF     		it	ne
 1572 0028 0120     		movne	r0, #1
 1573 002a 0EBD     		pop	{r1, r2, r3, pc}
 1574              		.cfi_endproc
 1575              	.LFE58:
 1577              		.section	.text.RCC_ClearFlag,"ax",%progbits
 1578              		.align	1
 1579              		.global	RCC_ClearFlag
 1580              		.thumb
 1581              		.thumb_func
 1583              	RCC_ClearFlag:
 1584              	.LFB97:
1731:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1732:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1733:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Clears the RCC reset flags.
1734:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST,  RCC_FLAG_SFTRST,
1735:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *         RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1736:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  None
1737:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1738:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1739:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_ClearFlag(void)
1740:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1585              		.loc 1 1740 0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 0
 1588              		@ frame_needed = 0, uses_anonymous_args = 0
 1589              		@ link register save eliminated.
1741:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1742:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   RCC->CSR |= RCC_CSR_RMVF;
 1590              		.loc 1 1742 0
 1591 0000 024B     		ldr	r3, .L197
 1592 0002 5A6F     		ldr	r2, [r3, #116]
 1593 0004 42F08070 		orr	r0, r2, #16777216
 1594 0008 5867     		str	r0, [r3, #116]
 1595 000a 7047     		bx	lr
 1596              	.L198:
 1597              		.align	2
 1598              	.L197:
 1599 000c 00380240 		.word	1073887232
 1600              		.cfi_endproc
 1601              	.LFE97:
 1603              		.section	.text.RCC_GetITStatus,"ax",%progbits
 1604              		.align	1
 1605              		.global	RCC_GetITStatus
 1606              		.thumb
 1607              		.thumb_func
 1609              	RCC_GetITStatus:
 1610              	.LFB98:
1743:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
1744:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1745:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1746:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1747:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1748:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be one of the following values:
1749:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
1750:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
1751:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
1752:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
1753:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
1754:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt  
1755:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
1756:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1757:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1758:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1759:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1611              		.loc 1 1759 0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
 1615              		@ link register save eliminated.
 1616              	.LVL157:
1760:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   ITStatus bitstatus = RESET;
1761:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1762:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1763:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1764:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1765:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the status of the specified RCC interrupt */
1766:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1617              		.loc 1 1766 0
 1618 0000 034B     		ldr	r3, .L200
 1619 0002 D968     		ldr	r1, [r3, #12]
 1620              	.LVL158:
 1621 0004 0842     		tst	r0, r1
1767:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1768:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     bitstatus = SET;
1769:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1770:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   else
1771:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   {
1772:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****     bitstatus = RESET;
1773:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   }
1774:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Return the RCC_IT status */
1775:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   return  bitstatus;
1776:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** }
 1622              		.loc 1 1776 0
 1623 0006 0CBF     		ite	eq
 1624 0008 0020     		moveq	r0, #0
 1625 000a 0120     		movne	r0, #1
 1626              	.LVL159:
 1627 000c 7047     		bx	lr
 1628              	.L201:
 1629 000e 00BF     		.align	2
 1630              	.L200:
 1631 0010 00380240 		.word	1073887232
 1632              		.cfi_endproc
 1633              	.LFE98:
 1635              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 1636              		.align	1
 1637              		.global	RCC_ClearITPendingBit
 1638              		.thumb
 1639              		.thumb_func
 1641              	RCC_ClearITPendingBit:
 1642              	.LFB99:
1777:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1778:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** /**
1779:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1780:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1781:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *          This parameter can be any combination of the following values:
1782:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
1783:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
1784:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
1785:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
1786:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
1787:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt  
1788:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
1789:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   * @retval None
1790:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   */
1791:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1792:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** {
 1643              		.loc 1 1792 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
 1648              	.LVL160:
1793:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Check the parameters */
1794:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1795:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c **** 
1796:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1797:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****      pending bits */
1798:c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2\stm32f2xx_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1649              		.loc 1 1798 0
 1650 0000 014B     		ldr	r3, .L203
 1651 0002 1870     		strb	r0, [r3, #0]
 1652 0004 7047     		bx	lr
 1653              	.L204:
 1654 0006 00BF     		.align	2
 1655              	.L203:
 1656 0008 0E380240 		.word	1073887246
 1657              		.cfi_endproc
 1658              	.LFE99:
 1660              		.section	.data.APBAHBPrescTable,"aw",%progbits
 1661              		.set	.LANCHOR0,. + 0
 1664              	APBAHBPrescTable:
 1665 0000 00       		.byte	0
 1666 0001 00       		.byte	0
 1667 0002 00       		.byte	0
 1668 0003 00       		.byte	0
 1669 0004 01       		.byte	1
 1670 0005 02       		.byte	2
 1671 0006 03       		.byte	3
 1672 0007 04       		.byte	4
 1673 0008 01       		.byte	1
 1674 0009 02       		.byte	2
 1675 000a 03       		.byte	3
 1676 000b 04       		.byte	4
 1677 000c 06       		.byte	6
 1678 000d 07       		.byte	7
 1679 000e 08       		.byte	8
 1680 000f 09       		.byte	9
 1681              		.text
 1682              	.Letext0:
 1683              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q1\\bin\\../lib/gcc/arm-none-eab
 1684              		.file 3 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx.h"
 1685              		.file 4 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/stm32f2xx_rcc.h"
 1686              		.file 5 "c:/Dropbox/AV_SmartWatch/toolchain_v3/src/libstm32f2/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_rcc.c
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:19     .text.RCC_DeInit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:24     .text.RCC_DeInit:00000000 RCC_DeInit
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:62     .text.RCC_DeInit:0000002c $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:68     .text.RCC_HSEConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:73     .text.RCC_HSEConfig:00000000 RCC_HSEConfig
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:91     .text.RCC_HSEConfig:0000000c $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:96     .text.RCC_AdjustHSICalibrationValue:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:101    .text.RCC_AdjustHSICalibrationValue:00000000 RCC_AdjustHSICalibrationValue
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:125    .text.RCC_AdjustHSICalibrationValue:00000010 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:130    .text.RCC_HSICmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:135    .text.RCC_HSICmd:00000000 RCC_HSICmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:150    .text.RCC_HSICmd:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:155    .text.RCC_LSEConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:160    .text.RCC_LSEConfig:00000000 RCC_LSEConfig
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:199    .text.RCC_LSEConfig:0000001c $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:204    .text.RCC_LSICmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:209    .text.RCC_LSICmd:00000000 RCC_LSICmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:224    .text.RCC_LSICmd:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:229    .text.RCC_PLLConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:234    .text.RCC_PLLConfig:00000000 RCC_PLLConfig
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:264    .text.RCC_PLLConfig:0000001c $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:269    .text.RCC_PLLCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:274    .text.RCC_PLLCmd:00000000 RCC_PLLCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:289    .text.RCC_PLLCmd:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:294    .text.RCC_PLLI2SConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:299    .text.RCC_PLLI2SConfig:00000000 RCC_PLLI2SConfig
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:318    .text.RCC_PLLI2SConfig:00000010 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:323    .text.RCC_PLLI2SCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:328    .text.RCC_PLLI2SCmd:00000000 RCC_PLLI2SCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:343    .text.RCC_PLLI2SCmd:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:348    .text.RCC_ClockSecuritySystemCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:353    .text.RCC_ClockSecuritySystemCmd:00000000 RCC_ClockSecuritySystemCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:368    .text.RCC_ClockSecuritySystemCmd:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:373    .text.RCC_MCO1Config:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:378    .text.RCC_MCO1Config:00000000 RCC_MCO1Config
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:404    .text.RCC_MCO1Config:00000010 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:409    .text.RCC_MCO2Config:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:414    .text.RCC_MCO2Config:00000000 RCC_MCO2Config
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:440    .text.RCC_MCO2Config:00000010 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:445    .text.RCC_SYSCLKConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:450    .text.RCC_SYSCLKConfig:00000000 RCC_SYSCLKConfig
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:474    .text.RCC_SYSCLKConfig:00000010 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:479    .text.RCC_GetSYSCLKSource:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:484    .text.RCC_GetSYSCLKSource:00000000 RCC_GetSYSCLKSource
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:500    .text.RCC_GetSYSCLKSource:0000000c $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:505    .text.RCC_HCLKConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:510    .text.RCC_HCLKConfig:00000000 RCC_HCLKConfig
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:534    .text.RCC_HCLKConfig:00000010 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:539    .text.RCC_PCLK1Config:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:544    .text.RCC_PCLK1Config:00000000 RCC_PCLK1Config
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:568    .text.RCC_PCLK1Config:00000010 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:573    .text.RCC_PCLK2Config:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:578    .text.RCC_PCLK2Config:00000000 RCC_PCLK2Config
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:602    .text.RCC_PCLK2Config:00000010 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:607    .text.RCC_GetClocksFreq:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:612    .text.RCC_GetClocksFreq:00000000 RCC_GetClocksFreq
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:732    .text.RCC_GetClocksFreq:0000007c $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:740    .text.RCC_RTCCLKConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:745    .text.RCC_RTCCLKConfig:00000000 RCC_RTCCLKConfig
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:784    .text.RCC_RTCCLKConfig:0000002c $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:789    .text.RCC_RTCCLKCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:794    .text.RCC_RTCCLKCmd:00000000 RCC_RTCCLKCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:809    .text.RCC_RTCCLKCmd:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:814    .text.RCC_BackupResetCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:819    .text.RCC_BackupResetCmd:00000000 RCC_BackupResetCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:834    .text.RCC_BackupResetCmd:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:839    .text.RCC_I2SCLKConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:844    .text.RCC_I2SCLKConfig:00000000 RCC_I2SCLKConfig
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:859    .text.RCC_I2SCLKConfig:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:864    .text.RCC_AHB1PeriphClockCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:869    .text.RCC_AHB1PeriphClockCmd:00000000 RCC_AHB1PeriphClockCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:897    .text.RCC_AHB1PeriphClockCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:902    .text.RCC_AHB2PeriphClockCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:907    .text.RCC_AHB2PeriphClockCmd:00000000 RCC_AHB2PeriphClockCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:935    .text.RCC_AHB2PeriphClockCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:940    .text.RCC_AHB3PeriphClockCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:945    .text.RCC_AHB3PeriphClockCmd:00000000 RCC_AHB3PeriphClockCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:973    .text.RCC_AHB3PeriphClockCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:978    .text.RCC_APB1PeriphClockCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:983    .text.RCC_APB1PeriphClockCmd:00000000 RCC_APB1PeriphClockCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1011   .text.RCC_APB1PeriphClockCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1016   .text.RCC_APB2PeriphClockCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1021   .text.RCC_APB2PeriphClockCmd:00000000 RCC_APB2PeriphClockCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1049   .text.RCC_APB2PeriphClockCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1054   .text.RCC_AHB1PeriphResetCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1059   .text.RCC_AHB1PeriphResetCmd:00000000 RCC_AHB1PeriphResetCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1087   .text.RCC_AHB1PeriphResetCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1092   .text.RCC_AHB2PeriphResetCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1097   .text.RCC_AHB2PeriphResetCmd:00000000 RCC_AHB2PeriphResetCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1125   .text.RCC_AHB2PeriphResetCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1130   .text.RCC_AHB3PeriphResetCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1135   .text.RCC_AHB3PeriphResetCmd:00000000 RCC_AHB3PeriphResetCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1163   .text.RCC_AHB3PeriphResetCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1168   .text.RCC_APB1PeriphResetCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1173   .text.RCC_APB1PeriphResetCmd:00000000 RCC_APB1PeriphResetCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1201   .text.RCC_APB1PeriphResetCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1206   .text.RCC_APB2PeriphResetCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1211   .text.RCC_APB2PeriphResetCmd:00000000 RCC_APB2PeriphResetCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1239   .text.RCC_APB2PeriphResetCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1244   .text.RCC_AHB1PeriphClockLPModeCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1249   .text.RCC_AHB1PeriphClockLPModeCmd:00000000 RCC_AHB1PeriphClockLPModeCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1277   .text.RCC_AHB1PeriphClockLPModeCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1282   .text.RCC_AHB2PeriphClockLPModeCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1287   .text.RCC_AHB2PeriphClockLPModeCmd:00000000 RCC_AHB2PeriphClockLPModeCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1315   .text.RCC_AHB2PeriphClockLPModeCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1320   .text.RCC_AHB3PeriphClockLPModeCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1325   .text.RCC_AHB3PeriphClockLPModeCmd:00000000 RCC_AHB3PeriphClockLPModeCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1353   .text.RCC_AHB3PeriphClockLPModeCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1358   .text.RCC_APB1PeriphClockLPModeCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1363   .text.RCC_APB1PeriphClockLPModeCmd:00000000 RCC_APB1PeriphClockLPModeCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1391   .text.RCC_APB1PeriphClockLPModeCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1396   .text.RCC_APB2PeriphClockLPModeCmd:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1401   .text.RCC_APB2PeriphClockLPModeCmd:00000000 RCC_APB2PeriphClockLPModeCmd
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1429   .text.RCC_APB2PeriphClockLPModeCmd:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1434   .text.RCC_ITConfig:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1439   .text.RCC_ITConfig:00000000 RCC_ITConfig
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1467   .text.RCC_ITConfig:00000014 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1472   .text.RCC_GetFlagStatus:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1477   .text.RCC_GetFlagStatus:00000000 RCC_GetFlagStatus
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1518   .text.RCC_GetFlagStatus:00000024 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1523   .text.RCC_WaitForHSEStartUp:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1528   .text.RCC_WaitForHSEStartUp:00000000 RCC_WaitForHSEStartUp
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1578   .text.RCC_ClearFlag:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1583   .text.RCC_ClearFlag:00000000 RCC_ClearFlag
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1599   .text.RCC_ClearFlag:0000000c $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1604   .text.RCC_GetITStatus:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1609   .text.RCC_GetITStatus:00000000 RCC_GetITStatus
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1631   .text.RCC_GetITStatus:00000010 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1636   .text.RCC_ClearITPendingBit:00000000 $t
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1641   .text.RCC_ClearITPendingBit:00000000 RCC_ClearITPendingBit
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1656   .text.RCC_ClearITPendingBit:00000008 $d
C:\Users\STINA\AppData\Local\Temp\ccxhOEsQ.s:1664   .data.APBAHBPrescTable:00000000 APBAHBPrescTable
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
